# en_US resources
signature="sIgNaTuRe"
###
###
TaskReasonAlarm.label                                             = "Alarm task"
TaskReasonAlarm.summary                                           = "Task started by an alarm"
TaskReasonSchedule.label                                          = "Scheduled task"
TaskReasonSchedule.summary                                        = "Task started by a scheduled task"
TaskReasonSystem.label                                            = "System task"
TaskReasonSystem.summary                                          = "Task started by the server"
TaskReasonUser.label                                              = "User task"
TaskReasonUser.summary                                            = "Task started by a specific user"
###
###
VMotionManager.label                                              = "<internal>"
Catalog.label                                                     = "<internal>"
Vma1Service.label                                                 = "<internal>"
###
###
AgentManager.prepareToUpgrade.label                               = "Prepare to upgrade"
AgentManager.prepareToUpgrade.summary                             = "Deletes the content of the temporary directory on the host"
AgentManager.upgrade.label                                        = "Upgrade"
AgentManager.upgrade.summary                                      = "Validates and executes the installer/uninstaller executable uploaded to the temporary directory"
AuthorizationManager.addPermission.label                          = "Add permission"
AuthorizationManager.addPermission.summary                        = "Add a new permission for the user"
AuthorizationManager.addRole.label                                = "Add role"
AuthorizationManager.addRole.summary                              = "Add a new role"
AuthorizationManager.retrieveAllPermissions.label                 = "Get permissions"
AuthorizationManager.retrieveAllPermissions.summary               = "Get the permissions defined for all users"
AuthorizationManager.retrieveEntityPermissions.label              = "Get entity permissions"
AuthorizationManager.retrieveEntityPermissions.summary            = "Get permissions defined on an entity"
AuthorizationManager.getPrivileges.label                          = "Get privileges"
AuthorizationManager.getPrivileges.summary                        = "Gets the privilege group descriptions"
AuthorizationManager.getRoles.label                               = "Get roles"
AuthorizationManager.getRoles.summary                             = "Gets the defined roles in the system, including static system-defined roles"
AuthorizationManager.hasPrivilegeOnEntity.label                   = "Check privileges on a managed entity"
AuthorizationManager.hasPrivilegeOnEntity.summary                 = "Checks whether a session holds a set of privileges on a managed entity"
AuthorizationManager.hasPrivilegeOnEntities.label                   = "Check privileges on a set of managed entities"
AuthorizationManager.hasPrivilegeOnEntities.summary                 = "Checks whether a session holds a set of privileges on a set of managed entities"
AuthorizationManager.mergePermissions.label                       = "Reassign permissions"
AuthorizationManager.mergePermissions.summary                     = "Reassign all permissions of a role to another role"
AuthorizationManager.removeEntityPermission.label                 = "Remove entity permission"
AuthorizationManager.removeEntityPermission.summary               = "Remove a permission rule from the entity"
AuthorizationManager.removePermission.label                       = "Remove permission"
AuthorizationManager.removePermission.summary                     = "Remove a user permission"
AuthorizationManager.removeRole.label                             = "Remove role"
AuthorizationManager.removeRole.summary                           = "Remove a role"
AuthorizationManager.resetEntityPermissions.label                 = "Reset entity permission rules"
AuthorizationManager.resetEntityPermissions.summary               = "Reset permission rules on an entity to the provided set"
AuthorizationManager.retrieveRolePermissions.label                = "Get role permissions"
AuthorizationManager.retrieveRolePermissions.summary              = "Gets all the permissions that use a particular role"
AuthorizationManager.setEntityPermissions.label                   = "Set entity permission rules"
AuthorizationManager.setEntityPermissions.summary                 = "Define or update permission rules on an entity"
AuthorizationManager.updatePermission.label                       = "Update permission"
AuthorizationManager.updatePermission.summary                     = "Update a permission role"
AuthorizationManager.updateRole.label                             = "Update role"
AuthorizationManager.updateRole.summary                           = "Update a role's name and/or privileges"
AuthorizationManager.queryDisabledMethods.label                   = "Query disabled methods"
AuthorizationManager.queryDisabledMethods.summary                 = "Get the list of source objects that have been disabled on the target entity"
AuthorizationManager.disableMethods.label                         = "Disable authorization methods"
AuthorizationManager.disableMethods.summary                       = "Gets the set of method names to be disabled"
AuthorizationManager.enableMethods.label                          = "Enable authorization methods"
AuthorizationManager.enableMethods.summary                        = "Gets the set of method names to be enabled"
AuthorizationManager.queryPermissions.label                       = "Query required permissions"
AuthorizationManager.queryPermissions.summary                     = "Get the permission requirements for the specified request"
CbrcManager.configureDigest.label                                 = "Configure virtual disk digest"
CbrcManager.configureDigest.summary                               = "Controls the configuration of the digests for the virtual disks"
CbrcManager.recomputeDigest.label                                 = "Recompute virtual disk digest"
CbrcManager.recomputeDigest.summary                               = "Recomputes the digest for the given virtual disks, if necessary"
ClusterComputeResource.addHost.label                              = "Add host"
ClusterComputeResource.addHost.summary                            = "Adds a new host to the cluster"
ClusterComputeResource.addHostWithAdminDisabled.label             = "Add host and enable lockdown"
ClusterComputeResource.addHostWithAdminDisabled.summary           = "Adds a new host to the cluster and enables lockdown mode on the host"
ClusterComputeResource.addTag.label                               = "Add tag"
ClusterComputeResource.addTag.summary                             = "Add a set of tags to the cluster"
ClusterComputeResource.removeTag.label                            = "Remove tag"
ClusterComputeResource.removeTag.summary                          = "Removes a set of tags from the cluster"
ClusterComputeResource.retrieveDasAdvancedRuntimeInfo.label       = "Retrieve DAS advanced runtime information"
ClusterComputeResource.retrieveDasAdvancedRuntimeInfo.summary     = "Retrieve DAS advanced runtime information for this cluster"
ClusterComputeResource.transitionalEVCManager.label               = "Retrieve transitional EVC manager"
ClusterComputeResource.transitionalEVCManager.summary             = "Retrieve the transitional EVC manager for this cluster"
ClusterComputeResource.applyRecommendation.label                  = "Apply recommendation"
ClusterComputeResource.applyRecommendation.summary                = "Applies a recommendation"
ClusterComputeResource.cancelRecommendation.label                 = "Cancel recommendation"
ClusterComputeResource.cancelRecommendation.summary               = "Cancels a recommendation"
ClusterComputeResource.destroy.label                              = "Remove cluster"
ClusterComputeResource.destroy.summary                            = "Deletes the cluster compute-resource and removes it from its parent folder (if any)"
ClusterComputeResource.getConfiguration.label                     = "Get configuration"
ClusterComputeResource.getConfiguration.summary                   = "Gets the configuration of the cluster"
ClusterComputeResource.getConfigurationEx.label                   = "Get configuration"
ClusterComputeResource.getConfigurationEx.summary                 = "Gets the configuration of the cluster"
ClusterComputeResource.getDrsRecommendation.label                 = "Get DRS recommendation"
ClusterComputeResource.getDrsRecommendation.summary               = "Recommend migrations from the DRS module"
ClusterComputeResource.getMigrationHistory.label                  = "Get migration history"
ClusterComputeResource.getMigrationHistory.summary                = "Set of migration that has recently been performed"
ClusterComputeResource.moveHostInto.label                         = "Move host into cluster"
ClusterComputeResource.moveHostInto.summary                       = "Moves a host into the cluster"
ClusterComputeResource.moveInto.label                             = "Move host into cluster"
ClusterComputeResource.moveInto.summary                           = "Moves a set of existing hosts into the cluster"
ClusterComputeResource.recommendHostsForVm.label                  = "Recommended power On hosts"
ClusterComputeResource.recommendHostsForVm.summary                = "Get recommendations for a location to power on a specific virtual machine"
ClusterComputeResource.recommendTargetHost.label                  = "Recommended migration hosts"
ClusterComputeResource.recommendTargetHost.summary                = "Gets recommendations for a location to migrate a running virtual machine"
ClusterComputeResource.reconfigure.label                          = "Reconfigure cluster"
ClusterComputeResource.reconfigure.summary                        = "Reconfigures a cluster"
ClusterComputeResource.reconfigureEx.label                        = "Reconfigure cluster"
ClusterComputeResource.reconfigureEx.summary                      = "Reconfigures a cluster"
ClusterComputeResource.reload.label                               = "Reload cluster"
ClusterComputeResource.reload.summary                             = "Reloads the cluster"
ClusterComputeResource.rename.label                               = "Rename cluster"
ClusterComputeResource.rename.summary                             = "Rename the compute-resource"
ClusterComputeResource.setSuspendedState.label                    = "Set cluster suspended state"
ClusterComputeResource.setSuspendedState.summary                  = "Set suspended state of the cluster"
ClusterComputeResource.enterMaintenanceMode.label                 = "DRS recommends hosts to evacuate"
ClusterComputeResource.enterMaintenanceMode.summary               = "DRS recommends hosts to evacuate"
ClusterComputeResource.placeVm.label                              = "Call DRS for cross vMotion placement recommendations"
ClusterComputeResource.placeVm.summary                            = "Calls vSphere DRS for placement recommendations when migrating a VM across vCenter Server instances and virtual switches"
ClusterComputeResource.findRulesForVm.label                       = "Find rules for VM"
ClusterComputeResource.findRulesForVm.summary                     = "Locates all affinity and anti-affinity rules the specified VM participates in"
ClusterComputeResource.queryFaultToleranceCompatibleHost.label    = "Find Fault Tolerance compatible hosts for VM"
ClusterComputeResource.queryFaultToleranceCompatibleHost.summary  = "Find the set of Fault Tolerance compatible hosts for a given virtual machine"
ClusterComputeResource.queryFaultToleranceCompatibleHosts.label   = "Find Fault Tolerance compatible hosts for placing secondary VM"
ClusterComputeResource.queryFaultToleranceCompatibleHosts.summary = "Find the set of Fault Tolerance compatible hosts for placing secondary of a given primary virtual machine"
ClusterComputeResource.verifyFaultToleranceConfigSpec.label       = "Verify FaultToleranceConfigSpec"
ClusterComputeResource.verifyFaultToleranceConfigSpec.summary     = "Verify whether a given FaultToleranceConfigSpec satisfies the requirements for Fault Tolerance"
ClusterComputeResource.queryCompatibilityForFaultTolerance.label        = "Check Fault Tolerance compatibility for VM"
ClusterComputeResource.queryCompatibilityForFaultTolerance.summary      = "Check whether a VM is compatible for turning on Fault Tolerance"
ClusterComputeResource.queryFaultToleranceCompatibleDatastore.label     = "Find Fault Tolerance compatible datastores for VM and host"
ClusterComputeResource.queryFaultToleranceCompatibleDatastore.summary   = "Find the set of Fault Tolerance compatible datastores for a given virtual machine and host"
ClusterComputeResource.queryFaultToleranceCompatibleDatastores.label    = "Find Fault Tolerance compatible datastores for a VM"
ClusterComputeResource.queryFaultToleranceCompatibleDatastores.summary  = "Find the set of Fault Tolerance compatible datastores for a given virtual machine"
ComputeResource.addTag.label                                      = "Add tag"
ComputeResource.addTag.summary                                    = "Add a set of tags to this object"
ComputeResource.removeTag.label                                   = "Remove tag"
ComputeResource.removeTag.summary                                 = "Removes a set of tags from this object"
ComputeResource.destroy.label                                     = "Remove host"
ComputeResource.destroy.summary                                   = "Removes the host resource"
ComputeResource.getConfigurationEx.label                          = "Get configuration"
ComputeResource.getConfigurationEx.summary                        = "Gets the configuration of the compute-resource"
ComputeResource.getHost.label                                     = "Get host"
ComputeResource.getHost.summary                                   = "Gets the host that is part of this compute-resource"
ComputeResource.getResourcePool.label                             = "Get resource pool"
ComputeResource.getResourcePool.summary                           = "Gets the reference to root resource pool"
ComputeResource.getSummary.label                                  = "Get compute-resource summary"
ComputeResource.getSummary.summary                                = "Gets the basic runtime information about a compute-resource"
ComputeResource.getType.label                                     = "Get compute-resource type"
ComputeResource.getType.summary                                   = "Gets the type of compute-resource"
ComputeResource.reconfigureEx.label                               = "Reconfigure compute-resource"
ComputeResource.reconfigureEx.summary                             = "Reconfigures a compute-resource"
ComputeResource.reload.label                                      = "Reload resource"
ComputeResource.reload.summary                                    = "Reloads the resource"
ComputeResource.rename.label                                      = "Rename compute-resource"
ComputeResource.rename.summary                                    = "Rename the compute-resource"
ConfigOptionManager.queryView.label                               = "Get node hierarchy"
ConfigOptionManager.queryView.summary                             = "Get a specific node or entire subtree in the hierarchy"
ConfigOptionManager.updateValues.label                            = "Update node"
ConfigOptionManager.updateValues.summary                          = "Updates one or more properties"
CustomFieldsManager.addFieldDefinition.label                      = "Add custom field"
CustomFieldsManager.addFieldDefinition.summary                    = "Creates a new custom property"
CustomFieldsManager.getfield.label                                = "Get custom fields"
CustomFieldsManager.getfield.summary                              = "Get the list of custom fields defined on this server"
CustomFieldsManager.removeFieldDefinition.label                   = "Remove custom field"
CustomFieldsManager.removeFieldDefinition.summary                 = "Removes a custom property"
CustomFieldsManager.renameFieldDefinition.label                   = "Rename custom property"
CustomFieldsManager.renameFieldDefinition.summary                 = "Renames a custom property"
CustomFieldsManager.setField.label                                = "Set custom field"
CustomFieldsManager.setField.summary                              = "Assigns a value to a custom property"
CustomizationSpecManager.checkResources.label                     = "Validate required resources"
CustomizationSpecManager.checkResources.summary                   = "Validate that required resources are available on the server to customize a particular guest operating system"
CustomizationSpecManager.create.label                             = "Create new specification"
CustomizationSpecManager.create.summary                           = "Create a new specification"
CustomizationSpecManager.delete.label                             = "Delete specification"
CustomizationSpecManager.delete.summary                           = "Delete a specification"
CustomizationSpecManager.duplicate.label                          = "Duplicate specification"
CustomizationSpecManager.duplicate.summary                        = "Duplicate a specification"
CustomizationSpecManager.exists.label                             = "Specification exists"
CustomizationSpecManager.exists.summary                           = "Check the existence of a specification"
CustomizationSpecManager.exportItem.label                         = "Export specification"
CustomizationSpecManager.exportItem.summary                       = "Export a specification from the database to the client as XML text"
CustomizationSpecManager.get.label                                = "Get specification"
CustomizationSpecManager.get.summary                              = "Gets a specification"
CustomizationSpecManager.getinfo.label                            = "Get specification information"
CustomizationSpecManager.getinfo.summary                          = "Get a list of information on available specification"
CustomizationSpecManager.importItem.label                         = "Import specification"
CustomizationSpecManager.importItem.summary                       = "Import a specification item previously exported to the database"
CustomizationSpecManager.overwrite.label                          = "Overwrite specification"
CustomizationSpecManager.overwrite.summary                        = "Overwrite an existing specification"
CustomizationSpecManager.rename.label                             = "Rename specification"
CustomizationSpecManager.rename.summary                           = "Rename a specification"
CustomizationSpecManager.specItemToXml.label                      = "Convert specification item"
CustomizationSpecManager.specItemToXml.summary                    = "Convert a specification item to XML text"
CustomizationSpecManager.xmlToSpecItem.label                      = "Convert XML item"
CustomizationSpecManager.xmlToSpecItem.summary                    = "Convert an XML string to a specification item"
Datacenter.SetMacAddressPool.label                                = "Set MAC address pool"
Datacenter.SetMacAddressPool.summary                              = "Defines the MAC address pool to use"
Datacenter.destroy.label                                          = "Remove datacenter"
Datacenter.destroy.summary                                        = "Deletes the datacenter and removes it from its parent folder (if any)"
Datacenter.getConfiguration.label                                 = "Get configuration"
Datacenter.getConfiguration.summary                               = "Gets the configuration of the datacenter"
Datacenter.getDatastore.label                                     = "Get datastore"
Datacenter.getDatastore.summary                                   = "Gets a collection of references to datastores"
Datacenter.getHostFolder.label                                    = "Get host folder"
Datacenter.getHostFolder.summary                                  = "Gets a reference to hosts and clusters"
Datacenter.getMacAddressPool.label                                = "Get MAC address pool"
Datacenter.getMacAddressPool.summary                              = "Gets an optional MAC address pool"
Datacenter.getNetwork.label                                       = "Get network"
Datacenter.getNetwork.summary                                     = "Gets a collection of references to the network"
Datacenter.getVmFolder.label                                      = "Get virtual machine folder"
Datacenter.getVmFolder.summary                                    = "Gets a reference to the virtual machine folder"
Datacenter.queryConfigOptionDescriptor.label                      = "Query configuration option descriptor"
Datacenter.queryConfigOptionDescriptor.summary                    = "Retrieve the list of configuration option keys available in this datacenter"
Datacenter.queryConnectionInfo.label                              = "Query connection information"
Datacenter.queryConnectionInfo.summary                            = "Gets information of a host that can be used in the connection wizard"
Datacenter.reconfigure.label                                      = "Reconfigure datacenter"
Datacenter.reconfigure.summary                                    = "Reconfigures the datacenter"
Datacenter.reload.label                                           = "Reload datacenter"
Datacenter.reload.summary                                         = "Reloads the datacenter"
Datacenter.rename.label                                           = "Rename datacenter"
Datacenter.rename.summary                                         = "Rename the datacenter"
Datastore.destroy.label                                           = "Remove datastore"
Datastore.destroy.summary                                         = "Removes a datastore if it is not used by any host or virtual machine"
Datastore.getHost.label                                           = "Get hosts"
Datastore.getHost.summary                                         = "Gets hosts attached to this datastore"
Datastore.getSummary.label                                        = "Get datastore summary"
Datastore.getSummary.summary                                      = "Gets global properties of datastore"
Datastore.getVm.label                                             = "Get virtual machines on datastore"
Datastore.getVm.summary                                           = "Gets virtual machines stored on this datastore"
Datastore.refresh.label                                           = "Refresh datastore"
Datastore.refresh.summary                                         = "Refreshes free space on this datastore"
Datastore.rename.label                                            = "Rename datastore"
Datastore.rename.summary                                          = "Renames a datastore"
Datastore.isNativeCloneCapable.label                              = "Get native clone capability"
Datastore.isNativeCloneCapable.summary                            = "Check if the datastore supports native clone"
Datastore.cleanupLocks.label                                      = "Cleanup locks"
Datastore.cleanupLocks.summary                                    = "Cleanup lock files on NFSV3 datastore"
DatastoreNamespaceManager.CreateDirectory.label                   = "Create directory"
DatastoreNamespaceManager.CreateDirectory.summary                 = "Creates a top-level directory on the specified datastore"
DatastoreNamespaceManager.DeleteDirectory.label                   = "Delete directory"
DatastoreNamespaceManager.DeleteDirectory.summary                 = "Deletes the specified top-level directory from the datastore"
DiagnosticManager.browse.label                                    = "Browse diagnostic manager"
DiagnosticManager.browse.summary                                  = "Returns part of a log file"
DiagnosticManager.download.label                                  = "Download diagnostic manager"
DiagnosticManager.download.summary                                = "Get the log as a raw binary file"
DiagnosticManager.queryDescriptions.label                         = "Get diagnostic files"
DiagnosticManager.queryDescriptions.summary                       = "Gets the list of diagnostic files for a given system"
DiagnosticManager.generateLogBundles.label                        = "Generate system logs bundles"
DiagnosticManager.generateLogBundles.summary                      = "Instructs the server to generate system logs bundles"
DiskManager.Lease.release.label                                   = "Release lease"
DiskManager.Lease.release.summary                                 = "Stop the lease if it is still active"
DiskManager.Lease.renew.label                                     = "Renew lease"
DiskManager.Lease.renew.summary                                   = "Renew a lease to prevent it from timing out"
DiskManager.acquireLease.label                                    = "Acquire lease"
DiskManager.acquireLease.summary                                  = "Acquire a lease for the files associated with the virtual disk"
EnvironmentBrowser.getDatastoreBrowser.label                      = "Get datastore browser"
EnvironmentBrowser.getDatastoreBrowser.summary                    = "Get datastore browser to browse datastores that are available on this entity"
EnvironmentBrowser.queryConfigOption.label                        = "Configure option query"
EnvironmentBrowser.queryConfigOption.summary                      = "Search for a specific configuration option"
EnvironmentBrowser.queryConfigTarget.label                        = "Query configuration target"
EnvironmentBrowser.queryConfigTarget.summary                      = "Search for a specific configuration target"
EnvironmentBrowser.queryConfigOptionDescriptor.label              = "Query configuration option descriptor"
EnvironmentBrowser.queryConfigOptionDescriptor.summary            = "Get the list of configuration option keys available in this browser"
ExtensionManager.findExtension.label                              = "Find extension"
ExtensionManager.findExtension.summary                            = "Find an extension"
ExtensionManager.getPublicKey.label                               = "Get server public key"
ExtensionManager.getPublicKey.summary                             = "Get vCenter Server's public key"
ExtensionManager.queryExtensionIpAllocationUsage.label            = "Query statistics about IP allocation usage"
ExtensionManager.queryExtensionIpAllocationUsage.summary          = "Query statistics about IP allocation usage, system-wide or for specified extensions"
ExtensionManager.registerExtension.label                          = "Register extension"
ExtensionManager.registerExtension.summary                        = "Registers an extension"
ExtensionManager.setPublicKey.label                               = "Set extension public key"
ExtensionManager.setPublicKey.summary                             = "Set public key of the extension"
ExtensionManager.setCertificate.label                             = "Set extension certificate"
ExtensionManager.setCertificate.summary                           = "Update the stored authentication certificate for a specified extension"
ExtensionManager.unregisterExtension.label                        = "Unregister extension"
ExtensionManager.unregisterExtension.summary                      = "Unregisters an extension"
ExtensionManager.updateExtension.label                            = "Update extension"
ExtensionManager.updateExtension.summary                          = "Updates extension information"
Folder.addStandaloneHost.label                                    = "Add standalone host"
Folder.addStandaloneHost.summary                                  = "Create a new single-host compute-resource"
Folder.addStandaloneHostsFromCluster.label                        = "Add standalone hosts from cluster"
Folder.addStandaloneHostsFromCluster.summary                      = "Creates a set of standalone hosts from existing hosts in a cluster"
Folder.addStandaloneHostWithAdminDisabled.label                   = "Add standalone host and enable lockdown"
Folder.addStandaloneHostWithAdminDisabled.summary                 = "Create a new single-host compute-resource and enable lockdown mode on the host"
Folder.createCluster.label                                        = "Create cluster"
Folder.createCluster.summary                                      = "Create a new cluster compute-resource in this folder"
Folder.createClusterEx.label                                      = "Create cluster"
Folder.createClusterEx.summary                                    = "Create a new cluster compute-resource in this folder"
Folder.createDatacenter.label                                     = "Create datacenter"
Folder.createDatacenter.summary                                   = "Create a new datacenter with the given name"
Folder.createFolder.label                                         = "Create folder"
Folder.createFolder.summary                                       = "Creates a new folder"
Folder.createVm.label                                             = "Create virtual machine"
Folder.createVm.summary                                           = "Create a new virtual machine"
Folder.destroy.label                                              = "Delete folder"
Folder.destroy.summary                                            = "Delete this object, deleting its contents and removing it from its parent folder (if any)"
Folder.importVm.label                                             = "Import virtual machine"
Folder.importVm.summary                                           = "Creates a virtual machine inventory object based on a set of virtual machines files on disk"
Folder.moveInto.label                                             = "Move entities"
Folder.moveInto.summary                                           = "Moves a set of managed entities into this folder"
Folder.registerVm.label                                           = "Register virtual machine"
Folder.registerVm.summary                                         = "Adds an existing virtual machine to the folder"
Folder.reload.label                                               = "Reload folder"
Folder.reload.summary                                             = "Reloads the folder"
Folder.rename.label                                               = "Rename folder"
Folder.rename.summary                                             = "Rename the folder"
Folder.unregisterAndDestroy.label                                 = "Unregister and Delete"
Folder.unregisterAndDestroy.summary                               = "Recursively deletes all child virtual machine folders and unregisters all virtual machines"
Folder.createDistributedVirtualSwitch.label                       = "Create a vSphere Distributed Switch"
Folder.createDistributedVirtualSwitch.summary                     = "Create a vSphere Distributed Switch"
HistoryCollector.changePageSize.label                             = "Change page size"
HistoryCollector.changePageSize.summary                           = "Changes the page size of collected history data"
HistoryCollector.getFilter.label                                  = "Get filter"
HistoryCollector.getFilter.summary                                = "Gets the filter used to create this collector"
HistoryCollector.getLatest.label                                  = "Get latest object"
HistoryCollector.getLatest.summary                                = "Gets the latest object in the collector"
HistoryCollector.getLength.label                                  = "Get length"
HistoryCollector.getLength.summary                                = "Gets the total number of records in the database"
HistoryCollector.getNextPage.label                                = "Next page"
HistoryCollector.getNextPage.summary                              = "Get the next page of history data"
HistoryCollector.getPageSize.label                                = "Get page size"
HistoryCollector.getPageSize.summary                              = "Gets number of records to retrieve in each page"
HistoryCollector.getPrevPage.label                                = "Previous page"
HistoryCollector.getPrevPage.summary                              = "Get the previous page of history data"
HistoryCollector.moveTo.label                                     = "Move to page"
HistoryCollector.moveTo.summary                                   = "Move to specific page"
HistoryCollector.moveToBottom.label                               = "Move to bottom"
HistoryCollector.moveToBottom.summary                             = "Move to the bottom page in the collector"
HistoryCollector.moveToTop.label                                  = "Move to top"
HistoryCollector.moveToTop.summary                                = "Move to the top page in the collector"
HistoryCollector.readNext.label                                   = "Read next"
HistoryCollector.readNext.summary                                 = "The scroll position is moved to the next newer page after the read"
HistoryCollector.readPrev.label                                   = "Read previous"
HistoryCollector.readPrev.summary                                 = "The scroll position is moved to the next older page after the read"
HistoryCollector.remove.label                                     = "Remove collector"
HistoryCollector.remove.summary                                   = "Remove the collector from server"
HistoryCollector.reset.label                                      = "Reset"
HistoryCollector.reset.summary                                    = "Move the scroll position to the item just above the last page viewed"
HistoryCollector.rewind.label                                     = "Rewind"
HistoryCollector.rewind.summary                                   = "Move the scroll position to the oldest item"
HistoryCollector.setLatestPageSize.label                          = "Set latest page size"
HistoryCollector.setLatestPageSize.summary                        = "Set the last page viewed size and contain at most maxCount items in the page"
HostSystem.applyProfile.label                                     = "Apply profile"
HostSystem.applyEvcMode.label                                     = "Apply EVC mode"
HostSystem.applyEvcMode.summary                                   = "Applies an EVC mode to a host"
HostSystem.applyMockupFeatures.label                              = "Apply mockup features"
HostSystem.applyMockupFeatures.summary                            = "Applies mockup feature capabilities to a host"
HostSystem.destroy.label                                          = "Remove host"
HostSystem.destroy.summary                                        = "Removes the host"
HostSystem.disconnect.label                                       = "Disconnect host"
HostSystem.disconnect.summary                                     = "Disconnects from a host"
HostSystem.enterMaintenanceMode.label                             = "Enter maintenance mode"
HostSystem.enterMaintenanceMode.summary                           = "Puts the host in maintenance mode"
HostSystem.exitMaintenanceMode.label                              = "Exit maintenance mode"
HostSystem.exitMaintenanceMode.summary                            = "Disables maintenance mode"
HostSystem.getCapability.label                                    = "Get host capability"
HostSystem.getCapability.summary                                  = "Gets host capabilities"
HostSystem.getConfig.label                                        = "Get host configuration"
HostSystem.getConfig.summary                                      = "Gets configuration information of the host"
HostSystem.getConfigManager.label                                 = "Configuration manager"
HostSystem.getConfigManager.summary                               = "Gets configuration of host systems"
HostSystem.getEnvironment.label                                   = "Get host environment"
HostSystem.getEnvironment.summary                                 = "Get environment for virtual machines to run"
HostSystem.getHardwareInfo.label                                  = "Get host hardware information"
HostSystem.getHardwareInfo.summary                                = "Gets hardware configuration of the host"
HostSystem.getLlProvisioningManager.label                         = "Provisioning manager"
HostSystem.getLlProvisioningManager.summary                       = "Returns a manager that allows creating and removing virtual machines without registering them in the inventory"
HostSystem.getSavedConfig.label                                   = "Get host saved configuration"
HostSystem.getSavedConfig.summary                                 = "Gets a copy of host configuration that user stored"
HostSystem.getSummary.label                                       = "Get host summary"
HostSystem.getSummary.summary                                     = "Gets the basic information about the host including connection state"
HostSystem.getVm.label                                            = "Get host virtual machines"
HostSystem.getVm.summary                                          = "Gets the list of virtual machines associated with the host"
HostSystem.queryConnectInfo.label                                 = "Query host connect information"
HostSystem.queryConnectInfo.summary                               = "Connection information about a host"
HostSystem.queryConnectionInfo.label                              = "Query connection information"
HostSystem.queryConnectionInfo.summary                            = "Connection information about a host"
HostSystem.queryOverhead.label                                    = "Query host overhead"
HostSystem.queryOverhead.summary                                  = "Determines the amount of memory overhead necessary to power on a virtual machine with the specified characteristics"
HostSystem.queryTpmAttestationReport.label                        = "Query TPM attestation information"
HostSystem.queryTpmAttestationReport.summary                      = "Provides details of the secure boot and TPM status"
HostSystem.reboot.label                                           = "Initiate host reboot"
HostSystem.reboot.summary                                         = "Initiates a host reboot"
HostSystem.reconnect.label                                        = "Reconnect host"
HostSystem.reconnect.summary                                      = "Reconnects to a host"
HostSystem.reload.label                                           = "Reload host system"
HostSystem.reload.summary                                         = "Reloads the host system"
HostSystem.rename.label                                           = "Rename host"
HostSystem.rename.summary                                         = "Rename this host"
HostSystem.reconfigureDAS.label                                   = "Reconfigure vSphere HA host"
HostSystem.reconfigureDAS.summary                                 = "Reconfigures the host for vSphere HA"
HostSystem.shutdown.label                                         = "Initiate host shutdown"
HostSystem.shutdown.summary                                       = "Initiates a host shutdown"
HostSystem.testEvcMode.label                                      = "Test EVC mode"
HostSystem.testEvcMode.summary                                    = "Test an EVC mode on a host"
HostSystem.enterStandbyMode.label                                 = "Enter standby mode"
HostSystem.enterStandbyMode.summary                               = "Puts this host into standby mode"
HostSystem.exitStandbyMode.label                                  = "Exit standby mode"
HostSystem.exitStandbyMode.summary                                = "Brings this host out of standby mode"
HostSystem.updateSystemResources.label                            = "Update system resources"
HostSystem.updateSystemResources.summary                          = "Update the configuration of the system resource hierarchy"
HostSystem.updateSystemSwapConfiguration.label                    = "Update system swap configuration"
HostSystem.updateSystemSwapConfiguration.summary                  = "Update the configuration of the system swap"
HostSystem.disableAdmin.label                                     = "Enable lockdown mode"
HostSystem.disableAdmin.summary                                   = "Enable lockdown mode on this host"
HostSystem.enableAdmin.label                                      = "Disable lockdown mode"
HostSystem.enableAdmin.summary                                    = "Disable lockdown mode on this host"
HostSystem.enterLockdownMode.label                                = "Enable lockdown mode"
HostSystem.enterLockdownMode.summary                              = "Enable lockdown mode on this host"
HostSystem.exitLockdownMode.label                                 = "Disable lockdown mode"
HostSystem.exitLockdownMode.summary                               = "Disable lockdown mode on this host"
HostSystem.checkCertificateTrusted.label                          = "Check whether the certificate is trusted by vCenter Server"
HostSystem.checkCertificateTrusted.summary                        = "Checks whether the certificate matches the host certificate that vCenter Server trusts"
ImageLibraryManager.ViLibrary.fetchToken.label                    = "Retrieve authentication token"
ImageLibraryManager.ViLibrary.fetchToken.summary                  = "Get an authentication token for the user to access the Image Library server"
ImageLibraryManager.addLibrary.label                              = "Add an image library"
ImageLibraryManager.addLibrary.summary                            = "Register an image library server with vCenter"
ImageLibraryManager.exportMediaToLibrary.label                    = "Export to image library"
ImageLibraryManager.exportMediaToLibrary.summary                  = "Export files to the image library"
ImageLibraryManager.importLibraryMedia.label                      = "Import from image library"
ImageLibraryManager.importLibraryMedia.summary                    = "Import files from the image library"
ImageLibraryManager.publishMediaToLibrary.label                   = "Publish to image library"
ImageLibraryManager.publishMediaToLibrary.summary                 = "Publish files from datastore to image library"
ImageLibraryManager.removeLibrary.label                           = "Remove an image library"
ImageLibraryManager.removeLibrary.summary                         = "Unregister an image library server from vCenter"
IpPoolManager.createIpPool.label                                  = "Create network protocol profile"
IpPoolManager.createIpPool.summary                                = "Creates a new network protocol profile"
IpPoolManager.destroyIpPool.label                                 = "Destroy network protocol profile"
IpPoolManager.destroyIpPool.summary                               = "Destroys a network protocol profile on the given datacenter"
IpPoolManager.updateIpPool.label                                  = "Update network protocol profile"
IpPoolManager.updateIpPool.summary                                = "Updates a network protocol profile on a datacenter"
IpPoolManager.allocateIpv4Address.label                           = "Allocates an IPv4 address"
IpPoolManager.allocateIpv4Address.summary                         = "Allocates an IPv4 address from an IP pool"
IpPoolManager.allocateIpv6Address.label                           = "Allocates an IPv6 address"
IpPoolManager.allocateIpv6Address.summary                         = "Allocates an IPv6 address from an IP pool"
IpPoolManager.releaseIpAllocation.label                           = "Releases an IP allocation"
IpPoolManager.releaseIpAllocation.summary                         = "Releases an IP allocation back to an IP pool"
IpPoolManager.queryIPAllocations.label                            = "Query IP allocations"
IpPoolManager.queryIPAllocations.summary                          = "Query IP allocations by IP pool and extension key"
LicenseManager.querySourceAvailability.label                      = "Query license source"
LicenseManager.querySourceAvailability.summary                    = "Searches the current license source for licenses available for each feature known to this system"
LicenseManager.queryUsage.label                                   = "Query license usage"
LicenseManager.queryUsage.summary                                 = "Returns the list of features and the number of licenses that have been reserved"
LicenseManager.acquire.label                                      = "Acquire license"
LicenseManager.acquire.summary                                    = "Acquire licenses for a hardware configuration feature"
LicenseManager.removeLabel.label                                  = "Remove license label"
LicenseManager.removeLabel.summary                                = "Removes a license's label"
LicenseManager.updateLabel.label                                  = "Update license label"
LicenseManager.updateLabel.summary                                = "Update a license's label"
LicenseManager.enable.label                                       = "Enable license"
LicenseManager.enable.summary                                     = "Enable a feature that is marked as user-configurable"
LicenseManager.disable.label                                      = "Disable license"
LicenseManager.disable.summary                                    = "Release licenses for a user-configurable feature"
LicenseManager.configureSource.label                              = "Configure license source"
LicenseManager.configureSource.summary                            = "Allows reconfiguration of the License Manager license source"
LicenseManager.uploadLocalContent.label                           = "Upload local license content"
LicenseManager.uploadLocalContent.summary                         = "Allows changing license content in the local source"
LicenseManager.queryReservation.label                             = "Query license reservation"
LicenseManager.queryReservation.summary                           = "Get reservations made for features for this License Manager"
LicenseManager.setEdition.label                                   = "Set product edition"
LicenseManager.setEdition.summary                                 = "Defines the product edition"
LicenseManager.checkFeature.label                                 = "Check feature"
LicenseManager.checkFeature.summary                               = "Checks if a feature is enabled"
LicenseAssignmentManager.queryAssignedLicenses.label              = "Query assigned licenses"
LicenseAssignmentManager.queryAssignedLicenses.summary            = "Queries for all the licenses assigned to an entity or all entities"
LicenseAssignmentManager.removeAssignedLicense.label              = "Remove assigned license"
LicenseAssignmentManager.removeAssignedLicense.summary            = "Removes an assignment of a license to an entity"
LicenseAssignmentManager.updateAssignedLicense.label              = "Update assigned license"
LicenseAssignmentManager.updateAssignedLicense.summary            = "Updates the license assigned to an entity"
LicenseManager.addLicense.label                                   = "Add license"
LicenseManager.addLicense.summary                                 = "Adds a new license to the license inventory"
LicenseManager.decodeLicense.label                                = "Decode license"
LicenseManager.decodeLicense.summary                              = "Decodes the license to return the properties of that license key"
LicenseManager.removeLicense.label                                = "Remove license"
LicenseManager.removeLicense.summary                              = "Removes a license from the license inventory"
LicenseManager.activateRemoteHardEnforcement.label                = "Activate remote hard enforcement"
LicenseManager.activateRemoteHardEnforcement.summary              = "Activates the remote hard enforcement"
ManagedEntity.changeNode.label                                    = "Change node"
ManagedEntity.changeNode.summary                                  = "Move this object to a different folder and/or rename it"
ManagedEntity.destroy.label                                       = "Remove entity"
ManagedEntity.destroy.summary                                     = "Deletes the entity and removes it from parent folder"
ManagedEntity.getChildEntity.label                                = "Get child entity"
ManagedEntity.getChildEntity.summary                              = "Gets list of child types"
ManagedEntity.getChildType.label                                  = "Get child entity type"
ManagedEntity.getChildType.summary                                = "Gets the list of child types"
ManagedEntity.getCustomValues.label                               = "Get entity custom values"
ManagedEntity.getCustomValues.summary                             = "Gets custom property values"
ManagedEntity.getEffectiveRole.label                              = "Get entity effective role"
ManagedEntity.getEffectiveRole.summary                            = "Gets current session's access rights"
ManagedEntity.getName.label                                       = "Get entity name"
ManagedEntity.getName.summary                                     = "Gets the unique name relative to parent folder"
ManagedEntity.getOverallStatus.label                              = "Get entity overall status"
ManagedEntity.getOverallStatus.summary                            = "Gets overall general health"
ManagedEntity.getParentNode.label                                 = "Get entity parent node"
ManagedEntity.getParentNode.summary                               = "Gets parent node"
ManagedEntity.getPermission.label                                 = "Get entity permissions"
ManagedEntity.getPermission.summary                               = "Gets defined permissions "
ManagedEntity.reload.label                                        = "Reload managed entity"
ManagedEntity.reload.summary                                      = "Reload the entity state"
ManagedEntity.rename.label                                        = "Rename managed entity"
ManagedEntity.rename.summary                                      = "Rename this entity"
Network.changeConfig.label                                        = "Change configuration"
Network.changeConfig.summary                                      = "Change configuration"
Network.changeNetworkConfig.label                                 = "Change network configuration"
Network.changeNetworkConfig.summary                               = "Changes the network configuration"
Network.destroy.label                                             = "Delete network"
Network.destroy.summary                                           = "Deletes a network if it is not used by any host or virtual machine"
Network.getConfig.label                                           = "Get network configuration"
Network.getConfig.summary                                         = "Gets the configuration of the network"
Network.getDuplicateConfigurations.label                          = "Get duplicate network configuration"
Network.getDuplicateConfigurations.summary                        = "Get a list of entities that are configured with duplicate IP addresses"
Network.getHost.label                                             = "Get network host"
Network.getHost.summary                                           = "Gets the hosts attached to the network"
Network.getInvalidConfigurations.label                            = "Get invalid network configuration"
Network.getInvalidConfigurations.summary                          = "Get a list of entities with invalid IP addresses"
Network.getSummary.label                                          = "Get network summary"
Network.getSummary.summary                                        = "Gets the properties of a network"
Network.getVm.label                                               = "Get network virtual machines"
Network.getVm.summary                                             = "Virtual machines using this network"
Network.usageSummary.label                                        = "Network usage summary"
Network.usageSummary.summary                                      = "Get a list of IP usage on this network"
Network.updateIpConfig.label                                      = "Change network IP configuration"
Network.updateIpConfig.summary                                    = "Updates information about the IP-level configuration used on this network"
OpaqueNetwork.destroy.label                                       = "Delete opaque network"
OpaqueNetwork.destroy.summary                                     = "Deletes an opaque network if it is not used by any host or virtual machine"
NfcService.randomAccessOpen.label                                 = "Open remote disk for read/write"
NfcService.randomAccessOpen.summary                               = "Opens a disk on a virtual machine for read/write access"
NfcService.randomAccessOpenReadonly.label                         = "Open remote disk for read"
NfcService.randomAccessOpenReadonly.summary                       = "Opens a disk on a virtual machine for read access"
NfcService.getVmFiles.label                                       = "Read virtual machine files"
NfcService.getVmFiles.summary                                     = "Read files associated with a virtual machine"
NfcService.putVmFiles.label                                       = "Write virtual machine files"
NfcService.putVmFiles.summary                                     = "Write files associated with a virtual machine"
PerformanceManager.summarizeStats.label                           = "Summarizes performance statistics"
PerformanceManager.summarizeStats.summary                         = "Summarizes performance statistics at the specified interval"
PerformanceManager.createHistoricalInterval.label                 = "Create historical interval"
PerformanceManager.createHistoricalInterval.summary               = "Add a new historical interval configuration"
PerformanceManager.getDescription.label                           = "Get performance description"
PerformanceManager.getDescription.summary                         = "Get localized description of strings used in performance statistics"
PerformanceManager.getHistoricalInterval.label                    = "Get historical intervals"
PerformanceManager.getHistoricalInterval.summary                  = "Gets all configured historical sampling intervals"
PerformanceManager.query.label                                    = "Query entity metrics"
PerformanceManager.query.summary                                  = "Retrieve performance statistics for specified metrics for all the entities that are listed in entity argument"
PerformanceManager.queryAvailableMetric.label                     = "Query available metrics"
PerformanceManager.queryAvailableMetric.summary                   = "Gets available performance statistic metrics for the specified managed entity between begin and end times"
PerformanceManager.queryCompositeStats.label                      = "Get composite statistics"
PerformanceManager.queryCompositeStats.summary                    = "Get performance statistics for the entity and the breakdown across its child entities"
PerformanceManager.queryCounter.label                             = "Query counter"
PerformanceManager.queryCounter.summary                           = "Get counter information for the list of counter IDs passed in"
PerformanceManager.queryCurrent.label                             = "Query current performance statistics"
PerformanceManager.queryCurrent.summary                           = "Return current counter values of performance metrics specified for a particular entity"
PerformanceManager.queryDeviceInfo.label                          = "Query device information"
PerformanceManager.queryDeviceInfo.summary                        = "Query device information"
PerformanceManager.queryEntity.label                              = "Query an entity"
PerformanceManager.queryEntity.summary                            = "Returns statistics for a particular entity"
PerformanceManager.queryPerfCounter.label                         = "Query performance counter"
PerformanceManager.queryPerfCounter.summary                       = "Get performance counter information for a list of counter IDs"
PerformanceManager.queryProviderSummary.label                     = "Query entity provider summary"
PerformanceManager.queryProviderSummary.summary                   = "Get information about the performance statistics that can be queried for a particular entity"
PerformanceManager.queryStats.label                               = "Query performance statistics"
PerformanceManager.queryStats.summary                             = "Gets the performance statistics for the entity"
PerformanceManager.querySummary.label                             = "Query summarized performance statistics"
PerformanceManager.querySummary.summary                           = "Gets the summarized performance statistics for the entity"
PerformanceManager.querySupportedCounter.label                    = "Query supported counters"
PerformanceManager.querySupportedCounter.summary                  = "Gets the counter information for all supported performance counters on the specified entity"
PerformanceManager.querySupportedPerfCounter.label                = "Query supported performance counters"
PerformanceManager.querySupportedPerfCounter.summary              = "Gets all supported performance counters on the specified entity"
PerformanceManager.removeHistoricalInterval.label                 = "Remove historical interval"
PerformanceManager.removeHistoricalInterval.summary               = "Remove a historical interval configuration"
PerformanceManager.resetCounterLevelMapping.label                 = "Reset counter level mapping"
PerformanceManager.resetCounterLevelMapping.summary               = "Reset counter to level mapping to the default values"
PerformanceManager.updateCounterLevelMapping.label                = "Update counter level mapping"
PerformanceManager.updateCounterLevelMapping.summary              = "Update counter to level mapping"
PerformanceManager.updateHistoricalInterval.label                 = "Update historical interval"
PerformanceManager.updateHistoricalInterval.summary               = "Update a historical interval configuration if it exists"
PolicyManager.definePolicy.label                                  = "Define or modify policy"
PolicyManager.definePolicy.summary                                = "Create a policy or reconfigure an existing one"
PolicyManager.deletePolicy.label                                  = "Delete policy"
PolicyManager.deletePolicy.summary                                = "Delete an existing policy"
PolicyManager.editEntities.label                                  = "Edit policy"
PolicyManager.editEntities.summary                                = "Change the entities associated with a policy"
PolicyManager.queryPolicy.label                                   = "Query policy"
PolicyManager.queryPolicy.summary                                 = "Get information about the specified policy"
PolicyManager.setPolicyState.label                                = "Set policy state"
PolicyManager.setPolicyState.summary                              = "Change the policy state"
PropertyCollector.Filter.destroy.label                            = "Delete filter"
PropertyCollector.Filter.destroy.summary                          = "Delete this filter"
PropertyCollector.Filter.getPartialUpdates.label                  = "Get partial updates"
PropertyCollector.Filter.getPartialUpdates.summary                = "Generates partial updates"
PropertyCollector.Filter.getSpec.label                            = "Get filter specification"
PropertyCollector.Filter.getSpec.summary                          = "Gets the specifications for this filter"
PropertyCollector.Filter.refresh.label                            = "Refresh filter data"
PropertyCollector.Filter.refresh.summary                          = "Refresh the property collector data for this filter"
PropertyCollector.cancelWaitForUpdates.label                      = "Cancel update wait"
PropertyCollector.cancelWaitForUpdates.summary                    = "Cancels the delay for updates"
PropertyCollector.checkForUpdates.label                           = "Check for property updates"
PropertyCollector.checkForUpdates.summary                         = "Check for property updates"
PropertyCollector.createFilter.label                              = "Create property filter"
PropertyCollector.createFilter.summary                            = "Create a new property collector filter"
PropertyCollector.getFilter.label                                 = "Get property filter"
PropertyCollector.getFilter.summary                               = "Gets the set of property collector filters"
PropertyCollector.retrieveContents.label                          = "Retrieve property contents"
PropertyCollector.retrieveContents.summary                        = "Retrieves the specified contents"
PropertyCollector.waitForUpdates.label                            = "Wait for property updates"
PropertyCollector.waitForUpdates.summary                          = "Wait for property updates"
ResourceManager.maxOpsPerHost.label                               = "Maximum operations per host"
ResourceManager.maxOpsPerHost.summary                             = "Maximum operations per host"
ResourcePlanningManager.estimateDatabaseSize.label                = "Estimate database size"
ResourcePlanningManager.estimateDatabaseSize.summary              = "Estimates the database size required to store VirtualCenter data"
ResourcePool.createResourcePool.label                             = "Create resource pool"
ResourcePool.createResourcePool.summary                           = "Creates a new resource pool"
ResourcePool.destroy.label                                        = "Delete resource pool"
ResourcePool.destroy.summary                                      = "Delete the resource pool, which also deletes its contents and removes it from its parent folder (if any)"
ResourcePool.destroyChildren.label                                = "Delete resource pool children"
ResourcePool.destroyChildren.summary                              = "Removes all child resource pools recursively"
ResourcePool.getChildConfiguration.label                          = "Get resource pool child configuration"
ResourcePool.getChildConfiguration.summary                        = "Returns the resource configuration of all direct child nodes of the resource group"
ResourcePool.getConfig.label                                      = "Get resource pool configuration"
ResourcePool.getConfig.summary                                    = "Gets the configuration of the resource pool"
ResourcePool.getOwner.label                                       = "Get resource pool owner"
ResourcePool.getOwner.summary                                     = "Gets the resource pool tree that belongs to the owner"
ResourcePool.getSummary.label                                     = "Get resource pool summary"
ResourcePool.getSummary.summary                                   = "Gets the basic information about a resource pool"
ResourcePool.getVm.label                                          = "Get resource pool virtual machine"
ResourcePool.getVm.summary                                        = "Gets the set of virtual machines associated with this resource pool"
ResourcePool.moveInto.label                                       = "Move into resource pool"
ResourcePool.moveInto.summary                                     = "Moves a set of resource pools or virtual machines into this pool"
ResourcePool.refreshRuntime.label                                 = "Refresh resource runtime information"
ResourcePool.refreshRuntime.summary                               = "Refreshes the resource usage runtime information"
ResourcePool.reload.label                                         = "Reload resource pool"
ResourcePool.reload.summary                                       = "Reload the resource pool"
ResourcePool.rename.label                                         = "Rename resource pool"
ResourcePool.rename.summary                                       = "Rename the resource pool"
ResourcePool.updateChildResourceConfiguration.label               = "Update child resource configuration"
ResourcePool.updateChildResourceConfiguration.summary             = "Change the resource configuration of a set of children of the resource pool"
ResourcePool.updateConfig.label                                   = "Update resource pool configuration"
ResourcePool.updateConfig.summary                                 = "Updates the resource pool configuration"
ResourcePool.importVApp.label                                     = "Deploy OVF template"
ResourcePool.importVApp.summary                                   = "Deploys a virtual machine or vApp"
ResourcePool.createVApp.label                                     = "Create vApp"
ResourcePool.createVApp.summary                                   = "Creates a child vApp of this resource pool"
ResourcePool.ImportVAppLRO.label                                  = "Deploy OVF template"
ResourcePool.ImportVAppLRO.summary                                = "Deploys a virtual machine or vApp"
ResourcePool.createVm.label                                       = "Create virtual machine"
ResourcePool.createVm.summary                                     = "Creates a virtual machine in this resource pool"
ResourcePool.registerVm.label                                     = "Register virtual machine"
ResourcePool.registerVm.summary                                   = "Adds an existing virtual machine to this resource pool"
VirtualApp.createResourcePool.label                               = "Create resource pool"
VirtualApp.createResourcePool.summary                             = "Creates a new resource pool"
VirtualApp.destroy.label                                          = "Delete vApp"
VirtualApp.destroy.summary                                        = "Delete the vApp, including all child vApps and virtual machines"
VirtualApp.destroyChildren.label                                  = "Delete vApp children"
VirtualApp.destroyChildren.summary                                = "Deletes all child resource pools recursively"
VirtualApp.getChildConfiguration.label                            = "Get child configuration"
VirtualApp.getChildConfiguration.summary                          = "Returns the resource configuration of all direct child nodes of the vApp"
VirtualApp.getConfig.label                                        = "Get resource configuration"
VirtualApp.getConfig.summary                                      = "Gets the resource configuration of the vApp"
VirtualApp.getOwner.label                                         = "Get vApp owner"
VirtualApp.getOwner.summary                                       = "Gets the resource pool tree that belongs to the owner"
VirtualApp.getSummary.label                                       = "Get vApp Summary"
VirtualApp.getSummary.summary                                     = "Gets the basic information about a vApp"
VirtualApp.getVm.label                                            = "Get vApp virtual machine"
VirtualApp.getVm.summary                                          = "Gets the set of virtual machines associated with this vApp"
VirtualApp.moveInto.label                                         = "Move into vApp"
VirtualApp.moveInto.summary                                       = "Moves a set of entities into this vApp"
VirtualApp.reload.label                                           = "Reload vApp"
VirtualApp.reload.summary                                         = "Reload the vApp"
VirtualApp.rename.label                                           = "Rename vApp"
VirtualApp.rename.summary                                         = "Rename the vApp"
VirtualApp.updateChildResourceConfiguration.label                 = "Update child resource configuration"
VirtualApp.updateChildResourceConfiguration.summary               = "Change resource configuration of a set of children of the vApp"
VirtualApp.updateConfig.label                                     = "Update vApp resource configuration"
VirtualApp.updateConfig.summary                                   = "Updates the resource configuration for the vApp"
VirtualApp.powerOn.label                                          = "Start vApp"
VirtualApp.powerOn.summary                                        = "Starts the vApp"
VirtualApp.powerOff.label                                         = "Stop vApp"
VirtualApp.powerOff.summary                                       = "Stops the vApp"
VirtualApp.suspend.label                                          = "Suspend vApp"
VirtualApp.suspend.summary                                        = "Suspends the vApp"
VirtualApp.updateVAppConfig.label                                 = "Update vApp Configuration"
VirtualApp.updateVAppConfig.summary                               = "Updates the vApp configuration"
VirtualApp.updateLinkedChildren.label                             = "Update linked children"
VirtualApp.updateLinkedChildren.summary                           = "Updates the list of linked children"
VirtualApp.clone.label                                            = "Clone vApp"
VirtualApp.clone.summary                                          = "Clone the vApp, including all child entities"
VirtualApp.unregister.label                                       = "Unregister vApp"
VirtualApp.unregister.summary                                     = "Unregister all child virtual machines and remove the vApp"
VirtualApp.createVm.label                                         = "Create virtual machine"
VirtualApp.createVm.summary                                       = "Creates a virtual machine in this vApp"
VirtualApp.exportVApp.label                                       = "Export OVF template"
VirtualApp.exportVApp.summary                                     = "Exports the vApp as an OVF template"
VirtualApp.ExportVAppLRO.label                                    = "Export OVF template"
VirtualApp.ExportVAppLRO.summary                                  = "Exports the vApp as an OVF template"
VirtualApp.createVApp.label                                       = "Create vApp"
VirtualApp.createVApp.summary                                     = "Creates a child vApp of this vApp"
VirtualApp.importVApp.label                                       = "Deploy OVF template"
VirtualApp.importVApp.summary                                     = "Deploys a virtual machine or vApp"
VirtualApp.registerVm.label                                       = "Register virtual machine"
VirtualApp.registerVm.summary                                     = "Adds an existing virtual machine to this vApp"
SearchIndex.findByUuid.label                                      = "Find entity by UUID"
SearchIndex.findByUuid.summary                                    = "Finds a virtual machine or host by UUID"
SearchIndex.findByDatastorePath.label                             = "Find virtual machine by datastore path"
SearchIndex.findByDatastorePath.summary                           = "Finds a virtual machine by its location on a datastore"
SearchIndex.findByDnsName.label                                   = "Find entity by DNS"
SearchIndex.findByDnsName.summary                                 = "Finds a virtual machine or host by its DNS name"
SearchIndex.findByIp.label                                        = "Find entity by IP"
SearchIndex.findByIp.summary                                      = "Finds a virtual machine or host by IP address"
SearchIndex.findByInventoryPath.label                             = "Find entity by inventory path"
SearchIndex.findByInventoryPath.summary                           = "Finds a virtual machine or host based on its location in the inventory"
SearchIndex.findChild.label                                       = "Find folder child"
SearchIndex.findChild.summary                                     = "Finds an immediate child of a folder"
ServiceInstance.connectionInfo.label                              = "Get connection information"
ServiceInstance.connectionInfo.summary                            = "Determine information about a single host that can be used in the Connection Wizard"
ServiceInstance.currentTime.label                                 = "Get current time"
ServiceInstance.currentTime.summary                               = "Returns the current time on the server"
ServiceInstance.getDiscoveredElement.label                        = "Get discovered element"
ServiceInstance.getDiscoveredElement.summary                      = "Gets the lists of elements discovered on the network that can be brought under management"
ServiceInstance.getInventory.label                                = "Get inventory"
ServiceInstance.getInventory.summary                              = "Get the full inventory list"
ServiceInstance.getServerClock.label                              = "Get server clock"
ServiceInstance.getServerClock.summary                            = "Updates occasionally with the time on the server"
ServiceInstance.getVMotionReport.label                            = "Get vMotion report"
ServiceInstance.getVMotionReport.summary                          = "Validates the vMotion compatibility of a set of hosts"
ServiceInstance.getVmotionCompatibility.label                     = "Get vMotion compatibility"
ServiceInstance.getVmotionCompatibility.summary                   = "Validates if a given virtual machine can be migrated with vMotion from one host to another"
ServiceInstance.queryVMotionCompatibility.label                   = "Query vMotion compatibility"
ServiceInstance.queryVMotionCompatibility.summary                 = "Validates the vMotion compatibility of a set of hosts"
ServiceInstance.retrieveContent.label                             = "Retrieve content"
ServiceInstance.retrieveContent.summary                           = "Get the properties of the service instance"
ServiceInstance.validateMigration.label                           = "Validate migration"
ServiceInstance.validateMigration.summary                         = "Checks for errors and warnings of virtual machines migrated from one host to another"
ServiceInstance.ValidateClusterSpecification.label                = "Validate cluster specification"
ServiceInstance.ValidateClusterSpecification.summary              = "Validates a cluster compliance specification against a set of hosts"
ServiceInstance.validateVmotion.label                             = "Validate vMotion"
ServiceInstance.validateVmotion.summary                           = "Validates vMotion"
ServiceInstance.retrieveInternalContent.label                     = "Retrieve internal properties"
ServiceInstance.retrieveInternalContent.summary                   = "Retrieves the internal properties of the service instance"
SessionManager.acquireLocalTicket.label                           = "Acquire local ticket"
SessionManager.acquireLocalTicket.summary                         = "Acquire one-time ticket for authenticating server-local client"
SessionManager.acquireGenericServiceTicket.label                  = "Acquire generic service ticket"
SessionManager.acquireGenericServiceTicket.summary                = "Acquire a one-time credential that may be used to make the specified request"
SessionManager.getCurrentSession.label                            = "Get current session"
SessionManager.getCurrentSession.summary                          = "Gets current open sessions"
SessionManager.getDefaultLocale.label                             = "Get default locale"
SessionManager.getDefaultLocale.summary                           = "Gets the default server locale"
SessionManager.getMessage.label                                   = "Get global message"
SessionManager.getMessage.summary                                 = "Get the system global message"
SessionManager.getMessageLocales.label                            = "Get message locales"
SessionManager.getMessageLocales.summary                          = "Get the list of locales for which the server has localized messages"
SessionManager.getSupportedLocales.label                          = "Get supported locales"
SessionManager.getSupportedLocales.summary                        = "Gets the list of locales for which the server supports data formatting"
SessionManager.login.label                                        = "Login"
SessionManager.login.summary                                      = "Create a login session"
SessionManager.logout.label                                       = "Logout"
SessionManager.logout.summary                                     = "Logout and end the current session"
SessionManager.setLocale.label                                    = "Set locale"
SessionManager.setLocale.summary                                  = "Set the session locale for determining the languages used for messages and formatting data"
SessionManager.terminate.label                                    = "Terminate session"
SessionManager.terminate.summary                                  = "Logout and end the provided list of sessions"
SessionManager.updateMessage.label                                = "Update global message"
SessionManager.updateMessage.summary                              = "Updates the system global message"
SessionManager.loginExtensionByCertificate.label                  = "Login extension by certificate"
SessionManager.loginExtensionByCertificate.summary                = "Login extension by certificate"
SessionManager.loginExtensionBySubjectName.label                  = "Login extension"
SessionManager.loginExtensionBySubjectName.summary                = "Invalid subject name"
SpecificationManager.create.label                                 = "Create specification"
SpecificationManager.create.summary                               = "Creates a new specification"
SpecificationManager.delete.label                                 = "Delete specification"
SpecificationManager.delete.summary                               = "Deletes a specification"
SpecificationManager.duplicate.label                              = "Duplicate"
SpecificationManager.duplicate.summary                            = "Duplicate a specification"
SpecificationManager.exists.label                                 = "Exists"
SpecificationManager.exists.summary                               = "Does this specification exist?"
SpecificationManager.get.label                                    = "Get specification"
SpecificationManager.get.summary                                  = "Gets a specification given the name"
SpecificationManager.getInfo.label                                = "Get specification information"
SpecificationManager.getInfo.summary                              = "Gets the information on a specification"
SpecificationManager.overwrite.label                              = "Overwrite specification"
SpecificationManager.overwrite.summary                            = "Overwrites an existing specification"
SpecificationManager.rename.label                                 = "Rename specification"
SpecificationManager.rename.summary                               = "Rename a specification"
SpecificationManager.setDuplicate.label                           = "Duplicate specification"
SpecificationManager.setDuplicate.summary                         = "Duplicate a specification"
SpecificationManager.setRename.label                              = "Rename specification"
SpecificationManager.setRename.summary                            = "Rename a specification"
Task.cancel.label                                                 = "Cancel"
Task.cancel.summary                                               = "Cancels a running/queued task"
Task.getInfo.label                                                = "Get task information"
Task.getInfo.summary                                              = "Gets information about a task"
TaskManager.createCollector.label                                 = "Create task collector"
TaskManager.createCollector.summary                               = "Creates a task collector to retrieve all tasks that have executed on the server based on a filter"
TaskManager.getActiveTask.label                                   = "Active task"
TaskManager.getActiveTask.summary                                 = "Returns running and queued tasks"
TaskManager.getDescription.label                                  = "Get task description"
TaskManager.getDescription.summary                                = "Get localized description of strings used in tasks"
TaskManager.getMaxCollector.label                                 = "Get maximum task collectors"
TaskManager.getMaxCollector.summary                               = "Maximum number of task collectors a client can create"
TaskHistoryCollector.changePageSize.label                         = "Change page size"
TaskHistoryCollector.changePageSize.summary                       = "Changes the page size of collected history data"
TaskHistoryCollector.getFilter.label                              = "Get filter"
TaskHistoryCollector.getFilter.summary                            = "Gets the filter used to create this collector"
TaskHistoryCollector.getLatest.label                              = "Get latest object"
TaskHistoryCollector.getLatest.summary                            = "Gets the latest object in the collector"
TaskHistoryCollector.getLength.label                              = "Get length"
TaskHistoryCollector.getLength.summary                            = "Gets the total number of records in the database"
TaskHistoryCollector.getNextPage.label                            = "Next page"
TaskHistoryCollector.getNextPage.summary                          = "Get the next page of history data"
TaskHistoryCollector.getPageSize.label                            = "Get page size"
TaskHistoryCollector.getPageSize.summary                          = "Gets the number of records to retrieve in each page"
TaskHistoryCollector.getPrevPage.label                            = "Previous page"
TaskHistoryCollector.getPrevPage.summary                          = "Get the previous page of history data"
TaskHistoryCollector.moveTo.label                                 = "Move to page"
TaskHistoryCollector.moveTo.summary                               = "Move to specific page"
TaskHistoryCollector.moveToBottom.label                           = "Move to bottom"
TaskHistoryCollector.moveToBottom.summary                         = "Move to the bottom page in the collector"
TaskHistoryCollector.moveToTop.label                              = "Move to top"
TaskHistoryCollector.moveToTop.summary                            = "Move to the top page in the collector"
TaskHistoryCollector.readNext.label                               = "Read next"
TaskHistoryCollector.readNext.summary                             = "The scroll position is moved to the next new page after the read"
TaskHistoryCollector.readPrev.label                               = "Read previous"
TaskHistoryCollector.readPrev.summary                             = "The scroll position is moved to the next older page after the read"
TaskHistoryCollector.remove.label                                 = "Remove collector"
TaskHistoryCollector.remove.summary                               = "Remove the collector from server"
TaskHistoryCollector.reset.label                                  = "Reset"
TaskHistoryCollector.reset.summary                                = "Move the scroll position to the item just above the last page viewed"
TaskHistoryCollector.rewind.label                                 = "Rewind"
TaskHistoryCollector.rewind.summary                               = "Move the scroll position to the oldest item"
TaskHistoryCollector.setLatestPageSize.label                      = "Set latest page size"
TaskHistoryCollector.setLatestPageSize.summary                    = "Set the last page viewed size and contain at most maxCount items in the page"
UpgradeManager.applicableUpgrades.label                           = "Get applicable upgrades"
UpgradeManager.applicableUpgrades.summary                         = "Find upgrades that could apply to a given host"
UpgradeManager.applyUpgrade.label                                 = "Apply upgrade"
UpgradeManager.applyUpgrade.summary                               = "Apply a chosen upgrade to a designated set of hosts"
UpgradeManager.getAllUpgrades.label                               = "Get all upgrades"
UpgradeManager.getAllUpgrades.summary                             = "Get information on all known upgrades"
UpgradeManager.getUpgradeLibrary.label                            = "Get upgrade library"
UpgradeManager.getUpgradeLibrary.summary                          = "Gets the location where upgrades are stored"
UpgradeManager.scanUpgradeLibrary.label                           = "Scan for upgrades"
UpgradeManager.scanUpgradeLibrary.summary                         = "Rescan the library for added or removed upgrades"
UpgradeManager.setUpgradeLibrary.label                            = "Set upgrade library path"
UpgradeManager.setUpgradeLibrary.summary                          = "Sets the location where upgrades are stored"
UpgradeManager.upgradeableHosts.label                             = "Get upgradeable hosts"
UpgradeManager.upgradeableHosts.summary                           = "Find hosts that can use a chosen upgrade"
UpgradeableHostSummary.applyUpgrade.summary                       = "Apply a chosen upgrade to a designated set of hosts"
UserDirectory.getDomains.label                                    = "Get domains"
UserDirectory.getDomains.summary                                  = "Gets the list the available domains"
UserDirectory.retrieveUserGroups.label                            = "Get user groups"
UserDirectory.retrieveUserGroups.summary                          = "Searches for users and groups"
VirtualMachine.AcceptPowerState.label                             = "Accepted virtual machine power state"
VirtualMachine.AcceptPowerState.summary                           = "Define the power state a virtual machine must be in"
VirtualMachine.MovePriority.label                                 = "Virtual machine move priority"
VirtualMachine.MovePriority.summary                               = "Priority of the task that moves a virtual machine from one host to another"
VirtualMachine.acquireMksTicket.label                             = "Acquire virtual machine Mouse Keyboard Screen Ticket"
VirtualMachine.acquireMksTicket.summary                           = "Establishing a Mouse Keyboard Screen Ticket"
VirtualMachine.acquireTicket.label                                = "Acquire virtual machine service ticket"
VirtualMachine.acquireTicket.summary                              = "Establishing a specific remote virtual machine connection ticket"
VirtualMachine.answer.label                                       = "Answer virtual machine question"
VirtualMachine.answer.summary                                     = "Respond to a question that is blocking this virtual machine"
VirtualMachine.checkCustomizationSpec.label                       = "Check customization specification"
VirtualMachine.checkCustomizationSpec.summary                     = "Check the customization specification against the virtual machine configuration"
VirtualMachine.clone.label                                        = "Clone virtual machine"
VirtualMachine.clone.summary                                      = "Creates a clone of this virtual machine"
VirtualMachine.createSecondary.label                              = "Turn On Fault Tolerance"
VirtualMachine.createSecondary.summary                            = "Secondary VM created"
VirtualMachine.createSecondaryEx.label                            = "Turn On Fault Tolerance"
VirtualMachine.createSecondaryEx.summary                          = "Creates a secondary VM"
VirtualMachine.consolidateDisks.label                             = "Consolidate virtual machine disk files"
VirtualMachine.consolidateDisks.summary                           = "Consolidate disk files of this virtual machine"
VirtualMachine.createSnapshot.label                               = "Create virtual machine snapshot"
VirtualMachine.createSnapshot.summary                             = "Create a new snapshot of this virtual machine"
VirtualMachine.customize.label                                    = "Customize virtual machine guest OS"
VirtualMachine.customize.summary                                  = "Customize a virtual machine's guest operating system"
VirtualMachine.destroy.label                                      = "Delete virtual machine"
VirtualMachine.destroy.summary                                    = "Delete this virtual machine. Deleting this virtual machine also deletes its contents and removes it from its parent folder (if any)."
VirtualMachine.disableSecondary.label                             = "Suspend Fault Tolerance"
VirtualMachine.disableSecondary.summary                           = "Suspend Fault Tolerance on this virtual machine"
VirtualMachine.enableSecondary.label                              = "Resume Fault Tolerance"
VirtualMachine.enableSecondary.summary                            = "Resume Fault Tolerance on this virtual machine"
VirtualMachine.getConfig.label                                    = "Get virtual machine configuration"
VirtualMachine.getConfig.summary                                  = "Access the configuration of this virtual machine"
VirtualMachine.getConfigOption.label                              = "Get virtual machine configuration option"
VirtualMachine.getConfigOption.summary                            = "Get the current virtual machine's configuration options"
VirtualMachine.getResourcePool.label                              = "Get virtual machine resource pool"
VirtualMachine.getResourcePool.summary                            = "Return the current resource pool for this virtual machine"
VirtualMachine.getResourceSpec.label                              = "Get virtual machine resource specification"
VirtualMachine.getResourceSpec.summary                            = "Return the current resource specifications of this virtual machine"
VirtualMachine.getRuntime.label                                   = "Get virtual machine runtime state"
VirtualMachine.getRuntime.summary                                 = "Return the execution state and history for this virtual machine"
VirtualMachine.getSnapshot.label                                  = "Get virtual machine snapshot"
VirtualMachine.getSnapshot.summary                                = "Return the current snapshot"
VirtualMachine.getSummary.label                                   = "Get virtual machine summary"
VirtualMachine.getSummary.summary                                 = "Return basic information about this virtual machine"
VirtualMachine.makePrimary.label                                  = "Test failover"
VirtualMachine.makePrimary.summary                                = "Test Fault Tolerance failover by making a Secondary VM in a Fault Tolerance pair the Primary VM"
VirtualMachine.markAsTemplate.label                               = "Mark virtual machine as template"
VirtualMachine.markAsTemplate.summary                             = "Virtual machine is marked as a template"
VirtualMachine.markAsVirtualMachine.label                         = "Mark as virtual machine"
VirtualMachine.markAsVirtualMachine.summary                       = "Reassociate a virtual machine with a host or resource pool"
VirtualMachine.migrate.label                                      = "Migrate virtual machine"
VirtualMachine.migrate.summary                                    = "Migrate a virtual machine's execution to a specific resource pool or host"
VirtualMachine.mountToolsInstaller.label                          = "Initiated VMware Tools Installer Mount"
VirtualMachine.mountToolsInstaller.summary                        = "Mounts the tools CD installer as a CD-ROM for the guest"
VirtualMachine.mountToolsInstallerImage.label                     = "Connect VMware Tools CD"
VirtualMachine.mountToolsInstallerImage.summary                   = "Connects the VMware Tools CD image to the guest"
VirtualMachine.powerOff.label                                     = "Power Off virtual machine"
VirtualMachine.powerOff.summary                                   = "Power Off this virtual machine"
VirtualMachine.powerOn.label                                      = "Power On virtual machine"
VirtualMachine.powerOn.summary                                    = "Power On this virtual machine"
VirtualMachine.sendNMI.label                                      = "Send NMI"
VirtualMachine.sendNMI.summary                                    = "Sends a non-maskable interrupt (NMI) to the virtual machine"
VirtualMachine.terminate.label                                    = "Hard stop virtual machine"
VirtualMachine.terminate.summary                                  = "Hard stop virtual machine"
VirtualMachine.rebootGuest.label                                  = "Initiate guest OS reboot"
VirtualMachine.rebootGuest.summary                                = "Issues a command to the guest operating system asking it to perform a reboot"
VirtualMachine.reconfigure.label                                  = "Reconfigure virtual machine"
VirtualMachine.reconfigure.summary                                = "Reconfigure this virtual machine"
VirtualMachine.reload.label                                       = "Reload virtual machine"
VirtualMachine.reload.summary                                     = "Reloads the virtual machine"
VirtualMachine.reloadFromPath.label                               = "Reload virtual machine from new configuration"
VirtualMachine.reloadFromPath.summary                             = "Reloads the virtual machine from a new configuration file"
VirtualMachine.initDestination.label                              = "Initiate destination virtual machine for Cross-vCenter vMotion"
VirtualMachine.initDestination.summary                            = "Initiate destination virtual machine for Cross-vCenter vMotion"
VirtualMachine.relocate.label                                     = "Relocate virtual machine"
VirtualMachine.relocate.summary                                   = "Relocate the virtual machine to a specific location"
VirtualMachine.removeAllSnapshots.label                           = "Remove all snapshots"
VirtualMachine.removeAllSnapshots.summary                         = "Remove all the snapshots associated with this virtual machine"
VirtualMachine.turnOffFaultTolerance.label                        = "Turn Off Fault Tolerance"
VirtualMachine.turnOffFaultTolerance.summary                      = "Remove all secondaries for this virtual machine and turn off Fault Tolerance"
VirtualMachine.recommendHostsForSecondaryVm.label                 = "Get secondary host recommendation"
VirtualMachine.recommendHostsForSecondaryVm.summary               = "Get host recommendations for Fault Tolerance Secondary VM"
VirtualMachine.rename.label                                       = "Rename virtual machine"
VirtualMachine.rename.summary                                     = "Rename the virtual machine"
VirtualMachine.reset.label                                        = "Reset virtual machine"
VirtualMachine.reset.summary                                      = "Reset this virtual machine"
VirtualMachine.resetGuestInformation.label                        = "Reset guest OS information"
VirtualMachine.resetGuestInformation.summary                      = "Clears cached guest OS information"
VirtualMachine.retrieveScreenshot.label                           = "Retrieve screenshot"
VirtualMachine.retrieveScreenshot.summary                         = "Retrieve screenshot for this virtual machine"
VirtualMachine.revertToCurrentSnapshot.label                      = "Revert to current snapshot"
VirtualMachine.revertToCurrentSnapshot.summary                    = "Reverts the virtual machine to the current snapshot"
VirtualMachine.revertToSnapshot.label                             = "Revert to snapshot"
VirtualMachine.revertToSnapshot.summary                           = "Reverts the virtual machine to the last snapshot"
VirtualMachine.screenshot.label                                   = "Get screenshot information"
VirtualMachine.screenshot.summary                                 = "Return the screenshot information"
VirtualMachine.setScreenResolution.label                          = "Set console window screen resolution"
VirtualMachine.setScreenResolution.summary                        = "Sets the console window's resolution as specified"
VirtualMachine.shutdownGuest.label                                = "Initiate guest OS shutdown"
VirtualMachine.shutdownGuest.summary                              = "Issues a command to the guest operating system to perform a clean shutdown of all services"
VirtualMachine.standbyGuest.label                                 = "Initiate guest OS standby"
VirtualMachine.standbyGuest.summary                               = "Issues a command to the guest operating system to prepare for a suspend operation"
VirtualMachine.startRecording.label                               = "Start recording"
VirtualMachine.startRecording.summary                             = "Start a recording session on this virtual machine"
VirtualMachine.startReplaying.label                               = "Start replaying"
VirtualMachine.startReplaying.summary                             = "Start a replay session on this virtual machine"
VirtualMachine.stopRecording.label                                = "Stop recording"
VirtualMachine.stopRecording.summary                              = "Stop a currently active recording session on this virtual machine"
VirtualMachine.stopReplaying.label                                = "Stop replaying"
VirtualMachine.stopReplaying.summary                              = "Stop a replay session on this virtual machine"
VirtualMachine.suspend.label                                      = "Suspend virtual machine"
VirtualMachine.suspend.summary                                    = "Suspend virtual machine"
VirtualMachine.invokeFSR.label                                    = "Suspend and resume the virtual machine"
VirtualMachine.invokeFSR.summary                                  = "Suspend and resume the virtual machine"
VirtualMachine.configureQuorumFilePathPrefix.label                = "Configure quorum file path prefix"
VirtualMachine.configureQuorumFilePathPrefix.summary              = "Configures the quorum file path prefix for the virtual machine"
VirtualMachine.retrieveQuorumFilePathPrefix.label                 = "Retrieve quorum file path prefix"
VirtualMachine.retrieveQuorumFilePathPrefix.summary               = "Retrieves the quorum file path prefix for the virtual machine"
VirtualMachine.terminateFaultTolerantVM.label                     = "Test restarting Secondary VM"
VirtualMachine.terminateFaultTolerantVM.summary                   = "Test restart Secondary VM by stopping a Secondary VM in the Fault Tolerance pair"
VirtualMachine.unmountToolsInstaller.label                        = "Unmount tools installer"
VirtualMachine.unmountToolsInstaller.summary                      = "Unmounts the tools installer"
VirtualMachine.unregister.label                                   = "Unregister virtual machine"
VirtualMachine.unregister.summary                                 = "Removes this virtual machine from the inventory without removing any of the virtual machine files on disk"
VirtualMachine.upgradeTools.label                                 = "Initiated VMware Tools install or upgrade"
VirtualMachine.upgradeTools.summary                               = "Issues a command to the guest operating system to install VMware Tools or upgrade to the latest revision"
VirtualMachine.upgradeToolsFromImage.label                        = "Initiated VMware Tools upgrade"
VirtualMachine.upgradeToolsFromImage.summary                      = "Upgrades VMware Tools in the virtual machine from specified CD image"
VirtualMachine.upgradeVirtualHardware.label                       = "Upgrade VM compatibility"
VirtualMachine.upgradeVirtualHardware.summary                     = "Upgrade virtual machine compatibility to the latest version"
VirtualMachine.exportVm.label                                     = "Export OVF template"
VirtualMachine.exportVm.summary                                   = "Exports the virtual machine as an OVF template"
VirtualMachine.ExportVmLRO.label                                  = "Export OVF template"
VirtualMachine.ExportVmLRO.summary                                = "Exports the virtual machine as an OVF template"
VirtualMachine.extractOvfEnvironment.label                        = "Extract OVF environment"
VirtualMachine.extractOvfEnvironment.summary                      = "Returns the XML document that represents the OVF environment"
VirtualMachine.isNativeSnapshotCapable.label                      = "Get native clone capability"
VirtualMachine.isNativeSnapshotCapable.summary                    = "Check if native clone is supported on the virtual machine"
alarm.Alarm.getInfo.label                                         = "Get information"
alarm.Alarm.getInfo.summary                                       = "Information about current alarm"
alarm.Alarm.reconfigure.label                                     = "Reconfigure alarm"
alarm.Alarm.reconfigure.summary                                   = "Reconfigure the alarm"
alarm.Alarm.remove.label                                          = "Remove alarm"
alarm.Alarm.remove.summary                                        = "Remove the alarm"
alarm.AlarmManager.acknowledgeAlarm.label                         = "Acknowledge alarm"
alarm.AlarmManager.acknowledgeAlarm.summary                       = "Stops alarm actions from firing until the alarm next triggers on an entity"
alarm.AlarmManager.create.label                                   = "Create alarm"
alarm.AlarmManager.create.summary                                 = "Create a new alarm"
alarm.AlarmManager.getAlarm.label                                 = "Retrieve alarm"
alarm.AlarmManager.getAlarm.summary                               = "Get available alarms defined on the entity"
alarm.AlarmManager.getAlarmActionsEnabled.label                   = "Get alarm actions enabled"
alarm.AlarmManager.getAlarmActionsEnabled.summary                 = "Checks if alarm actions are enabled for an entity"
alarm.AlarmManager.getAlarmState.label                            = "Get alarm state"
alarm.AlarmManager.getAlarmState.summary                          = "The state of instantiated alarms on the entity"
alarm.AlarmManager.getDefaultExpression.label                     = "Get default alarm expression"
alarm.AlarmManager.getDefaultExpression.summary                   = "The default expression for each alarm"
alarm.AlarmManager.getDescription.label                           = "Get alarm description"
alarm.AlarmManager.getDescription.summary                         = "Get localized description of strings used in alarms"
alarm.AlarmManager.reset.label                                    = "Reset alarm"
alarm.AlarmManager.reset.summary                                  = "Reset the alarm instance status"
alarm.AlarmManager.setAlarmActionsEnabled.label                   = "Set alarm actions enabled"
alarm.AlarmManager.setAlarmActionsEnabled.summary                 = "Enables or disables firing alarm actions for an entity"
alarm.AlarmManager.setAlarmStatus.label                           = "Set alarm status"
alarm.AlarmManager.setAlarmStatus.summary                         = "Sets the status of an alarm for an entity"
cluster.TransitionalEVCManager.configureEVC.label                 = "Configure cluster EVC"
cluster.TransitionalEVCManager.configureEVC.summary               = "Enable/reconfigure Enhanced vMotion Compatibility for a cluster"
cluster.TransitionalEVCManager.disableEVC.label                   = "Disable cluster EVC"
cluster.TransitionalEVCManager.disableEVC.summary                 = "Disable Enhanced vMotion Compatibility for a cluster"
event.EventManager.createCollector.label                          = "Create event collector"
event.EventManager.createCollector.summary                        = "Creates an event collector to retrieve all server events based on a filter"
event.EventManager.getDescription.label                           = "Get event description"
event.EventManager.getDescription.summary                         = "Get localized description of strings used in events"
event.EventManager.getLatestEvent.label                           = "Get latest event"
event.EventManager.getLatestEvent.summary                         = "The latest event that happened on the server"
event.EventManager.getMaxCollector.label                          = "Get maximum number of event collectors"
event.EventManager.getMaxCollector.summary                        = "Maximum number of event collectors a client can create"
event.EventManager.logUserEvent.label                             = "Log user event"
event.EventManager.logUserEvent.summary                           = "Logs a user-defined event"
event.EventManager.QueryEvent.label                               = "Get events"
event.EventManager.QueryEvent.summary                             = "Provides the events selected by the specified filter"
host.ActiveDirectoryAuthentication.joinDomain.label               = "Join Windows Domain"
host.ActiveDirectoryAuthentication.joinDomain.summary             = "Enables ActiveDirectory authentication on the host"
host.ActiveDirectoryAuthentication.joinDomainWithCAM.label        = "Join Windows Domain through vSphere Authentication Proxy service"
host.ActiveDirectoryAuthentication.joinDomainWithCAM.summary      = "Enables Active Directory authentication on the host using a vSphere Authentication Proxy server"
host.ActiveDirectoryAuthentication.importCertificateForCAM.label  = "Import the certificate of vSphere Authentication Proxy server"
host.ActiveDirectoryAuthentication.importCertificateForCAM.summary = "Import the certificate of vSphere Authentication Proxy server to ESXi's authentication store"
host.ActiveDirectoryAuthentication.leaveCurrentDomain.label       = "Leave Windows Domain"
host.ActiveDirectoryAuthentication.leaveCurrentDomain.summary     = "Disables ActiveDirectory authentication on the host"
host.ActiveDirectoryAuthentication.enableSmartCardAuthentication.label = "Enable Smart Card Authentication"
host.ActiveDirectoryAuthentication.enableSmartCardAuthentication.summary = "Enables smart card authentication of ESXi Direct Console UI users"
host.ActiveDirectoryAuthentication.installSmartCardTrustAnchor.label = "Install a Smart Card Trust Anchor"
host.ActiveDirectoryAuthentication.installSmartCardTrustAnchor.summary = "Installs a smart card trust anchor on the host"
host.ActiveDirectoryAuthentication.removeSmartCardTrustAnchor.label = "Remove a Smart Card Trust Anchor"
host.ActiveDirectoryAuthentication.removeSmartCardTrustAnchor.summary = "Removes an installed smart card trust anchor from the host"
host.ActiveDirectoryAuthentication.listSmartCardTrustAnchors.label = "List Smart Card Trust Anchors"
host.ActiveDirectoryAuthentication.listSmartCardTrustAnchors.summary = "Lists the smart card trust anchors installed on the host"
host.ActiveDirectoryAuthentication.disableSmartCardAuthentication.label = "Disable Smart Card Authentication"
host.ActiveDirectoryAuthentication.disableSmartCardAuthentication.summary = "Disables smart card authentication of ESXi Direct Console UI users"
host.CpuSchedulerSystem.disableHyperThreading.label               = "Disable hyperthreading"
host.CpuSchedulerSystem.disableHyperThreading.summary             = "Disable hyperthreads as schedulable resources"
host.CpuSchedulerSystem.enableHyperThreading.label                = "Enable hyperthreading"
host.CpuSchedulerSystem.enableHyperThreading.summary              = "Enable hyperthreads as schedulable resources"
host.CpuSchedulerSystem.getHyperThread.label                      = "Get hyperthreading configuration"
host.CpuSchedulerSystem.getHyperThread.summary                    = "Retrieves hyperthreading configuration for CPU scheduler system"
host.DatastoreSystem.checkVmFileAccessibility.label               = "Check accessibility"
host.DatastoreSystem.checkVmFileAccessibility.summary             = "Check if the file objects for the specified virtual machine IDs are accessible"
host.DatastoreSystem.createVvolDatastoreInternal.label            = "Create Virtual Volume datastore"
host.DatastoreSystem.createVvolDatastoreInternal.summary          = "Creates a datastore backed by a Virtual Volume storage container"
host.DatastoreSystem.updateLocalSwapDatastore.label               = "Update local swap datastore"
host.DatastoreSystem.updateLocalSwapDatastore.summary             = "Changes the datastore for virtual machine swap files"
host.DatastoreSystem.UpdateVvolDatastoreInternal.label            = "Update Virtual Volume datastore"
host.DatastoreSystem.UpdateVvolDatastoreInternal.summary          = "Updates the Virtual Volume datastore configuration according to the provided settings"
host.DatastoreSystem.queryAvailableDisksForVmfs.label             = "Retrieve disks for VMFS datastore"
host.DatastoreSystem.queryAvailableDisksForVmfs.summary           = "Retrieves the list of disks that can be used to contain VMFS datastore extents"
host.DatastoreSystem.resignatureUnresolvedVmfsVolume.label        = "Resignature unresolved VMFS volume"
host.DatastoreSystem.resignatureUnresolvedVmfsVolume.summary      = "Resignature unresolved VMFS volume with new VMFS identifier"
host.DiagnosticSystem.queryAvailablePartition.label               = "Retrieve available diagnostic partitions"
host.DiagnosticSystem.queryAvailablePartition.summary             = "Retrieves a list of available diagnostic partitions"
host.DiagnosticSystem.selectActivePartition.label                 = "Change active diagnostic partition"
host.DiagnosticSystem.selectActivePartition.summary               = "Changes the active diagnostic partition to a different partition"
host.DiagnosticSystem.queryPartitionCreateOptions.label           = "Retrieve diagnostic partitionable disks"
host.DiagnosticSystem.queryPartitionCreateOptions.summary         = "Retrieves a list of disks that can be used to contain a diagnostic partition"
host.DiagnosticSystem.queryPartitionCreateDesc.label              = "Retrieve diagnostic partition creation description"
host.DiagnosticSystem.queryPartitionCreateDesc.summary            = "Retrieves the diagnostic partition creation description for a disk"
host.DiagnosticSystem.createDiagnosticPartition.label             = "Create diagnostic partition"
host.DiagnosticSystem.createDiagnosticPartition.summary           = "Creates a diagnostic partition according to the provided creation specification"
host.DiskManager.Lease.release.label                              = "Release disk lease"
host.DiskManager.Lease.release.summary                            = "End the lease if it is still active"
host.DiskManager.Lease.renew.label                                = "Renew disk lease"
host.DiskManager.Lease.renew.summary                              = "Renew a lease to prevent it from timing out"
host.DiskManager.Lease.MapDiskRegion.label                        = "Map disk region"
host.DiskManager.Lease.MapDiskRegion.summary                      = "Mapping a specified region of a virtual disk"
host.DiskManager.Lease.allocateBlocks.label                       = "Allocate blocks"
host.DiskManager.Lease.allocateBlocks.summary                     = "Prepare for writing to blocks"
host.DiskManager.Lease.clearLazyZero.label                        = "Clear lazy zero"
host.DiskManager.Lease.clearLazyZero.summary                      = "Honor the contents of a block range"
host.DiskManager.acquireLeaseExt.label                            = "Acquire lease extension"
host.DiskManager.acquireLeaseExt.summary                          = "Acquires a lease for the files associated with the virtual disk of a virtual machine"
host.DiskManager.acquireLease.label                               = "Acquire disk lease"
host.DiskManager.acquireLease.summary                             = "Acquire a lease for the files associated with the virtual disk referenced by the given datastore path"
host.DiskManager.renewAllLeases.label                             = "Renew all leases"
host.DiskManager.renewAllLeases.summary                           = "Resets the watchdog timer and confirms that all the locks for all the disks managed by this watchdog are still valid"
host.EsxDiagnosticSystem.changePartition.label                    = "Change partition"
host.EsxDiagnosticSystem.changePartition.summary                  = "Changes the current diagnostic partition to a different partition"
host.EsxDiagnosticSystem.extractDump.label                        = "Extract dump"
host.EsxDiagnosticSystem.extractDump.summary                      = "Extracts diagnostic dump files from the diagnostic partition"
host.EsxDiagnosticSystem.getDiagnosticCandidates.label            = "Get candidate partitions"
host.EsxDiagnosticSystem.getDiagnosticCandidates.summary          = "Retrieves a list of candidate diagnostic partitions"
host.EsxDiagnosticSystem.getPartition.label                       = "Get configured partition"
host.EsxDiagnosticSystem.getPartition.summary                     = "Gets the currently configured diagnostic partition"
host.EsxDiagnosticSystem.hasDump.label                            = "Check dump"
host.EsxDiagnosticSystem.hasDump.summary                          = "Checks the diagnostic partition for diagnostic data"
host.Filesystem.getFile.label                                     = "Get file"
host.Filesystem.getFile.summary                                   = "Retrieve a file from an absolute file path"
host.Filesystem.getFilesystemMounts.label                         = "Get file system mount"
host.Filesystem.getFilesystemMounts.summary                       = "Gets host file system mount information"
host.Filesystem.getFreeSpace.label                                = "Get free space"
host.Filesystem.getFreeSpace.summary                              = "Gets the free space for the file system"
host.Filesystem.isFileRdm.label                                   = "Check raw disk mapping"
host.Filesystem.isFileRdm.summary                                 = "Checks whether a particular file is a raw disk mapping"
host.Filesystem.listFiles.label                                   = "List files"
host.Filesystem.listFiles.summary                                 = "List the files in a directory"
host.Filesystem.listFilesystemMounts.label                        = "List file system mounts"
host.Filesystem.listFilesystemMounts.summary                      = "List the file system mounts"
host.Filesystem.lookupFileMount.label                             = "Seek file"
host.Filesystem.lookupFileMount.summary                           = "Look up the file system mount information of a file path"
host.Filesystem.mountFilesystem.label                             = "Mount file system"
host.Filesystem.mountFilesystem.summary                           = "Mounts a file system"
host.Filesystem.unmountFilesystem.label                           = "Unmount file system"
host.Filesystem.unmountFilesystem.summary                         = "Unmounts a file system"
host.FirewallSystem.disableRuleset.label                          = "Block firewall ports"
host.FirewallSystem.disableRuleset.summary                        = "Block the firewall ports belonging to the specified ruleset"
host.FirewallSystem.enableRuleset.label                           = "Open firewall ports"
host.FirewallSystem.enableRuleset.summary                         = "Open the firewall ports belonging to the specified ruleset"
host.FirewallSystem.updateRuleset.label                           = "Update allowed IP list of the firewall ruleset"
host.FirewallSystem.updateRuleset.summary                         = "Update the allowed IP list of the specified ruleset"
host.FirewallSystem.refresh.label                                 = "Refresh firewall information"
host.FirewallSystem.refresh.summary                               = "Refresh the firewall information and settings to detect any changes made directly on the host"
host.FirewallSystem.updateDefaultPolicy.label                     = "Update default firewall policy"
host.FirewallSystem.updateDefaultPolicy.summary                   = "Updates the default firewall policy"
host.InternetServiceSystem.disableService.label                   = "Disable service"
host.InternetServiceSystem.disableService.summary                 = "Disable the specified service"
host.InternetServiceSystem.enableService.label                    = "Enable service"
host.InternetServiceSystem.enableService.summary                  = "Enable the specified service"
host.InternetServiceSystem.getService.label                       = "Get host services"
host.InternetServiceSystem.getService.summary                     = "List of services available on this host"
host.IscsiManager.bindVnic.label                                  = "Add virtual NIC to iSCSI Adapter"
host.IscsiManager.bindVnic.summary                                = "Add virtual NIC to iSCSI Adapter"
host.IscsiManager.unbindVnic.label                                = "Remove virtual NIC from iSCSI Adapter"
host.IscsiManager.unbindVnic.summary                              = "Remove virtual NIC from iSCSI Adapter"
host.IscsiManager.queryVnicStatus.label                           = "Query whether virtual NIC is used by iSCSI multi-pathing"
host.IscsiManager.queryVnicStatus.summary                         = "Query whether virtual NIC is used by iSCSI multi-pathing"
host.IscsiManager.queryPnicStatus.label                           = "Query whether physical NIC is used by iSCSI multi-pathing"
host.IscsiManager.queryPnicStatus.summary                         = "Query whether physical NIC is used by iSCSI multi-pathing"
host.IscsiManager.queryBoundVnics.label                           = "Query all the virtual NICs used by iSCSI multi-pathing"
host.IscsiManager.queryBoundVnics.summary                         = "Query all the virtual NICs used by iSCSI multi-pathing"
host.IscsiManager.queryCandidateNics.label                        = "Query candidate virtual NICs that can be used for iSCSI multi-pathing"
host.IscsiManager.queryCandidateNics.summary                      = "Query candidate virtual NICs that can be used for iSCSI multi-pathing"
host.IscsiManager.queryMigrationDependencies.label                = "Query migration dependencies for migrating the physical and virtual NICs"
host.IscsiManager.queryMigrationDependencies.summary              = "Query migration dependencies for migrating the physical and virtual NICs"
host.KernelModuleSystem.updateModuleOptionString.label            = "Update kernel module option"
host.KernelModuleSystem.updateModuleOptionString.summary          = "Specifies the options to be passed to the kernel module when loaded"
host.LocalAccountManager.addUserToGroup.label                     = "Add group user"
host.LocalAccountManager.addUserToGroup.summary                   = "Adds user to group"
host.LocalAccountManager.assignUserToGroup.label                  = "Assign user to group"
host.LocalAccountManager.assignUserToGroup.summary                = "Assign user to group"
host.LocalAccountManager.createGroup.label                        = "Create group"
host.LocalAccountManager.createGroup.summary                      = "Creates a local group account"
host.LocalAccountManager.createUser.label                         = "Create user"
host.LocalAccountManager.createUser.summary                       = "Creates a local user account"
host.LocalAccountManager.removeGroup.label                        = "Remove group"
host.LocalAccountManager.removeGroup.summary                      = "Removes a local group account"
host.LocalAccountManager.removeUser.label                         = "Delete user"
host.LocalAccountManager.removeUser.summary                       = "Removes a local user account"
host.LocalAccountManager.removeUserFromGroup.label                = "Remove group user"
host.LocalAccountManager.removeUserFromGroup.summary              = "Removes user from group"
host.LocalAccountManager.unassignUserFromGroup.label              = "Unassign user from group"
host.LocalAccountManager.unassignUserFromGroup.summary            = "Unassigns a user from a group"
host.LocalAccountManager.updateUser.label                         = "Update user"
host.LocalAccountManager.updateUser.summary                       = "Updates a local user account"
host.LowLevelProvisioningManager.createVm.label                   = "Create virtual machine"
host.LowLevelProvisioningManager.createVm.summary                 = "Creates a virtual machine on disk"
host.LowLevelProvisioningManager.deleteVm.label                   = "Delete virtual machine"
host.LowLevelProvisioningManager.deleteVm.summary                 = "Deletes a virtual machine on disk"
host.FaultToleranceManager.registerSecondary.label                = "Register Fault Tolerant Secondary VM"
host.FaultToleranceManager.registerSecondary.summary              = "Registers a Secondary VM with a Fault Tolerant Primary VM"
host.FaultToleranceManager.unregisterSecondary.label              = "Unregister Fault Tolerant Secondary VM"
host.FaultToleranceManager.unregisterSecondary.summary            = "Unregister a Secondary VM from the associated Primary VM"
host.FaultToleranceManager.makePrimary.label                      = "Make Primary VM"
host.FaultToleranceManager.makePrimary.summary                    = "Test Fault Tolerance failover by making a Secondary VM in a Fault Tolerance pair the Primary VM"
host.FaultToleranceManager.disableSecondary.label                 = "Disable Secondary VM"
host.FaultToleranceManager.disableSecondary.summary               = "Disable Fault Tolerance on a specified Secondary VM"
host.FaultToleranceManager.enableSecondary.label                  = "Enable Secondary VM"
host.FaultToleranceManager.enableSecondary.summary                = "Enable Fault Tolerance on a specified Secondary VM"
host.FaultToleranceManager.startSecondaryOnRemoteHost.label       = "Start Fault Tolerant Secondary VM"
host.FaultToleranceManager.startSecondaryOnRemoteHost.summary     = "Start Fault Tolerant Secondary VM on remote host"
host.FaultToleranceManager.terminateFaultTolerantVM.label         = "Stop Fault Tolerant virtual machine"
host.FaultToleranceManager.terminateFaultTolerantVM.summary       = "Stop a specified virtual machine in a Fault Tolerant pair"
host.FaultToleranceManager.unregister.label                       = "Unregister Fault Tolerance"
host.FaultToleranceManager.unregister.summary                     = "Unregister the Fault Tolerance service"
host.MemoryManagerSystem.getConsoleReservation.label              = "Get service console reservation information"
host.MemoryManagerSystem.getConsoleReservation.summary            = "Gets service console reservation information"
host.MemoryManagerSystem.reconfigureServiceConsoleReservation.label = "Set console memory reservation"
host.MemoryManagerSystem.reconfigureServiceConsoleReservation.summary = "Set the configured service console memory reservation"
host.MemoryManagerSystem.setServiceConsoleReservation.label       = "Set service console reservation"
host.MemoryManagerSystem.setServiceConsoleReservation.summary     = "Sets the configured service console memory reservation"
host.NetworkSystem.addDhcpService.label                           = "Add DHCP service"
host.NetworkSystem.addDhcpService.summary                         = "Add a new DHCP service instance to the system"
host.NetworkSystem.addNat.label                                   = "Add NAT"
host.NetworkSystem.addNat.summary                                 = "Add a new NAT service instance"
host.NetworkSystem.addPortGroup.label                             = "Add port group"
host.NetworkSystem.addPortGroup.summary                           = "Add a port group to the virtual switch"
host.NetworkSystem.addServiceConsoleVirtualNic.label              = "Add service console virtual NIC"
host.NetworkSystem.addServiceConsoleVirtualNic.summary            = "Add a virtual service console NIC"
host.NetworkSystem.addVirtualNic.label                            = "Add virtual NIC"
host.NetworkSystem.addVirtualNic.summary                          = "Add a virtual host or service console NIC"
host.NetworkSystem.addVirtualSwitch.label                         = "Add virtual switch"
host.NetworkSystem.addVirtualSwitch.summary                       = "Add a new virtual switch to the system"
host.NetworkSystem.addVirtualSwitchPortGroup.label                = "Add virtual switch port group"
host.NetworkSystem.addVirtualSwitchPortGroup.summary              = "Add a port group to the virtual switch"
host.NetworkSystem.commitTransaction.label                        = "Commit transaction to confirm that host is connected to vCenter Server"
host.NetworkSystem.commitTransaction.summary                      = "Commit transaction to confirm that host is connected to vCenter Server"
host.NetworkSystem.disableDhcpService.label                       = "Disable DHCP service"
host.NetworkSystem.disableDhcpService.summary                     = "Stop a DHCP service instance"
host.NetworkSystem.disableNatService.label                        = "Disable NAT"
host.NetworkSystem.disableNatService.summary                      = "Stop a NAT service instance"
host.NetworkSystem.disableServiceConsoleVirtualNic.label          = "Disable service console virtual NIC"
host.NetworkSystem.disableServiceConsoleVirtualNic.summary        = "Disable a virtual service console NIC"
host.NetworkSystem.disableVirtualNic.label                        = "Disable virtual NIC"
host.NetworkSystem.disableVirtualNic.summary                      = "Disable a virtual host or service console NIC"
host.NetworkSystem.enableDhcpService.label                        = "Enable DHCP service"
host.NetworkSystem.enableDhcpService.summary                      = "Enable or start a DHCP service instance"
host.NetworkSystem.enableNatService.label                         = "Enable NAT"
host.NetworkSystem.enableNatService.summary                       = "Enable or start a NAT service instance"
host.NetworkSystem.enableServiceConsoleVirtualNic.label           = "Enable service console virtual NIC"
host.NetworkSystem.enableServiceConsoleVirtualNic.summary         = "Enable a virtual service console NIC"
host.NetworkSystem.enableVirtualNic.label                         = "Enable virtual NIC"
host.NetworkSystem.enableVirtualNic.summary                       = "Enable a virtual host or service console NIC"
host.NetworkSystem.getCapabilities.label                          = "Get network capabilities"
host.NetworkSystem.getCapabilities.summary                        = "Get available network product features"
host.NetworkSystem.getDnsConfig.label                             = "Get DNS configuration"
host.NetworkSystem.getDnsConfig.summary                           = "Get DNS configuration for the host"
host.NetworkSystem.getNetworkCfg.label                            = "Get network information"
host.NetworkSystem.getNetworkCfg.summary                          = "Get network configuration information"
host.NetworkSystem.getNetworkInfo.label                           = "Get network information"
host.NetworkSystem.getNetworkInfo.summary                         = "Get network configuration and runtime information"
host.NetworkSystem.getOffloadCapabilities.label                   = "Get offload capabilities"
host.NetworkSystem.getOffloadCapabilities.summary                 = "Get offload capabilities available on the server"
host.NetworkSystem.invokeHostTransactionCall.label                = "Invoke API call on host with transactionId"
host.NetworkSystem.invokeHostTransactionCall.summary              = "Invoke API call on host with transactionId"
host.NetworkSystem.queryNetworkHint.label                         = "Query network hint"
host.NetworkSystem.queryNetworkHint.summary                       = "Request network hint information for a physical NIC"
host.NetworkSystem.refresh.label                                  = "Refresh network information"
host.NetworkSystem.refresh.summary                                = "Refresh the network information and settings to detect any changes that have occurred"
host.NetworkSystem.removeDhcpService.label                        = "Remove DHCP service"
host.NetworkSystem.removeDhcpService.summary                      = "Remove an existing DHCP service instance from the system"
host.NetworkSystem.removeNat.label                                = "Remove NAT"
host.NetworkSystem.removeNat.summary                              = "Remove an existing NAT service instance"
host.NetworkSystem.removePortGroup.label                          = "Remove port group"
host.NetworkSystem.removePortGroup.summary                        = "Remove a port group from the virtual switch"
host.NetworkSystem.removeServiceConsoleVirtualNic.label           = "Remove service console virtual NIC"
host.NetworkSystem.removeServiceConsoleVirtualNic.summary         = "Remove a virtual service console NIC"
host.NetworkSystem.removeVirtualNic.label                         = "Remove virtual NIC"
host.NetworkSystem.removeVirtualNic.summary                       = "Remove a virtual host or service console NIC"
host.NetworkSystem.removeVirtualSwitch.label                      = "Remove virtual switch"
host.NetworkSystem.removeVirtualSwitch.summary                    = "Remove an existing virtual switch from the system"
host.NetworkSystem.removeVirtualSwitchPortGroup.label             = "Remove virtual switch port group"
host.NetworkSystem.removeVirtualSwitchPortGroup.summary           = "Remove port group from the virtual switch"
host.NetworkSystem.restartServiceConsoleVirtualNic.label          = "Restart virtual network adapter interface"
host.NetworkSystem.restartServiceConsoleVirtualNic.summary        = "Restart the service console virtual network adapter interface"
host.NetworkSystem.setAgentVmNetwork.label                        = "Set agent virtual machine network"
host.NetworkSystem.setAgentVmNetwork.summary                      = "Reconfigure agent virtual machine network for the server"
host.NetworkSystem.setDhcpService.label                           = "Set DHCP service"
host.NetworkSystem.setDhcpService.summary                         = "Reconfigure an existing DHCP service instance"
host.NetworkSystem.setNatService.label                            = "Set NAT"
host.NetworkSystem.setNatService.summary                          = "Reconfigure an existing NAT service instance"
host.NetworkSystem.setPhysicalNicIpConfig.label                   = "Set physical NIC IP Configuration"
host.NetworkSystem.setPhysicalNicIpConfig.summary                 = "Configure IP for a physical NIC"
host.NetworkSystem.setPhysicalNicLinkSpeed.label                  = "Set physical NIC link speed"
host.NetworkSystem.setPhysicalNicLinkSpeed.summary                = "Configure link speed and duplexity"
host.NetworkSystem.setServiceConsoleVirtualNic.label              = "Set service console virtual NIC"
host.NetworkSystem.setServiceConsoleVirtualNic.summary            = "Update IP configuration for a service console virtual NIC"
host.NetworkSystem.setVirtualNic.label                            = "Set virtual NIC"
host.NetworkSystem.setVirtualNic.summary                          = "Set virtual host or service console NIC"
host.NetworkSystem.setVirtualSwitchBridge.label                   = "Set virtual switch bridge"
host.NetworkSystem.setVirtualSwitchBridge.summary                 = "Set the bridge configuration for the virtual switch"
host.NetworkSystem.setVirtualSwitchPolicy.label                   = "Update virtual switch"
host.NetworkSystem.setVirtualSwitchPolicy.summary                 = "Reconfigure the properties of a virtual switch"
host.NetworkSystem.setVirtualSwitchPortGroup.label                = "Set virtual switch port group"
host.NetworkSystem.setVirtualSwitchPortGroup.summary              = "Reconfigure a port group on the virtual switch"
host.NetworkSystem.unsetVirtualSwitchBridge.label                 = "Unset virtual switch bridge"
host.NetworkSystem.unsetVirtualSwitchBridge.summary               = "Unset the bridge configuration for the virtual switch"
host.NetworkSystem.updateConsoleIpRouteConfig.label               = "Update console IP route configuration"
host.NetworkSystem.updateConsoleIpRouteConfig.summary             = "Update console IP route configuration"
host.NetworkSystem.updateDhcpService.label                        = "Update DHCP service"
host.NetworkSystem.updateDhcpService.summary                      = "Reconfigure an existing DHCP service instance"
host.NetworkSystem.updateDnsConfig.label                          = "Update DNS configuration"
host.NetworkSystem.updateDnsConfig.summary                        = "Update the DNS configuration for the host"
host.NetworkSystem.updateIpRouteConfig.label                      = "Update IP route configuration"
host.NetworkSystem.updateIpRouteConfig.summary                    = "Update IP route configuration"
host.NetworkSystem.updateIpRouteTableConfig.label                 = "Update IP route table configuration"
host.NetworkSystem.updateIpRouteTableConfig.summary               = "Applies the IP route table configuration for the host"
host.NetworkSystem.updateNatService.label                         = "Update Nat service"
host.NetworkSystem.updateNatService.summary                       = "Reconfigure an existing NAT service instance"
host.NetworkSystem.updateNetworkCfg.label                         = "Update network configuration"
host.NetworkSystem.updateNetworkCfg.summary                       = "Updates the network configuration"
host.NetworkSystem.updateNetworkConfig.label                      = "Update network configuration"
host.NetworkSystem.updateNetworkConfig.summary                    = "Network configuration information"
host.NetworkSystem.updatePhysicalNicIpConfig.label                = "Update physical NIC IP Configuration"
host.NetworkSystem.updatePhysicalNicIpConfig.summary              = "Configure IP for a physical NIC"
host.NetworkSystem.updatePhysicalNicLinkSpeed.label               = "Update physical NIC link speed"
host.NetworkSystem.updatePhysicalNicLinkSpeed.summary             = "Configure link speed and duplexity"
host.NetworkSystem.updatePortGroup.label                          = "Reconfigure port group"
host.NetworkSystem.updatePortGroup.summary                        = "Reconfigure a port group on the virtual switch"
host.NetworkSystem.updateServiceConsoleVirtualNic.label           = "Update service console virtual NIC"
host.NetworkSystem.updateServiceConsoleVirtualNic.summary         = "Update IP configuration for a service console virtual NIC"
host.NetworkSystem.updateVirtualNic.label                         = "Update virtual NIC"
host.NetworkSystem.updateVirtualNic.summary                       = "Configure virtual host or VMkernel NIC"
host.NetworkSystem.updateVirtualSwitch.label                      = "Update virtual switch"
host.NetworkSystem.updateVirtualSwitch.summary                    = "Updates the properties of the virtual switch"
host.NetworkSystem.updateVirtualSwitchPortGroup.label             = "Update virtual switch port group"
host.NetworkSystem.updateVirtualSwitchPortGroup.summary           = "Reconfigure a port group on the virtual switch"
host.NetworkSystem.updateConsoleIpSecConfig.label                 = "Update console IPSec configuration"
host.NetworkSystem.updateConsoleIpSecConfig.summary               = "Update console IPSec configuration"
host.NetworkSystem.updateIpSecConfig.label                        = "Update IPSec configuration"
host.NetworkSystem.updateIpSecConfig.summary                      = "Update IPSec configuration"
host.ProductInfo.getType.label                                    = "Get software type"
host.ProductInfo.getType.summary                                  = "Type of VMware software installed on host"
host.ServiceSystem.enableService.label                            = "Enable host service"
host.ServiceSystem.enableService.summary                          = "Enables the specified service, opens any firewall ports it uses, and configures it to automatically run on startup"
host.ServiceSystem.disableService.label                           = "Disable host service"
host.ServiceSystem.disableService.summary                         = "Disables the specified service, closes any firewall ports it uses, and configures it to not run on startup"
host.ServiceSystem.refresh.label                                  = "Refresh service information"
host.ServiceSystem.refresh.summary                                = "Refresh the service information and settings to detect any changes made directly on the host"
host.ServiceSystem.restart.label                                  = "Restart service"
host.ServiceSystem.restart.summary                                = "Restarts the service"
host.ServiceSystem.start.label                                    = "Start service"
host.ServiceSystem.start.summary                                  = "Starts the service"
host.ServiceSystem.stop.label                                     = "Stop service"
host.ServiceSystem.stop.summary                                   = "Stops the service"
host.ServiceSystem.uninstall.label                                = "Uninstall service"
host.ServiceSystem.uninstall.summary                              = "Uninstalls the service"
host.ServiceSystem.updatePolicy.label                             = "Update service activation policy"
host.ServiceSystem.updatePolicy.summary                           = "Updates the activation policy of the service"
host.SnmpSystem.checkIfMasterSnmpAgentRunning.label               = "Check SNMP agent run state"
host.SnmpSystem.checkIfMasterSnmpAgentRunning.summary             = "Check whether the master SNMP agent is running"
host.SnmpSystem.restartMasterSnmpAgent.label                      = "Restart master SNMP agent"
host.SnmpSystem.restartMasterSnmpAgent.summary                    = "Restart the master SNMP agent"
host.SnmpSystem.stopMasterSnmpAgent.label                         = "Stop master SNMP agent"
host.SnmpSystem.stopMasterSnmpAgent.summary                       = "Stop the master SNMP agent"
host.SnmpSystem.updateSnmpConfig.label                            = "Update SNMP configuration"
host.SnmpSystem.updateSnmpConfig.summary                          = "Update the SNMP configuration"
host.SnmpSystem.reconfigureSnmpAgent.label                        = "Reconfigure SNMP agent"
host.SnmpSystem.reconfigureSnmpAgent.summary                      = "Reconfigure the SNMP agent"
host.SnmpSystem.getConfiguration.label                            = "Get configuration"
host.SnmpSystem.getConfiguration.summary                          = "Retrieve the SNMP configuration."
host.SnmpSystem.AgentLimits.label                                 = "Agent limits"
host.SnmpSystem.AgentLimits.summary                               = "Limits on configuration resources"
host.SnmpSystem.sendTestNotification.label                        = "Send test notification"
host.SnmpSystem.sendTestNotification.summary                      = "Send test notification"
host.StorageSystem.activateMultipathPath.label                    = "Activate multiple path"
host.StorageSystem.activateMultipathPath.summary                  = "Activate an enabled path for a logical unit"
host.StorageSystem.attachScsiLun.label                            = "Attach SCSI LUN"
host.StorageSystem.attachScsiLun.summary                          = "Allow I/O issue to the specified detached SCSI LUN"
host.StorageSystem.attachScsiLunEx.label                          = "Attach SCSI LUNs"
host.StorageSystem.attachScsiLunEx.summary                        = "Enables I/O operations to one or more detached SCSI LUNs"
host.StorageSystem.attachVmfsExtent.label                         = "Extend VMFS"
host.StorageSystem.attachVmfsExtent.summary                       = "Extend a VMFS by attaching a disk partition"
host.StorageSystem.createVmfs.label                               = "Create VMFS"
host.StorageSystem.createVmfs.summary                             = "Create a new VMFS on a disk partition"
host.DatastoreBrowser.deleteFile.label                            = "Delete datastore file"
host.DatastoreBrowser.deleteFile.summary                          = "Deletes the specified files from the datastore"
host.StorageSystem.detachScsiLun.label                            = "Detach SCSI LUN"
host.StorageSystem.detachScsiLun.summary                          = "Blocks I/O operations to the attached SCSI LUN"
host.StorageSystem.detachScsiLunEx.label                          = "Detach SCSI LUNs"
host.StorageSystem.detachScsiLunEx.summary                        = "Blocks I/O operations to one or more attached SCSI LUNs"
host.StorageSystem.disableMultipathPath.label                     = "Disable multiple path"
host.StorageSystem.disableMultipathPath.summary                   = "Disable a path for a logical unit"
host.StorageSystem.enableMultipathPath.label                      = "Enable multiple path"
host.StorageSystem.enableMultipathPath.summary                    = "Enable a path for a logical unit"
host.StorageSystem.formatVmfs.label                               = "Format VMFS"
host.StorageSystem.formatVmfs.summary                             = "Formats a new VMFS on a disk partition"
host.StorageSystem.getDiskPartitionSpecification.label            = "Get disk partition specification"
host.StorageSystem.getDiskPartitionSpecification.summary          = "Get the partition specification for a disk"
host.StorageSystem.getStorageCfg.label                            = "Get storage configuration"
host.StorageSystem.getStorageCfg.summary                          = "Get host storage information"
host.StorageSystem.makeDiskPartitions.label                       = "Make partition"
host.StorageSystem.makeDiskPartitions.summary                     = "Makes the partitions on the disk"
host.StorageSystem.mountNetworkFileSystem.label                   = "Mount network file system"
host.StorageSystem.mountNetworkFileSystem.summary                 = "Mounts a network file system"
host.StorageSystem.mountVmfsVolume.label                          = "Mount VMFS volume"
host.StorageSystem.mountVmfsVolume.summary                        = "Mounts an unmounted VMFS volume"
host.StorageSystem.rescanAllHba.label                             = "Rescan all HBAs"
host.StorageSystem.rescanAllHba.summary                           = "Rescan all storage adapters for new storage devices"
host.StorageSystem.rescanHba.label                                = "Rescan HBA"
host.StorageSystem.rescanHba.summary                              = "Rescan a specific storage adapter for new storage devices"
host.StorageSystem.rescanVmfs.label                               = "Rescan VMFS"
host.StorageSystem.rescanVmfs.summary                             = "Rescan for new VMFS volumes"
host.StorageSystem.resolveMultipleUnresolvedVmfsVolumes.label     = "Resolve VMFS volumes"
host.StorageSystem.resolveMultipleUnresolvedVmfsVolumes.summary   = "Resolve the detected copies of VMFS volumes"
host.StorageSystem.resolveMultipleUnresolvedVmfsVolumesEx.label     = "Resolve VMFS volumes"
host.StorageSystem.resolveMultipleUnresolvedVmfsVolumesEx.summary   = "Resolves the detected copies of VMFS volumes"
host.StorageSystem.setInternetScsiBinding.label                   = "Set Internet SCSI binding"
host.StorageSystem.setInternetScsiBinding.summary                 = "Set the iSCSI target bindings for an iSCSI adapter"
host.StorageSystem.setLockMode.label                              = "Set lock mode"
host.StorageSystem.setLockMode.summary                            = "Change the lock mode of the VMFS"
host.StorageSystem.setMultipathLunPolicy.label                    = "Set logical unit policy"
host.StorageSystem.setMultipathLunPolicy.summary                  = "Set the multipath policy for a logical unit "
host.StorageSystem.setVmfsVolumeName.label                        = "Change volume name"
host.StorageSystem.setVmfsVolumeName.summary                      = "Change the volume name of the VMFS"
host.StorageSystem.umountNetworkFileSystem.label                  = "Unmounts network file system"
host.StorageSystem.umountNetworkFileSystem.summary                = "Unmounts a network file system"
host.StorageSystem.unmountForceMountedVmfsVolume.label            = "Unmount force mounted VMFS"
host.StorageSystem.unmountForceMountedVmfsVolume.summary          = "Unmounts a force mounted VMFS volume"
host.StorageSystem.unmountVmfsVolume.label                        = "Unmount VMFS volume"
host.StorageSystem.unmountVmfsVolume.summary                      = "Unmount a mounted VMFS volume"
host.StorageSystem.unmountVmfsVolumeEx.label                      = "Unmount VMFS volumes"
host.StorageSystem.unmountVmfsVolumeEx.summary                    = "Unmounts one or more mounted VMFS volumes"
host.StorageSystem.updateDiskPartitions.label                     = "Update disk partitions"
host.StorageSystem.updateDiskPartitions.summary                   = "Change the partitions on the disk by supplying a partition specification and the device name"
host.StorageSystem.updateScsiLunDisplayName.label                 = "Update SCSI LUN display name"
host.StorageSystem.updateScsiLunDisplayName.summary               = "Updates the display name of a SCSI LUN"
host.StorageSystem.upgradeVmfs.label                              = "Upgrade VMFS"
host.StorageSystem.upgradeVmfs.summary                            = "Upgrade the VMFS to the current VMFS version"
host.StorageSystem.upgradeVmLayout.label                          = "Relocate virtual machine disks"
host.StorageSystem.upgradeVmLayout.summary                        = "Relocate the disks for all virtual machines into directories if stored in the ROOT"
host.StorageSystem.fetchDiskPartitionInfo.label                   = "Get disk partition information"
host.StorageSystem.fetchDiskPartitionInfo.summary                 = "Gets the partition information for the disks named by the device names"
host.StorageSystem.computeDiskPartitionInfo.label                 = "Compute disk partition information"
host.StorageSystem.computeDiskPartitionInfo.summary               = "Computes the disk partition information given the desired disk layout"
host.StorageSystem.updateSoftwareInternetScsiEnabled.label        = "Change Software Internet SCSI Status"
host.StorageSystem.updateSoftwareInternetScsiEnabled.summary      = "Enables or disables Software Internet SCSI"
host.StorageSystem.updateInternetScsiDiscoveryProperties.label    = "Update Internet SCSI discovery properties"
host.StorageSystem.updateInternetScsiDiscoveryProperties.summary  = "Updates the discovery properties for an Internet SCSI host bus adapter"
host.StorageSystem.updateInternetScsiAuthenticationProperties.label = "Update Internet SCSI authentication properties"
host.StorageSystem.updateInternetScsiAuthenticationProperties.summary = "Updates the authentication properties for an Internet SCSI host bus adapter"
host.StorageSystem.updateInternetScsiIPProperties.label           = "Update Internet SCSI IP properties"
host.StorageSystem.updateInternetScsiIPProperties.summary         = "Updates the IP properties for an Internet SCSI host bus adapter"
host.StorageSystem.updateInternetScsiName.label                   = "Update Internet SCSI name"
host.StorageSystem.updateInternetScsiName.summary                 = "Updates the name of an Internet SCSI host bus adapter"
host.StorageSystem.updateInternetScsiAlias.label                  = "Update Internet SCSI alias"
host.StorageSystem.updateInternetScsiAlias.summary                = "Updates the alias of an Internet SCSI host bus adapter"
host.StorageSystem.addInternetScsiSendTargets.label               = "Add Internet SCSI send targets"
host.StorageSystem.addInternetScsiSendTargets.summary             = "Adds send target entries to the host bus adapter discovery list"
host.StorageSystem.refresh.label                                  = "Refresh host storage system"
host.StorageSystem.refresh.summary                                = "Refresh the storage information and settings to pick up any changes that have occurred"
host.StorageSystem.removeInternetScsiSendTargets.label            = "Remove Internet SCSI send targets"
host.StorageSystem.removeInternetScsiSendTargets.summary          = "Removes send target entries from the host bus adapter discovery list"
host.StorageSystem.retrieveDiskPartitionInfo.label                = "Retrieve disk partition information"
host.StorageSystem.retrieveDiskPartitionInfo.summary              = "Gets the partition information for the disks named by the device names"
host.StorageSystem.addInternetScsiStaticTargets.label             = "Add Internet SCSI static targets "
host.StorageSystem.addInternetScsiStaticTargets.summary           = "Adds static target entries to the host bus adapter discovery list"
host.StorageSystem.removeInternetScsiStaticTargets.label          = "Remove Internet SCSI static targets"
host.StorageSystem.removeInternetScsiStaticTargets.summary        = "Removes static target entries from the host bus adapter discovery list"
host.StorageSystem.discoverFcoeHbas.label                         = "Discover FCOE storage"
host.StorageSystem.discoverFcoeHbas.summary                       = "Discovers new storage using FCOE"
host.StorageSystem.markForRemoval.label                           = "Update FCOE HBA state"
host.StorageSystem.markForRemoval.summary                         = "Mark or unmark the specified FCOE HBA for removal from the host system"
host.StorageSystem.formatVffs.label                               = "Format VFFS"
host.StorageSystem.formatVffs.summary                             = "Formats a new VFFS on a SSD disk"
host.StorageSystem.extendVffs.label                               = "Extend VFFS"
host.StorageSystem.extendVffs.summary                             = "Extends a VFFS by attaching a SSD disk"
host.StorageSystem.destroyVffs.label                              = "Delete VFFS"
host.StorageSystem.destroyVffs.summary                            = "Deletes a VFFS from the host"
host.StorageSystem.mountVffsVolume.label                          = "Mounts VFFS volume"
host.StorageSystem.mountVffsVolume.summary                        = "Mounts an unmounted VFFS volume"
host.StorageSystem.unmountVffsVolume.label                        = "Unmounts VFFS volume"
host.StorageSystem.unmountVffsVolume.summary                      = "Unmounts a mounted VFFS volume"
host.StorageSystem.deleteVffsVolumeState.label                    = "Delete state information for unmounted VFFS volume"
host.StorageSystem.deleteVffsVolumeState.summary                  = "Removes the state information for a previously unmounted VFFS volume"
host.StorageSystem.rescanVffs.label                               = "Rescan VFFS"
host.StorageSystem.rescanVffs.summary                             = "Rescans for new VFFS volumes"
host.StorageSystem.queryAvailableSsds.label                       = "Query available SSD disks"
host.StorageSystem.queryAvailableSsds.summary                     = "Queries available SSD disks"
host.StorageSystem.setNFSUser.label                               = "Set NFS user"
host.StorageSystem.setNFSUser.summary                             = "Sets an NFS user"
host.StorageSystem.changeNFSUserPassword.label                    = "Change NFS user password"
host.StorageSystem.changeNFSUserPassword.summary                  = "Changes the password of an NFS user"
host.StorageSystem.queryNFSUser.label                             = "Query NFS user"
host.StorageSystem.queryNFSUser.summary                           = "Queries an NFS user"
host.StorageSystem.clearNFSUser.label                             = "Clear NFS user"
host.StorageSystem.clearNFSUser.summary                           = "Deletes an NFS user"
host.StorageSystem.turnDiskLocatorLedOn.label                     = "Turn on disk locator LEDs"
host.StorageSystem.turnDiskLocatorLedOn.summary                   = "Turns on one or more disk locator LEDs"
host.StorageSystem.turnDiskLocatorLedOff.label                    = "Turn off locator LEDs"
host.StorageSystem.turnDiskLocatorLedOff.summary                  = "Turns off one or more disk locator LEDs"
host.StorageSystem.markAsLocal.label                              = "Mark the disk as a local disk"
host.StorageSystem.markAsLocal.summary                            = "Marks the disk as a local disk"
host.StorageSystem.markAsNonLocal.label                           = "Mark the disk as a remote disk"
host.StorageSystem.markAsNonLocal.summary                         = "Marks the disk as a remote disk"
host.StorageSystem.markAsNonSsd.label                             = "Mark the disk as a HDD disk"
host.StorageSystem.markAsNonSsd.summary                           = "Marks the disk as a HDD disk"
host.StorageSystem.markAsSsd.label                                = "Mark the disk as a flash disk"
host.StorageSystem.markAsSsd.summary                              = "Marks the disk as a flash disk"

###
host.VFlashManager.configureVFlashResourceEx.label                = "Configure virtual flash resource"
host.VFlashManager.configureVFlashResourceEx.summary              = "Configures virtual flash resource on a list of SSD devices"
host.VFlashManager.configureVFlashResource.label                  = "Configure virtual flash resource"
host.VFlashManager.configureVFlashResource.summary                = "Configures virtual flash resource on a host"
host.VFlashManager.removeVFlashResource.label                     = "Remove virtual flash resource"
host.VFlashManager.removeVFlashResource.summary                   = "Removes virtual flash resource from a host"
host.VFlashManager.configureHostVFlashCache.label                 = "Configure virtual flash host swap cache"
host.VFlashManager.configureHostVFlashCache.summary               = "Configures virtual flash host swap cache"
host.VFlashManager.getVFlashModuleDefaultConfig.label             = "Retrieve virtual flash module configuration options from a host"
host.VFlashManager.getVFlashModuleDefaultConfig.summary           = "Retrieves virtual flash module configuration options from a host"

###
host.AutoStartManager.autoPowerOff.label                          = "Auto power Off"
host.AutoStartManager.autoPowerOff.summary                        = "Powers Off virtual machines according to the current AutoStart configuration"
host.AutoStartManager.autoPowerOn.label                           = "Auto power On"
host.AutoStartManager.autoPowerOn.summary                         = "Powers On virtual machines according to the current AutoStart configuration"
host.AutoStartManager.reconfigure.label                           = "Reconfigure AutoStart Manager"
host.AutoStartManager.reconfigure.summary                         = "Changes the power on or power off sequence"

###
host.DatastoreBrowser.search.label                                = "Search datastore"
host.DatastoreBrowser.search.summary                              = "Returns the information for the files that match the given search criteria"
host.DatastoreBrowser.searchSubFolders.label                      = "Search datastore subfolders"
host.DatastoreBrowser.searchSubFolders.summary                    = "Returns the information for the files that match the given search criteria"
host.DatastoreSystem.createVmfsDatastore.label                    = "Create VMFS datastore"
host.DatastoreSystem.createVmfsDatastore.summary                  = "Creates a new VMFS datastore"
host.DatastoreSystem.createNasDatastore.label                     = "Create NAS datastore"
host.DatastoreSystem.createNasDatastore.summary                   = "Creates a new Network Attached Storage (NAS) datastore"
host.DatastoreSystem.createLocalDatastore.label                   = "Create local datastore"
host.DatastoreSystem.createLocalDatastore.summary                 = "Creates a new local datastore"
host.DatastoreSystem.createVvolDatastore.label                   = "Create Virtual Volume datastore"
host.DatastoreSystem.createVvolDatastore.summary                 = "Creates a Virtuial Volume datastore"
host.DatastoreSystem.removeDatastore.label                        = "Remove datastore"
host.DatastoreSystem.removeDatastore.summary                      = "Removes a datastore from a host"
host.DatastoreSystem.removeDatastoreEx.label                      = "Remove datastores"
host.DatastoreSystem.removeDatastoreEx.summary                    = "Removes one or more datastores from a host"
host.DatastoreSystem.configureVmDatastorePrincipal.label          = "Configure virtual machine datastore principal"
host.DatastoreSystem.configureVmDatastorePrincipal.summary        = "Configures virtual machine datastore principal user for the host"
host.DatastoreSystem.configureDatastorePrincipal.label            = "Configure datastore principal"
host.DatastoreSystem.configureDatastorePrincipal.summary          = "Configures datastore principal user for the host"
host.DatastoreSystem.queryVmfsDatastoreCreateOptions.label        = "Query datastore create options"
host.DatastoreSystem.queryVmfsDatastoreCreateOptions.summary      = "Queries options for creating a new VMFS datastore for a disk"
host.DatastoreSystem.queryVmfsDatastoreExtendOptions.label        = "Query datastore extend options"
host.DatastoreSystem.queryVmfsDatastoreExtendOptions.summary      = "Queries options for extending an existing VMFS datastore for a disk"
host.DatastoreSystem.extendVmfsDatastore.label                    = "Extend datastore"
host.DatastoreSystem.extendVmfsDatastore.summary                  = "Extends an existing VMFS datastore"
host.DatastoreSystem.setAgentVmDatastore.label                    = "Set agent virtual machine datastore"
host.DatastoreSystem.setAgentVmDatastore.summary                  = "Reconfigure agent virtual machine datastore for a server"
###
host.VMotionSystem.updateIpConfig.label                           = "Update IP configuration"
host.VMotionSystem.updateIpConfig.summary                         = "Update the IP configuration of the vMotion virtual NIC"
host.VMotionSystem.selectVnic.label                               = "Select vMotion virtual NIC"
host.VMotionSystem.selectVnic.summary                             = "Select the virtual NIC to be used for vMotion"
host.VMotionSystem.enable.label                                   = "Enable vMotion"
host.VMotionSystem.enable.summary                                 = "Enable vMotion on this host"
host.VMotionSystem.disable.label                                  = "Disable vMotion"
host.VMotionSystem.disable.summary                                = "Disable vMotion on this host"
host.VMotionSystem.deselectVnic.label                             = "Deselect vMotion virtual NIC"
host.VMotionSystem.deselectVnic.summary                           = "Deselect the virtual NIC to be used for vMotion"
host.VMotionManager.completeSource.label                          = "Complete vMotion source notification"
host.VMotionManager.completeSource.summary                        = "Tell the source that vMotion migration is complete (success or failure)"
host.VMotionManager.completeDestination.label                     = "Complete vMotion receive notification"
host.VMotionManager.completeDestination.summary                   = "Tell the destination that vMotion migration is complete (success or failure)"
host.VMotionManager.prepareSource.label                           = "Prepare vMotion send operation"
host.VMotionManager.prepareSource.summary                         = "Prepare a vMotion send operation"
host.VMotionManager.prepareDestination.label                      = "Prepare vMotion receive operation"
host.VMotionManager.prepareDestination.summary                    = "Prepare a vMotion receive operation"
host.VMotionManager.initiateDestination.label                     = "Initiate vMotion receive operation"
host.VMotionManager.initiateDestination.summary                   = "Initiate a vMotion receive operation"
host.VMotionManager.initiateSource.label                          = "Initiate vMotion send operation"
host.VMotionManager.initiateSource.summary                        = "Initiate a vMotion send operation"
host.VMotionManager.upgradeDestination.label                      = "Commit vMotion destination upgrade"
host.VMotionManager.upgradeDestination.summary                    = "Reparent the disks at destination and commit the redo logs at the end of a vMotion migration"
host.BootDeviceSystem.queryBootDevices.label                      = "Get boot devices"
host.BootDeviceSystem.queryBootDevices.summary                    = "Get available boot devices for the host system"
###
LegacyTemplateManager.getLegacyTemplates.label                    = "Get templates"
LegacyTemplateManager.getLegacyTemplates.summary                  = "List the templates on this host"
LegacyTemplateManager.upgradeTemplate.label                       = "Upgrade template"
LegacyTemplateManager.upgradeTemplate.summary                     = "Upgrade the template"
LegacyTemplateManager.removeTemplateFromInventory.label           = "Remove template from inventory"
LegacyTemplateManager.removeTemplateFromInventory.summary         = "Remove the template from the inventory"
###
internal.VMotionManager.initiateDestination.label                 = "Initiate destination"
internal.VMotionManager.initiateDestination.summary               = "Initiate destination"
###
scheduler.ScheduledTask.cancel.label                              = "Cancel scheduled task"
scheduler.ScheduledTask.cancel.summary                            = "Cancel the scheduled task running"
scheduler.ScheduledTask.getInfo.label                             = "Get information"
scheduler.ScheduledTask.getInfo.summary                           = "Information about the current scheduled task"
scheduler.ScheduledTask.reconfigure.label                         = "Reconfigure scheduled task"
scheduler.ScheduledTask.reconfigure.summary                       = "Reconfigure the scheduled task properties"
scheduler.ScheduledTask.remove.label                              = "Remove scheduled task"
scheduler.ScheduledTask.remove.summary                            = "Remove the scheduled task"
scheduler.ScheduledTask.run.label                                 = "Run scheduled task"
scheduler.ScheduledTask.run.summary                               = "Run the scheduled task immediately"
scheduler.ScheduledTaskManager.create.label                       = "Create scheduled task"
scheduler.ScheduledTaskManager.create.summary                     = "Create a scheduled task"
scheduler.ScheduledTaskManager.createObjectScheduledTask.label    = "Create scheduled task"
scheduler.ScheduledTaskManager.createObjectScheduledTask.summary  = "Create a scheduled task"
scheduler.ScheduledTaskManager.getDescription.label               = "Get scheduled task description"
scheduler.ScheduledTaskManager.getDescription.summary             = "Get localized description of strings used in scheduled tasks"
scheduler.ScheduledTaskManager.getScheduledTask.label             = "Scheduled task"
scheduler.ScheduledTaskManager.getScheduledTask.summary           = "Get scheduled tasks defined on the entity"
scheduler.ScheduledTaskManager.retrieveEntityScheduledTask.label  = "Retrieve scheduled task"
scheduler.ScheduledTaskManager.retrieveEntityScheduledTask.summary = "Available scheduled tasks defined on the entity"
scheduler.ScheduledTaskManager.retrieveObjectScheduledTask.label  = "Retrieve scheduled task"
scheduler.ScheduledTaskManager.retrieveObjectScheduledTask.summary = "Available scheduled tasks defined on the object"

###
vm.Snapshot.exportSnapshot.label                                  = "Export OVF template"
vm.Snapshot.exportSnapshot.summary                                = "Export the snapshot as an OVF template"
vm.Snapshot.getConfigInfo.label                                   = "Get snapshot configuration"
vm.Snapshot.getConfigInfo.summary                                 = "Access the configuration information of a virtual machine snapshot"
vm.Snapshot.getScreenshotInfo.label                               = "Get screenshot information"
vm.Snapshot.getScreenshotInfo.summary                             = "Get the screen image for the snapshot"
vm.Snapshot.makeCurrent.label                                     = "Make snapshot current"
vm.Snapshot.makeCurrent.summary                                   = "Make the snapshot current"
vm.Snapshot.rename.label                                          = "Rename snapshot"
vm.Snapshot.rename.summary                                        = "Rename the snapshot"
vm.Snapshot.remove.label                                          = "Remove snapshot"
vm.Snapshot.remove.summary                                        = "Remove snapshot and delete its associated storage"
vm.Snapshot.revert.label                                          = "Revert snapshot"
vm.Snapshot.revert.summary                                        = "Change the execution state of the virtual machine to the state of this snapshot"
vm.Snapshot.createLinkedClone.summary                             = "Create a linked clone from this snapshot"
vm.Snapshot.createLinkedClone.label                               = "Create Linked Clone"
vma1.Vma1.login.label                                             = "Log in"
vma1.Vma1.login.summary                                           = "Log in"
vma1.Vma1.logout.label                                            = "Log out"
vma1.Vma1.logout.summary                                          = "Log out"
vma1.Vma1.resolvePath.label                                       = "Resolved path"
vma1.Vma1.resolvePath.summary                                     = "Return the resolved the path"
vma1.Vma1.getContents.label                                       = "Get contents"
vma1.Vma1.getContents.summary                                     = "Retrieves the value"
vma1.Vma1.getInfo.label                                           = "Get information"
vma1.Vma1.getInfo.summary                                         = "Gets the information"
vma1.Vma1.getUpdates.label                                        = "Get updates"
vma1.Vma1.getUpdates.summary                                      = "Provides a list of updates"
vma1.Vma1.cancelGetUpdates.label                                  = "Cancel updates"
vma1.Vma1.cancelGetUpdates.summary                                = "Cancel retrieving the list of updates"
vma1.Vma1.putUpdates.label                                        = "Upload updates"
vma1.Vma1.putUpdates.summary                                      = "Upload the update list"
vma1.Vma1.changePermissions.label                                 = "Change permission"
vma1.Vma1.changePermissions.summary                               = "Changes the permission"
vma1.Vma1.startVM.label                                           = "Start virtual machine"
vma1.Vma1.startVM.summary                                         = "Starts virtual machine"
vma1.Vma1.answerVM.label                                          = "Virtual machine"
vma1.Vma1.answerVM.summary                                        = "Answer a virtual machine question"
vma1.Vma1.snapshotVM.label                                        = "Virtual machine snapshot"
vma1.Vma1.snapshotVM.summary                                      = "Snapshot of virtual machine"
vma1.Vma1.consolidateVM.label                                     = "Virtual machine consolidate"
vma1.Vma1.consolidateVM.summary                                   = "Consolidate the virtual machine"
vma1.Vma1.revertVM.label                                          = "Virtual machine revert"
vma1.Vma1.revertVM.summary                                        = "Revert virtual machine"
vma1.Vma1.stopVM.label                                            = "Stop virtual machine"
vma1.Vma1.stopVM.summary                                          = "Stop virtual machine"
vma1.Vma1.resetVM.label                                           = "Reset virtual machine"
vma1.Vma1.resetVM.summary                                         = "Reset virtual machine"
vma1.Vma1.migrateVM.label                                         = "Migrate virtual machine"
vma1.Vma1.migrateVM.summary                                       = "Migrate virtual machine"
vma1.Vma1.moveVM.label                                            = "Move virtual machine"
vma1.Vma1.moveVM.summary                                          = "Move virtual machine"
vma1.Vma1.create.label                                            = "Create element"
vma1.Vma1.create.summary                                          = "Create element"
vma1.Vma1.createTemplate.label                                    = "Create template"
vma1.Vma1.createTemplate.summary                                  = "Create template of element"
vma1.Vma1.createVirtualDisk.label                                 = "Create virtual disk"
vma1.Vma1.createVirtualDisk.summary                               = "Create virtual disk"
vma1.Vma1.cloneVM.label                                           = "Clone virtual machine"
vma1.Vma1.cloneVM.summary                                         = "Clone virtual machine"
vma1.Vma1.rename.label                                            = "Rename"
vma1.Vma1.rename.summary                                          = "Rename the element"
vma1.Vma1.delete.label                                            = "Delete"
vma1.Vma1.delete.summary                                          = "Delete the element"
vma1.Vma1.enableHost.label                                        = "Enable host"
vma1.Vma1.enableHost.summary                                      = "Enable the host"
vma1.Vma1.disableHost.label                                       = "Disable host"
vma1.Vma1.disableHost.summary                                     = "Disable the host"
vma1.Vma1.stopHost.label                                          = "Stop host"
vma1.Vma1.stopHost.summary                                        = "Stop the host"
vma1.Vma1.runTask.label                                           = "Run task"
vma1.Vma1.runTask.summary                                         = "Run the task"
vma1.Vma1.endTask.label                                           = "End task"
vma1.Vma1.endTask.summary                                         = "End the task"
vma1.Vma1.queryPerfData.label                                     = "Query performance data"
vma1.Vma1.queryPerfData.summary                                   = "Query performance data"
vma1.Vma1.queryPerfData2.label                                    = "Query performance data 2"
vma1.Vma1.queryPerfData2.summary                                  = "Query performance data 2"
###
option.OptionManager.queryView.label                              = "Query options view"
option.OptionManager.queryView.summary                            = "Returns nodes in the option hierarchy"
option.OptionManager.updateValues.label                           = "Update option values"
option.OptionManager.updateValues.summary                         = "Updates one or more properties"
###
event.EventHistoryCollector.setLatestPageSize.label               = "Set event history latest page size"
event.EventHistoryCollector.setLatestPageSize.summary             = "Set the last page viewed size of event history"
event.EventHistoryCollector.rewind.label                          = "Rewind event history"
event.EventHistoryCollector.rewind.summary                        = "Moves view to the oldest item of event history"
event.EventHistoryCollector.reset.label                           = "Reset event history"
event.EventHistoryCollector.reset.summary                         = "Moves view to the newest item of event history"
event.EventHistoryCollector.remove.label                          = "Remove event history"
event.EventHistoryCollector.remove.summary                        = "Removes the event history collector"
event.EventHistoryCollector.readNext.label                        = "Read next event history"
event.EventHistoryCollector.readNext.summary                      = "Reads view from current position of event history, and then the position is moved to the next newer page"
event.EventHistoryCollector.readPrev.label                        = "Read previous event history"
event.EventHistoryCollector.readPrev.summary                      = "Reads view from current position of event history and moves the position to the next older page"
###
view.ContainerView.createListView.label                           = "Create container view"
view.ContainerView.createListView.summary                         = "Create a list view object from the current contents of this view"
view.ContainerView.destroy.label                                  = "Delete container view"
view.ContainerView.destroy.summary                                = "Remove a list view object from current contents of this view"
###
view.InventoryView.openFolder.label                               = "Open inventory view folder"
view.InventoryView.openFolder.summary                             = "Adds the child objects of a given managed entity to the view"
view.InventoryView.destroy.label                                  = "Remove inventory view"
view.InventoryView.destroy.summary                                = "Remove the inventory view object"
view.InventoryView.closeFolder.label                              = "Close inventory view"
view.InventoryView.closeFolder.summary                            = "Notify the server that folders have been closed"
###
view.ListView.modify.label                                        = "Modify list view"
view.ListView.modify.summary                                      = "Modify the list view"
view.ListView.reset.label                                         = "Reset list view"
view.ListView.reset.summary                                       = "Reset the list view"
view.ListView.destroy.label                                       = "Remove list view"
view.ListView.destroy.summary                                     = "Remove the list view object"
###
view.ManagedObjectView.destroy.label                              = "Remove managed object"
view.ManagedObjectView.destroy.summary                            = "Remove the managed objects"
###
view.view.destroy.label                                           = "Remove View"
view.view.destroy.summary                                         = "Remove this view"
###
view.ViewManager.destroy.label                                    = "Remove View Manager"
view.ViewManager.destroy.summary                                  = "Remove this View Manager object"
view.ViewManager.createInventoryView.label                        = "Create inventory view"
view.ViewManager.createInventoryView.summary                      = "Create a view for browsing the inventory and tracking changes to open folders"
view.ViewManager.createContainerView.label                        = "Create container view"
view.ViewManager.createContainerView.summary                      = "Create a view for monitoring the contents of a single container"
view.ViewManager.createListView.label                             = "Create list view"
view.ViewManager.createListView.summary                           = "Create a view for getting updates"
###
SessionManager.impersonateUser.label                              = "Impersonate user"
SessionManager.impersonateUser.summary                            = "Convert session to impersonate specified user"
SessionManager.loginExtension.label                               = "Login extension"
SessionManager.loginExtension.summary                             = "Creates a privileged login session for an extension"
###
Task.UpdateProgress.label                                         = "Update progress"
Task.UpdateProgress.summary                                       = "Update task progress"
Task.UpdateDescription.label                                      = "Update task description"
Task.UpdateDescription.summary                                    = "Updates task description with the current phase of the task"
Task.setState.label                                               = "Set task state"
Task.setState.summary                                             = "Sets task state"
###
Task.createTask.label                                             = "Create task"
Task.createTask.summary                                           = "Create a new task"
###
host.PatchManager.Scan.label                                      = "Scan"
host.PatchManager.Scan.summary                                    = "Scan the host for patch status"
host.PatchManager.ScanV2.label                                    = "Scan"
host.PatchManager.ScanV2.summary                                  = "Scan the host for patch status"
host.PatchManager.Install.label                                   = "Install"
host.PatchManager.Install.summary                                 = "Install the patch"
host.PatchManager.InstallV2.label                                 = "Install"
host.PatchManager.InstallV2.summary                               = "Install the patch"
host.PatchManager.Uninstall.label                                 = "Uninstall"
host.PatchManager.Uninstall.summary                               = "Uninstall the patch"
host.PatchManager.Rollback.label                                  = "Rollback"
host.PatchManager.Rollback.summary                                = "Rollback the last installed patch"
host.PatchManager.Check.label                                     = "Check"
host.PatchManager.Check.summary                                   = "Check for dependencies, conflicts, and obsolete updates"
host.PatchManager.Stage.label                                     = "Stage"
host.PatchManager.Stage.summary                                   = "Stage the updates to the host"
host.PatchManager.Query.label                                     = "Query"
host.PatchManager.Query.summary                                   = "Query the host for installed bulletins"
###
host.ImageConfigManager.updateAcceptanceLevel.label               = "Update acceptance level"
host.ImageConfigManager.updateAcceptanceLevel.summary             = "Updates the acceptance level of a host"
###
host.EsxAgentHostManager.updateConfig.label                       = "Update ESX agent configuration"
host.EsxAgentHostManager.updateConfig.summary                     = "Updates the ESX agent configuration of a host"
###
Datacenter.powerOnVm.label                                        = "Initialize powering On"
Datacenter.powerOnVm.summary                                      = "Initialize tasks for powering on virtual machines"
###
ComputeResource.setCustomValue.label                              = "Set compute-resource custom value"
ComputeResource.setCustomValue.summary                            = "Sets the value of a custom field for a unified compute resource"
ExtensibleManagedObject.setCustomValue.label                      = "Set extensible custom value"
ExtensibleManagedObject.setCustomValue.summary                    = "Sets the value of a custom field of an extensible managed object"
alarm.Alarm.setCustomValue.label                                  = "Set alarm custom value"
alarm.Alarm.setCustomValue.summary                                = "Sets the value of a custom field of an alarm"
ClusterComputeResource.setCustomValue.label                       = "Set cluster resource custom value"
ClusterComputeResource.setCustomValue.summary                     = "Sets the value of a custom field for a cluster of objects as a unified compute-resource"
Datacenter.setCustomValue.label                                   = "Set datacenter custom value"
Datacenter.setCustomValue.summary                                 = "Sets the value of a custom field of a datacenter"
Datastore.setCustomValue.label                                    = "Set datastore custom value"
Datastore.setCustomValue.summary                                  = "Sets the value of a custom field of a datastore"
Folder.setCustomValue.label                                       = "Set folder custom value"
Folder.setCustomValue.summary                                     = "Sets the value of a custom field of a folder"
host.CpuSchedulerSystem.setCustomValue.label                      = "Set CPU scheduler system custom value"
host.CpuSchedulerSystem.setCustomValue.summary                    = "Sets the value of a custom field of a host CPU scheduler"
host.FirewallSystem.setCustomValue.label                          = "Set firewall custom value"
host.FirewallSystem.setCustomValue.summary                        = "Sets the value of a custom field of a host firewall system"
host.MemoryManagerSystem.setCustomValue.label                     = "Set memory manager custom value"
host.MemoryManagerSystem.setCustomValue.summary                   = "Sets the value of a custom field of a host memory manager system"
host.NetworkSystem.setCustomValue.label                           = "Set network custom value"
host.NetworkSystem.setCustomValue.summary                         = "Sets the value of a custom field of a host network system"
host.ServiceSystem.setCustomValue.label                           = "Set service custom value"
host.ServiceSystem.setCustomValue.summary                         = "Sets the value of a custom field of a host service system."
host.SnmpSystem.setCustomValue.label                              = "Set SNMP custom value"
host.SnmpSystem.setCustomValue.summary                            = "Sets the value of a custom field of a host SNMP system"
host.StorageSystem.setCustomValue.label                           = "Set storage custom value"
host.StorageSystem.setCustomValue.summary                         = "Sets the value of a custom field of a host storage system"
host.VMotionSystem.setCustomValue.label                           = "Set vMotion custom value"
host.VMotionSystem.setCustomValue.summary                         = "Sets the value of a custom field of a host vMotion system"
HostSystem.setCustomValue.label                                   = "Set host custom value"
HostSystem.setCustomValue.summary                                 = "Sets the value of a custom field of an host"
HostSystem.updateManagementServerIp.label	                        = "Update management server IP"
HostSystem.updateManagementServerIp.summary                       = "Update information about the vCenter Server managing this host"
ManagedEntity.setCustomValue.label                                = "Set managed entity custom value"
ManagedEntity.setCustomValue.summary                              = "Sets the value of a custom field of a managed entity"
Network.setCustomValue.label                                      = "Set network custom Value"
Network.setCustomValue.summary                                    = "Sets the value of a custom field of a network"
OpaqueNetwork.setCustomValue.label                                = "Set a custom property to an opaque network"
OpaqueNetwork.setCustomValue.summary                              = "Sets the value of a custom field of an opaque network"
ResourcePool.setCustomValue.label                                 = "Set resource pool custom value"
ResourcePool.setCustomValue.summary                               = "Sets the value of a custom field of a resource pool of physical resources"
scheduler.ScheduledTask.setCustomValue.label                      = "Set scheduled task custom value"
scheduler.ScheduledTask.setCustomValue.summary                    = "Sets the value of a custom field of a scheduled task"
VirtualMachine.setCustomValue.label                               = "Set virtual machine custom value"
VirtualMachine.setCustomValue.summary                             = "Sets the value of a custom field of a virtual machine"
vm.Snapshot.setCustomValue.label                                  = "Set snapshot custom value"
vm.Snapshot.setCustomValue.summary                                = "Sets the value of a custom field of a virtual machine snapshot"
Task.setCustomValue.label                                         = "Set task custom value"
Task.setCustomValue.summary                                       = "Sets the value of a custom field of a task"
###
ClusterComputeResource.groupPowerOn.label                         = "Group power On"
ClusterComputeResource.groupPowerOn.summary                       = "Powers On multiple virtual machines"
ClusterComputeResource.initialPlacement.label                     = "Initial virtual machine placement"
ClusterComputeResource.initialPlacement.summary                   = "Gets a list of recommendations for power on locations"
event.EventManager.postEvent.label                                = "Post event"
event.EventManager.postEvent.summary                              = "Posts the specified event"
host.DateTimeSystem.queryAvailableTimeZones.label                 = "Query available time zones"
host.DateTimeSystem.queryAvailableTimeZones.summary               = "Retrieves the list of available time zones on the host"
host.DateTimeSystem.queryDateTime.label                           = "Query date and time"
host.DateTimeSystem.queryDateTime.summary                         = "Get the current date and time on the host"
host.DateTimeSystem.refresh.label                                 = "Refresh"
host.DateTimeSystem.refresh.summary                               = "Refresh the date and time settings"
host.DateTimeSystem.updateConfig.label                            = "Update configuration"
host.DateTimeSystem.updateConfig.summary                          = "Update the date and time on the host"
host.DateTimeSystem.updateDateTime.label                          = "Update date or time"
host.DateTimeSystem.updateDateTime.summary                        = "Update the date/time on the host"
host.MemoryManagerSystem.reconfigureVirtualMachineReservation.label = "Reconfigure virtual machine reservation"
host.MemoryManagerSystem.reconfigureVirtualMachineReservation.summary = "Updates the virtual machine reservation information"
HostSystem.updateFlags.label                                      = "Update host system flags"
HostSystem.updateFlags.summary                                    = "Update the flags of the host system"
LicenseManager.querySupportedFeatures.label                       = "Query supported features"
LicenseManager.querySupportedFeatures.summary                     = "Searches the current license source for licenses available from this system"
SessionManager.sessionIsActive.label                              = "Session active query"
SessionManager.sessionIsActive.summary                            = "Validates that a currently active session exists"
TaskManager.createTask.label                                      = "Create task"
TaskManager.createTask.summary                                    = "Create a task"
VirtualMachine.defragmentAllDisks.label                           = "Defragment all disks"
VirtualMachine.defragmentAllDisks.summary                         = "Defragment all virtual disks attached to this virtual machine"
ProxyService.addService.label                                     = "Add service"
ProxyService.addService.summary                                   = "Add service with connections to be proxied"
ProxyService.removeService.label                                  = "Remove service"
ProxyService.removeService.summary                                = "Remove service from being proxied"
ClusterComputeResource.refreshRecommendation.label                = "Refresh recommendations"
ClusterComputeResource.refreshRecommendation.summary              = "Refreshes the list of recommendations"
HostSystem.queryOverheadEx.label                                  = "Query memory overhead"
HostSystem.queryOverheadEx.summary                                = "Query memory overhead"
HostSystem.sendWakeOnLanPacket.label                              = "Send Wake-on-LAN packet"
HostSystem.sendWakeOnLanPacket.summary                            = "Send Wake-on-LAN packets to the physical NICs specified"
HostSystem.updateIpmi.label                                       = "Update IPMI or ILO information used by DPM"
HostSystem.updateIpmi.summary                                     = "Update IPMI or ILO information for this host used by DPM"
view.ListView.resetFromView.label                                 = "Reset view"
view.ListView.resetFromView.summary                               = "Resets a set of objects in a given view"
view.ViewManager.createListViewFromView.label                     = "Create list view"
view.ViewManager.createListViewFromView.summary                   = "Create a list view from an existing view"
view.View.destroy.label                                           = "Remove view"
view.View.destroy.summary                                         = "Remove view"
NfcService.fileManagement.label                                   = "Manipulate file paths"
NfcService.fileManagement.summary                                 = "Permission to manipulate file paths"
NfcService.systemManagement.label                                 = "Manipulate system-related file paths"
NfcService.systemManagement.summary                               = "Permission to manipulate all system related file paths"
UserDirectory.checkGroupMembership.label                          = "Check group membership"
UserDirectory.checkGroupMembership.summary                        = "Check whether a user is a member of a given list of groups"
###
ProxyService.addEndpoint.label                                    = "Add end point"
ProxyService.addEndpoint.summary                                  = "Add a service whose connections are to be proxied"
ProxyService.removeEndpoint.label                                 = "Remove end point"
ProxyService.removeEndpoint.summary                               = "End point to be detached"
VirtualizationCollector.setPerformancePageSize.label              = "Set performance page size"
VirtualizationCollector.setPerformancePageSize.summary            = "Maximum number of samples in the page"
VirtualizationManager.getDiscoverySpec.label                      = "Discovery specifications"
VirtualizationManager.getDiscoverySpec.summary                    = "Get discovery specifications"
VirtualizationManager.setDiscoverySpec.label                      = "Set discovery specifications"
VirtualizationManager.setDiscoverySpec.summary                    = "Discovery specification entries successfully set"
VirtualizationManager.addDiscoverySpec.label                      = "Add discovery specifications"
VirtualizationManager.addDiscoverySpec.summary                    = "Discovery specification entries successfully added"
VirtualizationManager.deleteDiscoverySpec.label                   = "Delete discovery specification"
VirtualizationManager.deleteDiscoverySpec.summary                 = "Discovery specification entries deleted"
VirtualizationManager.getPhysicalEntity.label                     = "Get physical entity"
VirtualizationManager.getPhysicalEntity.summary                   = "Get set of physical entities "
VirtualizationManager.setPhysicalEntity.label                     = "Set physical entity"
VirtualizationManager.setPhysicalEntity.summary                   = "Number of successful physical entity keys"
VirtualizationManager.addPhysicalEntity.label                     = "Add physical entity"
VirtualizationManager.addPhysicalEntity.summary                   = "Add physical entity"
VirtualizationManager.deletePhysicalEntity.label                  = "Delete physical entity"
VirtualizationManager.deletePhysicalEntity.summary                = "Delete physical entity"
VirtualizationManager.setCredential.label                         = "Set credential"
VirtualizationManager.setCredential.summary                       = "Invalid username or password"
VirtualizationManager.discover.label                              = "Discovery"
VirtualizationManager.discover.summary                            = "Discovery of physical entities"
VirtualizationManager.queryPerformance.label                      = "Query performance"
VirtualizationManager.queryPerformance.summary                    = "Physical entity's performance information"
VirtualizationManager.generateCandidate.label                     = "Generate candidate"
VirtualizationManager.generateCandidate.summary                   = "Generate candidates score"
VirtualizationManager.generatePlacement.label                     = "Generate placement"
VirtualizationManager.generatePlacement.summary                   = "List of physical entities passed in"
VirtualizationManager.virtualize.label                            = "Virtualize"
VirtualizationManager.virtualize.summary                          = "Physical entities that are virtualized"
VirtualDiskManager.createVirtualDisk.label                        = "Create virtual disk"
VirtualDiskManager.createVirtualDisk.summary                      = "Create the disk, either a datastore path or a URL referring to the virtual disk"
VirtualDiskManager.deleteVirtualDisk.label                        = "Delete virtual disk"
VirtualDiskManager.deleteVirtualDisk.summary                      = "Delete the disk, either a datastore path or a URL referring to the virtual disk"
VirtualDiskManager.moveVirtualDisk.label                          = "Move virtual disk"
VirtualDiskManager.moveVirtualDisk.summary                        = "Move the disk, either a datastore path or a URL referring to the virtual disk"
VirtualDiskManager.copyVirtualDisk.label                          = "Copy virtual disk"
VirtualDiskManager.copyVirtualDisk.summary                        = "Copy the disk, either a datastore path or a URL referring to the virtual disk"
VirtualDiskManager.setVirtualDiskUuid.label                       = "Set virtual disk UUID"
VirtualDiskManager.setVirtualDiskUuid.summary                     = "Set the UUID for the disk, either a datastore path or a URL referring to the virtual disk"
###
FileManager.move.label                                            = "Move file"
FileManager.move.summary                                          = "Move the file, folder, or disk from source datacenter to destination datacenter"
FileManager.copy.label                                            = "Copy file"
FileManager.copy.summary                                          = "Copy the file, folder, or disk from source datacenter to destination datacenter"
FileManager.delete.label                                          = "Delete file"
FileManager.delete.summary                                        = "Delete the file, folder, or disk from source datacenter"
FileManager.moveFile.label                                        = "Move file"
FileManager.moveFile.summary                                      = "Move the source file or folder to destination datacenter"
FileManager.copyFile.label                                        = "Copy file"
FileManager.copyFile.summary                                      = "Copy the source file or folder to destination datacenter"
FileManager.deleteFile.label                                      = "Delete file"
FileManager.deleteFile.summary                                    = "Delete the source file or folder from the datastore"
###
host.BootDeviceSystem.updateBootDevice.label                      = "Update boot device"
host.BootDeviceSystem.updateBootDevice.summary                    = "Update the boot device on the host system"
host.LockerSystem.updateHostLockerConfig.label                    = "Update host locker configuration"
host.LockerSystem.updateHostLockerConfig.summary                  = "Update the host locker configuration"
TroubleShootingManager.queryStatMetaData.label                    = "Query statistics metadata"
TroubleShootingManager.queryStatMetaData.summary                  = "Retrieves the statistics metadata"
TroubleShootingManager.queryStatMetaDataAtNode.label              = "Query statistics metadata at node"
TroubleShootingManager.queryStatMetaDataAtNode.summary            = "Retrieves the statistics metadata information"
TroubleShootingManager.createQuery.label                          = "Create query"
TroubleShootingManager.createQuery.summary                        = "Create a new query to gather troubleshooting data"
TroubleShootingManager.destroyQuery.label                         = "Destroy troubleshooting query"
TroubleShootingManager.destroyQuery.summary                       = "Destroys the troubleshooting query"
TroubleShootingManager.execute.label                              = "Execute troubleshooting query"
TroubleShootingManager.execute.summary                            = "Returns the set of statistics that corresponds to a saved query"
###
MigrateVmLRO.label                                                = "Migrate virtual machine"
MigrateVmLRO.summary                                              = "Migrates a virtual machine from one host to another"
Drm.ExecuteVMotionLRO.label                                       = "Migrate virtual machine"
Drm.ExecuteVMotionLRO.summary                                     = "Migrates a virtual machine from one host to another"
Drm.ExecuteVmPowerOnLRO.label                                     = "Power On virtual machine"
Drm.ExecuteVmPowerOnLRO.summary                                   = "Power on this virtual machine"
Drm.EnterStandbyLRO.label                                         = "Enter standby mode"
Drm.EnterStandbyLRO.summary                                       = "Puts this host into standby mode"
Drm.ExitStandbyLRO.label                                          = "Exit standby mode"
Drm.ExitStandbyLRO.summary                                        = "Brings this host out of standby mode"
Datacenter.ExecuteVmPowerOnLRO.label                              = "Power On virtual machine"
Datacenter.ExecuteVmPowerOnLRO.summary                            = "Power On this virtual machine"
FaultTolerance.PowerOnSecondaryLRO.label                          = "Start Fault Tolerance Secondary VM"
FaultTolerance.PowerOnSecondaryLRO.summary                        = "Start Secondary VM as the Primary VM is powered on"
Upgrade.UpgradeAgent.label                                        = "Upgrade vCenter Agent"
Upgrade.UpgradeAgent.summary                                      = "Upgrade the vCenter Agent"
DasConfig.ConfigureHost.label                                     = "Configuring vSphere HA"
DasConfig.ConfigureHost.summary                                   = "Configuring vSphere HA"
DasConfig.UnconfigureHost.label                                   = "Unconfiguring vSphere HA"
DasConfig.UnconfigureHost.summary                                 = "Unconfiguring vSphere HA"

ClusterUpgrade.UpgradeAgent.label                                 = "Upgrade vCenter Agents on cluster hosts"
ClusterUpgrade.UpgradeAgent.summary                               = "Upgrade the vCenter Agents on all cluster hosts"
###
FileManager.makeDirectory.label                                   = "Make Directory"
FileManager.makeDirectory.summary                                 = "Create a directory using the specified name"
ServiceInstance.retrieveProductComponents.label                   = "Retrieve product components"
ServiceInstance.retrieveProductComponents.summary                 = "Component information for bundled products"
VirtualDiskManager.queryVirtualDiskGeometry.label                 = "Query virtual disk geometry"
VirtualDiskManager.queryVirtualDiskGeometry.summary               = "Get the disk geometry information for the virtual disk"
VirtualDiskManager.queryVirtualDiskUuid.label                     = "Query virtual disk UUID"
VirtualDiskManager.queryVirtualDiskUuid.summary                   = "Get the virtual disk SCSI inquiry page data"
VirtualDiskManager.zeroFillVirtualDisk.label                      = "Fill virtual disk"
VirtualDiskManager.zeroFillVirtualDisk.summary                    = "Overwrite all blocks of the virtual disk with zeros"
VirtualDiskManager.inflateVirtualDisk.label                       = "Inflate virtual disk"
VirtualDiskManager.inflateVirtualDisk.summary                     = "Inflate a sparse virtual disk up to the full size"
VirtualDiskManager.shrinkVirtualDisk.label                        = "Shrink virtual disk"
VirtualDiskManager.shrinkVirtualDisk.summary                      = "Shrink a sparse virtual disk"
VirtualDiskManager.extendVirtualDisk.label                        = "Extend virtual disk"
VirtualDiskManager.extendVirtualDisk.summary                      = "Expand the capacity of a virtual disk to the new capacity"
VirtualDiskManager.queryVirtualDiskFragmentation.label            = "Query virtual disk fragmentation"
VirtualDiskManager.queryVirtualDiskFragmentation.summary          = "Return the percentage of fragmentation of the sparse virtual disk"
VirtualDiskManager.defragmentVirtualDisk.label                    = "Defragment virtual disk"
VirtualDiskManager.defragmentVirtualDisk.summary                  = "Defragment a sparse virtual disk"
VirtualDiskManager.eagerZeroVirtualDisk.label                     = "Zero out virtual disk"
VirtualDiskManager.eagerZeroVirtualDisk.summary                   = "Explicitly zero out the virtual disk."
VirtualDiskManager.optimizeEagerZeroVirtualDisk.label             = "Optimally eager zero the virtual disk"
VirtualDiskManager.optimizeEagerZeroVirtualDisk.summary           = "Optimally eager zero a VMFS thick virtual disk."

###
###

Internal.Tasks.SingleSpacedList                                   = "DasConfig.ConfigureHost DasConfig.UnconfigureHost Drm.ExecuteVMotionLRO Drm.ExecuteVmPowerOnLRO Drm.EnterStandbyLRO Drm.ExitStandbyLRO Datacenter.ExecuteVmPowerOnLRO Upgrade.UpgradeAgent ClusterUpgrade.UpgradeAgent ResourcePool.ImportVAppLRO ClusterComputeResource.setSuspendedState VirtualMachine.ExportVmLRO VirtualApp.ExportVAppLRO FaultTolerance.PowerOnSecondaryLRO Drm.ExecuteStorageVmotionLro Drm.ExecuteMaintenanceRecommendationsLro Drm.TrackEnterMaintenanceLro"

internal.EsxSupportSystem.printStatsToFile.label                  = "Print PLM stats to file"
internal.EsxSupportSystem.printStatsToFile.summary                = "Collect all the PLM stats and log them to file"

###
SimpleCommand.Execute.label                                       = "Execute client service"
SimpleCommand.Execute.summary                                     = "Execute the client service"
host.HealthStatusSystem.refresh.label                             = "Refresh hardware information"
host.HealthStatusSystem.refresh.summary                           = "Refresh hardware information"
HostSystem.acquireCimServicesTicket.label                         = "Acquire CIM service"
HostSystem.acquireCimServicesTicket.summary                       = "Establish a remote connection to a CIM interface"
ServiceManager.queryServiceList.label                             = "Query service list"
ServiceManager.queryServiceList.summary                           = "Location information that needs to match a service"
SessionManager.loginBySSPI.label                                  = "Login by SSPI"
SessionManager.loginBySSPI.summary                                = "Log on to the server using SSPI passthrough authentication"
host.FirmwareSystem.resetToFactoryDefaults.label                  = "Reset to factory default"
host.FirmwareSystem.resetToFactoryDefaults.summary                = "Reset the configuration to factory default"
host.FirmwareSystem.backupConfiguration.label                     = "Backup configuration"
host.FirmwareSystem.backupConfiguration.summary                   = "Backup the configuration of the host"
host.FirmwareSystem.queryConfigUploadURL.label                    = "Query configuration upload URL"
host.FirmwareSystem.queryConfigUploadURL.summary                  = "Host configuration must be uploaded for a restore operation"
host.FirmwareSystem.restoreConfiguration.label                    = "Restore configuration"
host.FirmwareSystem.restoreConfiguration.summary                  = "Restore configuration of the host"
PerformanceManager.queryCounterByLevel.label                      = "Query counter by level"
PerformanceManager.queryCounterByLevel.summary                    = "All performance data over 1 year old are deleted from the vCenter database"
profile.host.ProfileManager.createProfile.label                   = "Create a host profile"
profile.host.ProfileManager.createProfile.summary                 = "Create a host profile"
profile.cluster.ProfileManager.createProfile.label                = "Create cluster profile"
profile.cluster.ProfileManager.createProfile.summary              = "Create cluster profile"
profile.host.HostProfile.destroy.label                            = "Delete host profile"
profile.host.HostProfile.destroy.summary                          = "Delete host profile"
profile.host.HostProfile.associateEntities.label                  = "Attach host profile"
profile.host.HostProfile.associateEntities.summary                = "Attach host profile to host or cluster"
profile.host.HostProfile.dissociateEntities.label                 = "Detach host profile"
profile.host.HostProfile.dissociateEntities.summary               = "Detach host profile from host or cluster"
profile.host.HostProfile.exportProfile.label                      = "Export host profile"
profile.host.HostProfile.exportProfile.summary                    = "Export host profile to a file"
profile.cluster.ClusterProfile.destroy.label                      = "Delete cluster profile"
profile.cluster.ClusterProfile.destroy.summary                    = "Delete cluster profile"
profile.cluster.ClusterProfile.associateEntities.label            = "Attach cluster profile"
profile.cluster.ClusterProfile.associateEntities.summary          = "Attach cluster profile to cluster"
profile.cluster.ClusterProfile.dissociateEntities.label           = "Detach cluster profile"
profile.cluster.ClusterProfile.dissociateEntities.summary         = "Detach cluster profile from cluster"
profile.cluster.ClusterProfile.exportProfile.label                = "Export cluster profile"
profile.cluster.ClusterProfile.exportProfile.summary              = "Export cluster profile to a file"
profile.ComplianceManager.checkCompliance.label                   = "Check compliance"
profile.ComplianceManager.checkCompliance.summary                 = "Check compliance of host or cluster against a profile"
profile.host.HostProfile.checkCompliance.label                    = "Check compliance"
profile.host.HostProfile.checkCompliance.summary                  = "Check compliance of a host or cluster against a host profile"
profile.cluster.ClusterProfile.checkCompliance.label              = "Check compliance"
profile.cluster.ClusterProfile.checkCompliance.summary            = "Check compliance of a cluster against a cluster profile"
profile.host.ProfileManager.updateAnswerFile.label                = "Update host customizations"
profile.host.ProfileManager.updateAnswerFile.summary              = "Update host customizations for host"
profile.host.ProfileManager.validateAnswerFile.label                = "Validate host customizations"
profile.host.ProfileManager.validateAnswerFile.summary              = "Validate host customizations for host"
profile.host.ProfileManager.exportAnswerFile.label                = "Export host customizations"
profile.host.ProfileManager.exportAnswerFile.summary              = "Export host customizations for host"
profile.host.ProfileManager.checkAnswerFileStatus.label           = "Check host customizations status"
profile.host.ProfileManager.checkAnswerFileStatus.summary         = "Check the status of the host customizations against associated profile"
profile.host.ProfileManager.generateConfigTaskList.label          = "Generate configuration task list for host profile"
profile.host.ProfileManager.generateConfigTaskList.summary        = "Generates a list of configuration tasks to be performed when applying a host profile"
###
DistributedVirtualSwitch.addPortgroups.label                      = "Add Distributed Port Group"
DistributedVirtualSwitch.addPortgroups.summary                    = "Add Distributed Port Group"
DistributedVirtualSwitch.addPortgroup.label                       = "Add Distributed Port Group"
DistributedVirtualSwitch.addPortgroup.summary                     = "Add Distributed Port Group"
DistributedVirtualSwitch.addTag.label                             = "vSphere Distributed Switch add tag"
DistributedVirtualSwitch.addTag.summary                           = "vSphere Distributed Switch add tag"
DistributedVirtualSwitch.destroy.label                            = "Delete vSphere Distributed Switch"
DistributedVirtualSwitch.destroy.summary                          = "Delete vSphere Distributed Switch"
DistributedVirtualSwitch.fetchPortDb.label                        = "Retrieve port binding database"
DistributedVirtualSwitch.fetchPortDb.summary                      = "Retrieve port binding database"
DistributedVirtualSwitch.fetchPortKeys.label                      = "Retrieve dvPort keys"
DistributedVirtualSwitch.fetchPortKeys.summary                    = "Retrieve dvPort keys"
DistributedVirtualSwitch.fetchPorts.label                         = "Retrieve dvPorts"
DistributedVirtualSwitch.fetchPorts.summary                       = "Retrieve dvPorts"
DistributedVirtualSwitch.lookupPortgroup.label                    = "Look up portgroup based on portgroup key"
DistributedVirtualSwitch.lookupPortgroup.summary                  = "Look up portgroup based on portgroup key"
DistributedVirtualSwitch.merge.label                              = "Merge vSphere Distributed Switches"
DistributedVirtualSwitch.merge.summary                            = "Merge vSphere Distributed Switches"
DistributedVirtualSwitch.movePort.label                           = "Move dvPorts"
DistributedVirtualSwitch.movePort.summary                         = "Move dvPorts"
DistributedVirtualSwitch.performProductSpecOperation.label        = "vSphere Distributed Switch product specification operation"
DistributedVirtualSwitch.performProductSpecOperation.summary      = "vSphere Distributed Switch product specification operation"
DistributedVirtualSwitch.queryUsedVlanId.label                    = "Query vSphere Distributed Switch used virtual LAN ID"
DistributedVirtualSwitch.queryUsedVlanId.summary                  = "Query vSphere Distributed Switch used virtual LAN ID"
DistributedVirtualSwitch.reconfigure.label                        = "Reconfigure vSphere Distributed Switch"
DistributedVirtualSwitch.reconfigure.summary                      = "Reconfigure vSphere Distributed Switch"
DistributedVirtualSwitch.reconfigureOverlayInstance.label         = "Query vSphere Distributed Switch overlay instances"
DistributedVirtualSwitch.reconfigureOverlayInstance.summary       = "Query vSphere Distributed Switch overlay instances"
DistributedVirtualSwitch.reconfigurePort.label                    = "Reconfigure dvPort"
DistributedVirtualSwitch.reconfigurePort.summary                  = "Reconfigure dvPort"
DistributedVirtualSwitch.rectifyHost.label                       = "Rectify host in vSphere Distributed Switch"
DistributedVirtualSwitch.rectifyHost.summary                     = "Rectify host in vSphere Distributed Switch"
DistributedVirtualSwitch.refreshPortState.label                   = "Refresh dvPort state"
DistributedVirtualSwitch.refreshPortState.summary                 = "Refresh dvPort state"
DistributedVirtualSwitch.reload.label                             = "vSphere Distributed Switch reload"
DistributedVirtualSwitch.reload.summary                           = "vSphere Distributed Switch reload"
DistributedVirtualSwitch.removeTag.label                          = "vSphere Distributed Switch remove tag"
DistributedVirtualSwitch.removeTag.summary                        = "vSphere Distributed Switch remove tag"
DistributedVirtualSwitch.rename.label                             = "Rename vSphere Distributed Switch"
DistributedVirtualSwitch.rename.summary                           = "Rename vSphere Distributed Switch"
DistributedVirtualSwitch.setCustomValue.label                     = "vSphere Distributed Switch set custom value"
DistributedVirtualSwitch.setCustomValue.summary                   = "vSphere Distributed Switch set custom value"
DistributedVirtualSwitch.updateCapability.label                   = "Update vSphere Distributed Switch capability"
DistributedVirtualSwitch.updateCapability.summary                 = "Update vSphere Distributed Switch capability"
DistributedVirtualSwitch.checkCompatibility.label                 = "Check compatibility of hosts against a vSphere Distributed Switch version"
DistributedVirtualSwitch.checkCompatibility.summary               = "Check compatibility of hosts against a vSphere Distributed Switch version"
DistributedVirtualSwitch.addNetworkResourcePool.label             = "Add network resource pools on vSphere Distributed Switch"
DistributedVirtualSwitch.addNetworkResourcePool.summary           = "Add network resource pools on vSphere Distributed Switch"
DistributedVirtualSwitch.removeNetworkResourcePool.label          = "Remove network resource pools on vSphere Distributed Switch"
DistributedVirtualSwitch.removeNetworkResourcePool.summary        = "Remove network resource pools on vSphere Distributed Switch"
DistributedVirtualSwitch.updateNetworkResourcePool.label          = "Update network resource pools on vSphere Distributed Switch"
DistributedVirtualSwitch.updateNetworkResourcePool.summary        = "Update network resource pools on vSphere Distributed Switch"
DistributedVirtualSwitch.enableNetworkResourceManagement.label    = "Update network I/O control on vSphere Distributed Switch"
DistributedVirtualSwitch.enableNetworkResourceManagement.summary  = "Update network I/O control on vSphere Distributed Switch"
DistributedVirtualSwitch.rollback.label                           = "Get vSphere Distributed Switch configuration spec to rollback"
DistributedVirtualSwitch.rollback.summary                         = "Get vSphere Distributed Switch configuration spec to rollback"
DistributedVirtualSwitch.updateHealthCheckConfig.label            = "Update health check configuration on vSphere Distributed Switch"
DistributedVirtualSwitch.updateHealthCheckConfig.summary          = "Update health check configuration on vSphere Distributed Switch"
DistributedVirtualSwitch.clearPortDbEntry.label                   = "Delete IpEntry from dvPort binding database"
DistributedVirtualSwitch.clearPortDbEntry.summary                 = "Delete IpEntry from dvPort binding database"
DistributedVirtualSwitch.reconfigureVmVnicNetworkResourcePool.label    = "Reconfigure a network resource pool on a distributed switch"
DistributedVirtualSwitch.reconfigureVmVnicNetworkResourcePool.summary  = "Reconfigures a network resource pool on a distributed switch"
dvs.DistributedVirtualPortgroup.addTag.label                      = "Add tag to Distributed Port Group"
dvs.DistributedVirtualPortgroup.addTag.summary                    = "Add tag to Distributed Port Group"
dvs.DistributedVirtualPortgroup.destroy.label                     = "Delete Distributed Port Group"
dvs.DistributedVirtualPortgroup.destroy.summary                   = "Delete Distributed Port Group"
dvs.DistributedVirtualPortgroup.destroyNetwork.label              = "Distributed Port Group delete network"
dvs.DistributedVirtualPortgroup.destroyNetwork.summary            = "Distributed Port Group delete network"
dvs.DistributedVirtualPortgroup.reconfigure.label                 = "Reconfigure Distributed Port Group"
dvs.DistributedVirtualPortgroup.reconfigure.summary               = "Reconfigure Distributed Port Group"
dvs.DistributedVirtualPortgroup.reload.label                      = "Reload Distributed Port Group"
dvs.DistributedVirtualPortgroup.reload.summary                    = "Reload Distributed Port Group"
dvs.DistributedVirtualPortgroup.removeTag.label                   = "Distributed Port Group remove tag"
dvs.DistributedVirtualPortgroup.removeTag.summary                 = "Distributed Port Group remove tag"
dvs.DistributedVirtualPortgroup.rename.label                      = "Rename Distributed Port Group"
dvs.DistributedVirtualPortgroup.rename.summary                    = "Rename Distributed Port Group"
dvs.DistributedVirtualPortgroup.setCustomValue.label              = "Distributed Port Group set custom value"
dvs.DistributedVirtualPortgroup.setCustomValue.summary            = "Distributed Port Group set custom value"
dvs.DistributedVirtualPortgroup.updateIpConfig.label              = "Distributed Port Group update IP configuration"
dvs.DistributedVirtualPortgroup.updateIpConfig.summary            = "Distributed Port Group update IP configuration"
dvs.DistributedVirtualPortgroup.rollback.label                    = "Get Distributed Port Group configuration spec to rollback"
dvs.DistributedVirtualPortgroup.rollback.summary                  = "Get Distributed Port Group configuration spec to rollback"
dvs.DistributedVirtualSwitchManager.lookupPortgroup.label         = "Look up portgroup based on portgroup key"
dvs.DistributedVirtualSwitchManager.lookupPortgroup.summary       = "Look up portgroup based on portgroup key"
dvs.DistributedVirtualSwitchManager.queryCompatibleHost.label     = "Query compatible host"
dvs.DistributedVirtualSwitchManager.queryCompatibleHost.summary   = "Query compatible host"
dvs.DistributedVirtualSwitchManager.queryCompatibleHostSpec.label = "Query compatible host specification"
dvs.DistributedVirtualSwitchManager.queryCompatibleHostSpec.summary = "Query compatible host specification"
dvs.DistributedVirtualSwitchManager.QueryDvpgUplinkTeam.label     = "Query uplink team information"
dvs.DistributedVirtualSwitchManager.QueryDvpgUplinkTeam.summary   = "Query uplink team information"
dvs.DistributedVirtualSwitchManager.queryDvsConfigTarget.label    = "Query configuration target"
dvs.DistributedVirtualSwitchManager.queryDvsConfigTarget.summary  = "Query configuration target"
dvs.DistributedVirtualSwitchManager.queryOverlayClass.label       = "Query overlay class"
dvs.DistributedVirtualSwitchManager.queryOverlayClass.summary     = "Query overlay class"
dvs.DistributedVirtualSwitchManager.querySupportedSwitchSpec.label = "Query supported switch specification"
dvs.DistributedVirtualSwitchManager.querySupportedSwitchSpec.summary = "Query supported switch specification"
dvs.DistributedVirtualSwitchManager.querySwitchByUuid.label       = "Query switch by UUID"
dvs.DistributedVirtualSwitchManager.querySwitchByUuid.summary     = "Query switch by UUID"
dvs.DistributedVirtualSwitchManager.checkCompatibility.label      = "Check compatibility of hosts against a vSphere Distributed Switch version"
dvs.DistributedVirtualSwitchManager.checkCompatibility.summary    = "Check compatibility of hosts against a vSphere Distributed Switch version"
dvs.DistributedVirtualSwitchManager.updateOpaqueData.label        = "Update opaque data for set of entities"
dvs.DistributedVirtualSwitchManager.updateOpaqueData.summary      = "Update opaque data for set of entities"
dvs.DistributedVirtualSwitchManager.fetchOpaqueData.label         = "Fetch opaque data for set of entities"
dvs.DistributedVirtualSwitchManager.fetchOpaqueData.summary       = "Fetch opaque data for set of entities"
dvs.DistributedVirtualSwitchManager.updateOpaqueDataEx.label      = "Update opaque data for set of entities"
dvs.DistributedVirtualSwitchManager.updateOpaqueDataEx.summary    = "Update opaque data for set of entities"
dvs.DistributedVirtualSwitchManager.fetchOpaqueDataEx.label       = "Fetch opaque data for set of entities"
dvs.DistributedVirtualSwitchManager.fetchOpaqueDataEx.summary     = "Fetch opaque data for set of entities"
dvs.DistributedVirtualSwitchManager.rectifyHost.label         = "Rectify vNetwork Distributed Switch host"
dvs.DistributedVirtualSwitchManager.rectifyHost.summary       = "Rectify vNetwork Distributed Switch host"
dvs.DistributedVirtualSwitchManager.executeOpaqueCommand.label    = "Execute opaque command for set of entities"
dvs.DistributedVirtualSwitchManager.executeOpaqueCommand.summary  = "Execute opaque command for set of entities"
dvs.DistributedVirtualSwitchManager.exportEntity.label            = "Export configuration of the entity"
dvs.DistributedVirtualSwitchManager.exportEntity.summary          = "Export configuration of the entity"
dvs.DistributedVirtualSwitchManager.importEntity.label            = "Import configuration of the entity"
dvs.DistributedVirtualSwitchManager.importEntity.summary          = "Import configuration of the entity"
dvs.HostDistributedVirtualSwitchManager.applyDVPort.label         = "Update dvPorts"
dvs.HostDistributedVirtualSwitchManager.applyDVPort.summary       = "Update dvPort"
dvs.HostDistributedVirtualSwitchManager.applyDVPortgroup.label    = "Update Distributed Port Groups"
dvs.HostDistributedVirtualSwitchManager.applyDVPortgroup.summary  = "Update Distributed Port Group"
dvs.HostDistributedVirtualSwitchManager.applyDvs.label            = "Update vSphere Distributed Switch"
dvs.HostDistributedVirtualSwitchManager.applyDvs.summary          = "Update vSphere Distributed Switch"
dvs.HostDistributedVirtualSwitchManager.applyDVPortList.label     = "Update dvPort list"
dvs.HostDistributedVirtualSwitchManager.applyDVPortList.summary   = "Update dvPort list"
dvs.HostDistributedVirtualSwitchManager.applyDVPortgroupList.label = "Update Distributed Port Group list"
dvs.HostDistributedVirtualSwitchManager.applyDVPortgroupList.summary = "Update Distributed Port Group list"
dvs.HostDistributedVirtualSwitchManager.applyDvsList.label        = "Update vSphere Distributed Switch list"
dvs.HostDistributedVirtualSwitchManager.applyDvsList.summary      = "Update vSphere Distributed Switch list"
dvs.HostDistributedVirtualSwitchManager.clearPortDbEntry.label    = "Clear entries from port binding database"
dvs.HostDistributedVirtualSwitchManager.clearPortDbEntry.summary  = "Clear entries from port binding database"
dvs.HostDistributedVirtualSwitchManager.clonePort.label           = "Clone port"
dvs.HostDistributedVirtualSwitchManager.clonePort.summary         = "Clone port"
dvs.HostDistributedVirtualSwitchManager.createDistributedVirtualSwitch.label = "Create vSphere Distributed Switch"
dvs.HostDistributedVirtualSwitchManager.createDistributedVirtualSwitch.summary = "Create vSphere Distributed Switch"
dvs.HostDistributedVirtualSwitchManager.deletePorts.label         = "Delete ports"
dvs.HostDistributedVirtualSwitchManager.deletePorts.summary       = "Delete ports"
dvs.HostDistributedVirtualSwitchManager.fetchPortDb.label         = "Retrieve port binding database"
dvs.HostDistributedVirtualSwitchManager.fetchPortDb.summary       = "Retrieve port binding database"
dvs.HostDistributedVirtualSwitchManager.fetchPortState.label      = "Retrieve port state"
dvs.HostDistributedVirtualSwitchManager.fetchPortState.summary    = "Retrieve port state"
dvs.HostDistributedVirtualSwitchManager.loadDVPort.label      = "Load port"
dvs.HostDistributedVirtualSwitchManager.loadDVPort.summary    = "Load port"
dvs.HostDistributedVirtualSwitchManager.reconfigureDistributedVirtualSwitch.label = "Reconfigure vSphere Distributed Switch"
dvs.HostDistributedVirtualSwitchManager.reconfigureDistributedVirtualSwitch.summary = "Reconfigure vSphere Distributed Switch"
dvs.HostDistributedVirtualSwitchManager.removeDistributedVirtualSwitch.label = "Remove vSphere Distributed Switch"
dvs.HostDistributedVirtualSwitchManager.removeDistributedVirtualSwitch.summary = "Remove vSphere Distributed Switch"
dvs.HostDistributedVirtualSwitchManager.retrieveDvsConfigSpec.label = "Retrieve vSphere Distributed Switch configuration specification"
dvs.HostDistributedVirtualSwitchManager.retrieveDvsConfigSpec.summary = "Retrieve vSphere Distributed Switch configuration specification"
dvs.HostDistributedVirtualSwitchManager.retrieveDVPort.label      = "Retrieve the list of port keys on the given vSphere Distributed Switch"
dvs.HostDistributedVirtualSwitchManager.retrieveDVPort.summary    = "Retrieve the list of port keys on the given vSphere Distributed Switch"
dvs.HostDistributedVirtualSwitchManager.updateDVPortgroups.label  = "Update Distributed Port Groups"
dvs.HostDistributedVirtualSwitchManager.updateDVPortgroups.summary = "Update Distributed Port Group"
dvs.HostDistributedVirtualSwitchManager.updatePorts.label         = "Update dvPort"
dvs.HostDistributedVirtualSwitchManager.updatePorts.summary       = "Update dvPort"
dvs.HostDistributedVirtualSwitchManager.executeOpaqueCommand.label    = "Execute opaque command"
dvs.HostDistributedVirtualSwitchManager.executeOpaqueCommand.summary  = "Execute opaque command"
dvs.HostDistributedVirtualSwitchManager.invokeHostTransactionCall.label    = "Invoke the host call in a transaction"
dvs.HostDistributedVirtualSwitchManager.invokeHostTransactionCall.summary  = "Invoke the host call in a transaction"
dvs.HostDistributedVirtualSwitchManager.commitTransaction.label    = "Commit the transaction"
dvs.HostDistributedVirtualSwitchManager.commitTransaction.summary  = "Commit the transaction"
dvs.VmwareDistributedVirtualSwitch.addPortgroups.label            = "Add Distributed Port Groups"
dvs.VmwareDistributedVirtualSwitch.addPortgroups.summary          = "Add Distributed Port Groups"
dvs.VmwareDistributedVirtualSwitch.addPortgroup.label             = "Add Distributed Port Group"
dvs.VmwareDistributedVirtualSwitch.addPortgroup.summary           = "Add Distributed Port Group"
dvs.VmwareDistributedVirtualSwitch.addTag.label                   = "vSphere Distributed Switch add tag"
dvs.VmwareDistributedVirtualSwitch.addTag.summary                 = "vSphere Distributed Switch add tag"
dvs.VmwareDistributedVirtualSwitch.destroy.label                  = "Remove vSphere Distributed Switch"
dvs.VmwareDistributedVirtualSwitch.destroy.summary                = "Remove vSphere Distributed Switch"
dvs.VmwareDistributedVirtualSwitch.fetchPortKeys.label            = "Retrieve dvPort keys"
dvs.VmwareDistributedVirtualSwitch.fetchPortKeys.summary          = "Retrieve dvPort keys"
dvs.VmwareDistributedVirtualSwitch.fetchPorts.label               = "Retrieve dvPorts"
dvs.VmwareDistributedVirtualSwitch.fetchPorts.summary             = "Retrieve dvPorts"
dvs.VmwareDistributedVirtualSwitch.merge.label                    = "Merge vSphere Distributed Switch"
dvs.VmwareDistributedVirtualSwitch.merge.summary                  = "Merge vSphere Distributed Switch"
dvs.VmwareDistributedVirtualSwitch.movePort.label                 = "Move dvPort"
dvs.VmwareDistributedVirtualSwitch.movePort.summary               = "Move dvPort"
dvs.VmwareDistributedVirtualSwitch.performProductSpecOperation.label  = "vSphere Distributed Switch product specification operation"
dvs.VmwareDistributedVirtualSwitch.performProductSpecOperation.summary   = "vSphere Distributed Switch product specification operation"
dvs.VmwareDistributedVirtualSwitch.queryUsedVlanId.label          = "Query used virtual LAN ID"
dvs.VmwareDistributedVirtualSwitch.queryUsedVlanId.summary        = "Query used virtual LAN ID"
dvs.VmwareDistributedVirtualSwitch.reconfigure.label              = "Reconfigure vSphere Distributed Switch"
dvs.VmwareDistributedVirtualSwitch.reconfigure.summary            = "Reconfigure vSphere Distributed Switch"
dvs.VmwareDistributedVirtualSwitch.reconfigureOverlayInstance.label = "Reconfigure overlay instance"
dvs.VmwareDistributedVirtualSwitch.reconfigureOverlayInstance.summary = "Reconfigure overlay instance"
dvs.VmwareDistributedVirtualSwitch.reconfigurePort.label          = "Reconfigure dvPort"
dvs.VmwareDistributedVirtualSwitch.reconfigurePort.summary        = "Reconfigure dvPort"
dvs.VmwareDistributedVirtualSwitch.rectifyHost.label             = "Rectify vSphere Distributed Switch host"
dvs.VmwareDistributedVirtualSwitch.rectifyHost.summary           = "Rectify vSphere Distributed Switch host"
dvs.VmwareDistributedVirtualSwitch.refreshPortState.label         = "Refresh dvPort state"
dvs.VmwareDistributedVirtualSwitch.refreshPortState.summary       = "Refresh dvPort state"
dvs.VmwareDistributedVirtualSwitch.reload.label                   = "Reload vSphere Distributed Switch"
dvs.VmwareDistributedVirtualSwitch.reload.summary                 = "Reload vSphere Distributed Switch"
dvs.VmwareDistributedVirtualSwitch.removeTag.label                = "vSphere Distributed Switch remove tag"
dvs.VmwareDistributedVirtualSwitch.removeTag.summary              = "vSphere Distributed Switch remove tag"
dvs.VmwareDistributedVirtualSwitch.rename.label                   = "Rename vSphere Distributed Switch"
dvs.VmwareDistributedVirtualSwitch.rename.summary                 = "Rename vSphere Distributed Switch"
dvs.VmwareDistributedVirtualSwitch.setCustomValue.label           = "vSphere Distributed Switch set custom value"
dvs.VmwareDistributedVirtualSwitch.setCustomValue.summary         = "vSphere Distributed Switch set custom value"
dvs.VmwareDistributedVirtualSwitch.updateCapability.label         = "Update vSphere Distributed Switch capability"
dvs.VmwareDistributedVirtualSwitch.updateCapability.summary       = "Update vSphere Distributed Switch capability"
dvs.VmwareDistributedVirtualSwitch.checkCompatibility.label       = "Check compatibility of hosts against a vSphere Distributed Switch version"
dvs.VmwareDistributedVirtualSwitch.checkCompatibility.summary     = "Check compatibility of hosts against a vSphere Distributed Switch version"
dvs.VmwareDistributedVirtualSwitch.fetchPortDb.label              = "Retrieve port binding database"
dvs.VmwareDistributedVirtualSwitch.fetchPortDb.summary            = "Retrieve port binding database"
dvs.VmwareDistributedVirtualSwitch.lookupPortgroup.label          = "Look up portgroup based on portgroup key"
dvs.VmwareDistributedVirtualSwitch.lookupPortgroup.summary        = "Look up portgroup based on portgroup key"
dvs.VmwareDistributedVirtualSwitch.addNetworkResourcePool.label             = "Add network resource pools on vSphere Distributed Switch"
dvs.VmwareDistributedVirtualSwitch.addNetworkResourcePool.summary           = "Add network resource pools on vSphere Distributed Switch"
dvs.VmwareDistributedVirtualSwitch.removeNetworkResourcePool.label          = "Remove network resource pools on vSphere Distributed Switch"
dvs.VmwareDistributedVirtualSwitch.removeNetworkResourcePool.summary        = "Remove network resource pools on vSphere Distributed Switch"
dvs.VmwareDistributedVirtualSwitch.updateNetworkResourcePool.label          = "Update network resource pools on vSphere Distributed Switch"
dvs.VmwareDistributedVirtualSwitch.updateNetworkResourcePool.summary        = "Update network resource pools on vSphere Distributed Switch"
dvs.VmwareDistributedVirtualSwitch.updateHealthCheckConfig.label            = "Update health check configuration on vSphere Distributed Switch"
dvs.VmwareDistributedVirtualSwitch.updateHealthCheckConfig.summary          = "Update health check configuration on vSphere Distributed Switch"
dvs.VmwareDistributedVirtualSwitch.enableNetworkResourceManagement.label    = "Update network I/O control on vSphere Distributed Switch"
dvs.VmwareDistributedVirtualSwitch.enableNetworkResourceManagement.summary  = "Update network I/O control on vSphere Distributed Switch"
dvs.VmwareDistributedVirtualSwitch.rollback.label                           = "Get vSphere Distributed Switch configuration spec to rollback"
dvs.VmwareDistributedVirtualSwitch.rollback.summary                         = "Get vSphere Distributed Switch configuration spec to rollback"
dvs.VmwareDistributedVirtualSwitch.updateLacpGroupConfig.label                   = "Update Link Aggregation Control Protocol groups on vSphere Distributed Switch"
dvs.VmwareDistributedVirtualSwitch.updateLacpGroupConfig.summary                 = "Update Link Aggregation Control Protocol groups on vSphere Distributed Switch"
dvs.VmwareDistributedVirtualSwitch.clearPortDbEntry.label                   = "Delete IpEntry from dvPort binding database"
dvs.VmwareDistributedVirtualSwitch.clearPortDbEntry.summary                 = "Delete IpEntry from dvPort binding database"
dvs.VmwareDistributedVirtualSwitch.reconfigureVmVnicNetworkResourcePool.label    = "Reconfigure a network resource pool on a distributed switch"
dvs.VmwareDistributedVirtualSwitch.reconfigureVmVnicNetworkResourcePool.summary  = "Reconfigures a network resource pool on a distributed switch"

NetworkManager.checkIfMACAddressInUse.label     = "Check MAC addresses in use"
NetworkManager.checkIfMACAddressInUse.summary   = "Checks the MAC addresses used by this vCenter Server instance"
NetworkManager.reclaimMAC.label                 = "Reclaim MAC addresses"
NetworkManager.reclaimMAC.summary               = "Reclaims the MAC addresses that are not used by remote vCenter Server instances"

###
HttpNfcLease.abort.label          = "End the lease"
HttpNfcLease.abort.summary        = "The lease has ended"
HttpNfcLease.complete.label       = "Complete the lease"
HttpNfcLease.complete.summary     = "The lease completed successfully"
HttpNfcLease.getManifest.label    = "Get lease download manifest"
HttpNfcLease.getManifest.summary  = "Gets the download manifest for this lease"
HttpNfcLease.progress.label       = "Update lease progress"
HttpNfcLease.progress.summary     = "Updates lease progress"

OvfManager.createDescriptor.label       = "Create an OVF descriptor"
OvfManager.createDescriptor.summary     = "Creates an OVF descriptor from either a VM or vApp"
OvfManager.createImportSpec.label       = "Convert OVF descriptor"
OvfManager.createImportSpec.summary     = "Convert OVF descriptor to entity specification"
OvfManager.parseDescriptor.label        = "Parse OVF descriptor"
OvfManager.parseDescriptor.summary      = "Parses and validates an OVF descriptor"
OvfManager.parseDescriptorAtUrl.label   = "Parse OVF Descriptor at URL"
OvfManager.parseDescriptorAtUrl.summary = "Parses and validates an OVF descriptor at a given URL"
OvfManager.validateHost.label           = "Validate host for OVF package compatibility"
OvfManager.validateHost.summary         = "Validates if a host is compatible with the requirements in an OVF package"
OvfManager.exportOvfToUrl.label         = "Export as OVF template"
OvfManager.exportOvfToUrl.summary       = "Uploads OVF template to a remote server"
OvfManager.importOvfAtUrl.label         = "Deploy OVF template"
OvfManager.importOvfAtUrl.summary       = "Deploys an OVF template from a URL"

###
Datacenter.addTag.label = "Add tag"
Datacenter.addTag.summary = "Add a set of tags to the datacenter"
Datacenter.removeTag.label = "Remove tag"
Datacenter.removeTag.summary = "Remove a set of tags from the datacenter"
Datastore.addTag.label = "Add Tag"
Datastore.addTag.summary = "Add a set of tags to the datastore"
Datastore.destroyDatastore.label = "Delete datastore"
Datastore.destroyDatastore.summary = "Delete datastore"
Datastore.refreshStorageInfo.label = "Refresh storage information"
Datastore.refreshStorageInfo.summary = "Refresh the storage information of the datastore"
Datastore.reload.label = "Reload datastore"
Datastore.reload.summary = "Reload information about the datastore"
Datastore.removeTag.label = "Remove tag"
Datastore.removeTag.summary = "Remove a set of tags from the datastore"
Datastore.renameDatastore.label = "Rename datastore"
Datastore.renameDatastore.summary = "Rename the datastore"
Datastore.replaceEmbeddedFilePaths.label = "Replace embedded file paths"
Datastore.replaceEmbeddedFilePaths.summary = "Replace embedded file paths on the datastore"
Datastore.updateVirtualMachineFiles.label = "Update virtual machine files"
Datastore.updateVirtualMachineFiles.summary = "Update virtual machine files on the datastore"
EnvironmentBrowser.queryTargetCapabilities.label = "Query target capabilities"
EnvironmentBrowser.queryTargetCapabilities.summary = "Query for compute-resource capabilities associated with this browser"
FileManager.changeOwner.label = "Change owner"
FileManager.changeOwner.summary = "Change the owner of the specified file to the specified user"
Folder.addTag.label = "Add tag"
Folder.addTag.summary = "Add a set of tags to the folder"
Folder.removeTag.label = "Remove tag"
Folder.removeTag.summary = "Remove a set of tags from the folder"
HostSystem.addTag.label = "Add tag"
HostSystem.addTag.summary = "Add a set of tags to the host"
HostSystem.getInternalCapability.label = "<internal>"
HostSystem.getInternalCapability.summary = "<internal>"
HostSystem.removeTag.label = "Remove tag"
HostSystem.removeTag.summary = "Remove a set of tags from the host"
HostSystem.retrieveInternalConfigManager.label = "<internal>"
HostSystem.retrieveInternalConfigManager.summary = "<internal>"
HostSystem.updateSslThumbprintInfo.label = "Update SSL thumbprint registry"
HostSystem.updateSslThumbprintInfo.summary = "Updates the SSL thumbprint registry on the host"
LicenseManager.updateLicense.label = "Installing license"
LicenseManager.updateLicense.summary = "Installing license"
ManagedEntity.addTag.label = "Add tag"
ManagedEntity.addTag.summary = "Add a set of tags to the entity"
ManagedEntity.removeTag.label = "Remove tag"
ManagedEntity.removeTag.summary = "Remove a set of tags from the entity"
Network.addTag.label = "Add tag"
Network.addTag.summary = "Add a set of tags to the network"
Network.destroyNetwork.label = "Remove network"
Network.destroyNetwork.summary = "Remove network"
Network.reload.label = "Reload network"
Network.reload.summary = "Reload information about the network"
Network.removeTag.label = "Remove tag"
Network.removeTag.summary = "Remove a set of tags from the network"
Network.rename.label = "Rename network"
Network.rename.summary = "Rename network"
OpaqueNetwork.addTag.label = "Add a tag to an opaque network"
OpaqueNetwork.addTag.summary = "Adds a set of tags to the opaque network"
OpaqueNetwork.destroyNetwork.label = "Remove an opaque network"
OpaqueNetwork.destroyNetwork.summary = "Removes an opaque network"
OpaqueNetwork.reload.label = "Reload an opaque network"
OpaqueNetwork.reload.summary = "Reloads the information about the opaque network"
OpaqueNetwork.removeTag.label = "Remove a tag from an opaque network"
OpaqueNetwork.removeTag.summary = "Removes a set of tags from the opaque network"
OpaqueNetwork.rename.label = "Rename an opaque network"
OpaqueNetwork.rename.summary = "Renames an opaque network"
ResourcePool.addTag.label = "Add tag"
ResourcePool.addTag.summary = "Add a set of tags to the resource pool"
ResourcePool.removeTag.label = "Remove tag"
ResourcePool.removeTag.summary = "Remove a set of tags from the resource pool"
SearchIndex.findAllByDnsName.label = "Find by DNS name"
SearchIndex.findAllByDnsName.summary = "Find by DNS name"
SearchIndex.findAllByIp.label = "Find by IP address"
SearchIndex.findAllByIp.summary = "Find entities based on their IP address"
SearchIndex.findAllByUuid.label = "Find by UUID"
SearchIndex.findAllByUuid.summary = "Find entities based on their UUID"
ServiceDirectory.queryServiceEndpointList.label = "<internal>"
ServiceDirectory.queryServiceEndpointList.summary = "<internal>"
SessionManager.acquireCloneTicket.label = "Acquire clone ticket"
SessionManager.acquireCloneTicket.summary = "Acquire a session-specific ticket string that can be used to clone the current session"
SessionManager.acquireSessionTicket.label = "Acquire session ticket"
SessionManager.acquireSessionTicket.summary = "Acquire a ticket for authenticating to a remote service"
SessionManager.cloneSession.label = "Clone session"
SessionManager.cloneSession.summary = "Clone the specified session and associate it with the current connection"
SessionManager.loginBySSLThumbprint.label = "Login by SSL thumbprint"
SessionManager.loginBySSLThumbprint.summary = "Log on to the server using SSL thumbprint authentication"
SessionManager.loginBySessionTicket.label = "Login by session ticket"
SessionManager.loginBySessionTicket.summary = "Log on to the server using a session ticket"
UserDirectory.retrieveCertificatePrincipals.label = "Retrieve certificate principals"
UserDirectory.retrieveCertificatePrincipals.summary = "Retrieve certificate principals matching the specified search string"
VirtualDiskManager.reparentDisks.label = "Reparent disks"
VirtualDiskManager.reparentDisks.summary = "Reparent disks"
VirtualDiskManager.consolidateDisks.label = "Consolidate disks"
VirtualDiskManager.consolidateDisks.summary = "Consolidate a list of disks to the parent most disk"
VirtualDiskManager.createChildDisk.label = "Create a child disk"
VirtualDiskManager.createChildDisk.summary = "Create a new disk and attach it to the end of disk chain specified"
VirtualMachine.addTag.label = "Add Tag"
VirtualMachine.addTag.summary = "Add a set of tags to the virtual machine"
VirtualMachine.createScreenshot.label = "Take virtual machine screenshot"
VirtualMachine.createScreenshot.summary = "Take a screenshot of a virtual machine's guest OS console"
VirtualMachine.promoteDisks.label = "Promote virtual machine disks"
VirtualMachine.promoteDisks.summary = "Promote disks of the virtual machine that have delta disk backings"
VirtualMachine.queryChangedDiskAreas.label = "Query virtual machine disk changes"
VirtualMachine.queryChangedDiskAreas.summary = "Query for changes to the virtual machine's disks since a given point in the past"
VirtualMachine.queryUnownedFiles.label = "Query unowned virtual machine files"
VirtualMachine.queryUnownedFiles.summary = "Query files of the virtual machine not owned by the datastore principal user"
VirtualMachine.queryFaultToleranceCompatibility.label = "Query Virtual Machine Fault Tolerance Compatibility"
VirtualMachine.queryFaultToleranceCompatibility.summary = "Check if virtual machine is compatible for Fault Tolerance"
VirtualMachine.estimateStorageRequirementForConsolidate.label = "Estimate virtual machine disks consolidation space requirement"
VirtualMachine.estimateStorageRequirementForConsolidate.summary = "Estimate the temporary space required to consolidate disk files."
VirtualMachine.refreshStorageInfo.label = "Refresh virtual machine storage information"
VirtualMachine.refreshStorageInfo.summary = "Refresh storage information for the virtual machine"
VirtualMachine.removeTag.label = "Remove tag"
VirtualMachine.removeTag.summary = "Remove a set of tags from the virtual machine"
VirtualMachine.retrieveBackupAgent.label = "Retrieve virtual machine backup agent"
VirtualMachine.retrieveBackupAgent.summary = "Retrieves the backup agent for the virtual machine"
VirtualMachine.setDisplayTopology.label = "Set virtual machine display topology"
VirtualMachine.setDisplayTopology.summary = "Set the display topology for the virtual machine"
VirtualMachine.shrinkDisk.label = "Shrink a Flex-SE virtual disk"
VirtualMachine.shrinkDisk.summary = "Shrinks a Flex-SE virtual disk"
VirtualMachine.wipeDisk.label = "Wipe a Flex-SE virtual disk"
VirtualMachine.wipeDisk.summary = "Wipes a Flex-SE virtual disk"
VirtualApp.addTag.label = "Add tag"
VirtualApp.addTag.summary = "Add a set of tags to the vApp"
VirtualApp.removeTag.label = "Remove tag"
VirtualApp.removeTag.summary = "Remove a set of tags from the vApp"
VirtualApp.setCustomValue.label = "Set vApp custom value"
VirtualApp.setCustomValue.summary = "Sets the value of a custom field on a vApp"
cluster.TransitionalEVCManager.setCustomValue.label = "Set EVC manager custom value"
cluster.TransitionalEVCManager.setCustomValue.summary = "Sets the value of a custom field for an Enhanced vMotion Compatibility manager"
event.EventManager.queryLastEvent.label = "Query latest events in event filter"
event.EventManager.queryLastEvent.summary = "Query the latest events in the specified filter"
host.DatastoreSystem.expandVmfsDatastore.label = "Expand VMFS datastore"
host.DatastoreSystem.expandVmfsDatastore.summary = "Expand the capacity of a VMFS datastore extent"
host.DatastoreSystem.queryVmfsDatastoreExpandOptions.label = "Query VMFS datastore expand options"
host.DatastoreSystem.queryVmfsDatastoreExpandOptions.summary = "Query the options available for expanding the extents of a VMFS datastore"
host.FirmwareSystem.syncConfiguration.label = "Flush firmware configuration"
host.FirmwareSystem.syncConfiguration.summary = "Writes the configuration of the firmware system to persistent storage"
host.HealthStatusSystem.resetSystemHealthInfo.label = "Reset system health sensors"
host.HealthStatusSystem.resetSystemHealthInfo.summary = "Resets the state of the sensors of the IPMI subsystem"
host.LowLevelProvisioningManager.consolidateDisks.label = "Consolidate disks"
host.LowLevelProvisioningManager.consolidateDisks.summary = "Consolidates virtual disks"
host.LowLevelProvisioningManager.reconfigVM.label = "Reconfigure virtual machine"
host.LowLevelProvisioningManager.reconfigVM.summary = "Reconfigures the virtual machine"
host.LowLevelProvisioningManager.reloadDisks.label = "Reload disks"
host.LowLevelProvisioningManager.reloadDisks.summary = "Reloads virtual disk information"
host.PciPassthruSystem.refresh.label = "Refresh PCI passthrough device information"
host.PciPassthruSystem.refresh.summary = "Refresh the available PCI passthrough device information"
host.PciPassthruSystem.setCustomValue.label = "Set PCI passthrough system custom value"
host.PciPassthruSystem.setCustomValue.summary = "Set PCI Passthrough system custom value"
host.PciPassthruSystem.updatePassthruConfig.label = "Update PCI passthrough configuration"
host.PciPassthruSystem.updatePassthruConfig.summary = "Update PCI passthrough device configuration"
host.StorageSystem.computeDiskPartitionInfoForResize.label = "Compute disk partition information for resize"
host.StorageSystem.computeDiskPartitionInfoForResize.summary = "Compute disk partition information for resizing a partition"
host.StorageSystem.expandVmfsExtent.label = "Expand VMFS extent"
host.StorageSystem.expandVmfsExtent.summary = "Expand the capacity of the VMFS extent"
host.StorageSystem.queryUnresolvedVmfsVolume.label = "Query unbound VMFS volumes"
host.StorageSystem.queryUnresolvedVmfsVolume.summary = "Query for the list of unbound VMFS volumes"
host.StorageSystem.updateInternetScsiAdvancedOptions.label = "Update Internet SCSI advanced options"
host.StorageSystem.updateInternetScsiAdvancedOptions.summary = "Update the advanced options of an Internet SCSI host bus adapter or target"
host.StorageSystem.updateInternetScsiDigestProperties.label = "Update Internet SCSI digest properties"
host.StorageSystem.updateInternetScsiDigestProperties.summary = "Update the digest properties of an Internet SCSI host bus adapter or target"
host.TpmManager.generateReport.label = "Generate integrity report"
host.TpmManager.generateReport.summary = "Generates an integrity report for the selected components"
host.TpmManager.requestIdentity.label = "Create new identity binding"
host.TpmManager.requestIdentity.summary = "Creates a new identity binding between the host and vCenter Server"
host.TpmManager.verifyCredential.label = "Verify authenticity of credential"
host.TpmManager.verifyCredential.summary = "Verifies the authenticity and correctness of the supplied attestation credential"
host.VirtualNicManager.deselectVnic.label = "Deselect virtual NIC"
host.VirtualNicManager.deselectVnic.summary = "Deselect the virtual NIC used for the specified NIC type"
host.VirtualNicManager.queryCandidateVnic.label = "Search for candidate virtual NIC"
host.VirtualNicManager.queryCandidateVnic.summary = "Search for the virtual NICs that can be used for the specified NIC type"
host.VirtualNicManager.querySelectedVnic.label = "Search for selected virtual NIC"
host.VirtualNicManager.querySelectedVnic.summary = "Search for the virtual NICs selected for the specified NIC type"
host.VirtualNicManager.selectVnic.label = "Select virtual NIC"
host.VirtualNicManager.selectVnic.summary = "Select the virtual NIC to be used for the specified NIC type"
host.VirtualNicManager.setCustomValue.label = "Set virtual NIC custom value"
host.VirtualNicManager.setCustomValue.summary = "Set the value of a custom filed of a host's virtual NIC manager"
profile.ComplianceManager.clearComplianceStatus.label = "Clear compliance history"
profile.ComplianceManager.clearComplianceStatus.summary = "Clear historical compliance data"
profile.ComplianceManager.queryComplianceStatus.label = "Query compliance status"
profile.ComplianceManager.queryComplianceStatus.summary = "Query compliance status"
profile.ComplianceManager.queryExpressionMetadata.label = "Query expression metadata"
profile.ComplianceManager.queryExpressionMetadata.summary = "Query expression metadata"
profile.Profile.associateEntities.label = "Associate entities"
profile.Profile.associateEntities.summary = "Associate entities with the profile"
profile.Profile.checkCompliance.label = "Check compliance"
profile.Profile.checkCompliance.summary = "Check compliance against the profile"
profile.Profile.destroy.label = "Remove profile"
profile.Profile.destroy.summary = "Remove profile"
profile.Profile.dissociateEntities.label = "Dissociate entities"
profile.Profile.dissociateEntities.summary = "Dissociate entities from the profile"
profile.Profile.exportProfile.label = "Export profile"
profile.Profile.exportProfile.summary = "Export profile to a file"
profile.ProfileManager.createProfile.label = "Create profile"
profile.ProfileManager.createProfile.summary = "Create profile"
profile.ProfileManager.findAssociatedProfile.label = "Find associated profile"
profile.ProfileManager.findAssociatedProfile.summary = "Find associated profile"
profile.ProfileManager.queryPolicyMetadata.label = "Query policy metadata"
profile.ProfileManager.queryPolicyMetadata.summary = "Query policy metadata"
profile.cluster.ClusterProfile.update.label = "Update cluster profile"
profile.cluster.ClusterProfile.update.summary = "Update configuration of cluster profile"
profile.cluster.ProfileManager.findAssociatedProfile.label = "Find associated profile"
profile.cluster.ProfileManager.findAssociatedProfile.summary = "Find associated profile"
profile.cluster.ProfileManager.queryPolicyMetadata.label = "Query policy metadata"
profile.cluster.ProfileManager.queryPolicyMetadata.summary = "Query policy metadata"
profile.host.HostProfile.execute.label = "Execute profile"
profile.host.HostProfile.execute.summary = "Execute profile"
profile.host.HostProfile.update.label = "Update host profile"
profile.host.HostProfile.update.summary = "Update host profile"
profile.host.HostProfile.updateReferenceHost.label = "Update reference host"
profile.host.HostProfile.updateReferenceHost.summary = "Update reference host"
profile.host.ProfileManager.generateTaskList.label = "Generate task list"
profile.host.ProfileManager.generateTaskList.summary = "Generate task list"
profile.host.ProfileManager.applyHostConfiguration.label = "Apply host configuration"
profile.host.ProfileManager.applyHostConfiguration.summary = "Apply host configuration"
profile.host.ProfileManager.createDefaultProfile.label = "Create default profile"
profile.host.ProfileManager.createDefaultProfile.summary = "Create default profile"
profile.host.ProfileManager.findAssociatedProfile.label = "Find associated profile"
profile.host.ProfileManager.findAssociatedProfile.summary = "Find associated profile"
profile.host.ProfileManager.queryPolicyMetadata.label = "Query policy metadata"
profile.host.ProfileManager.queryPolicyMetadata.summary = "Query policy metadata"
profile.host.ProfileManager.queryProfileMetadata.label = "Query profile metadata"
profile.host.ProfileManager.queryProfileMetadata.summary = "Query profile metadata"
vm.BackupAgent.abortBackup.label = "Stop virtual machine backup"
vm.BackupAgent.abortBackup.summary = "Stop a backup operation in a virtual machine"
vm.BackupAgent.notifySnapshotCompletion.label = "Notify virtual machine snapshot completion"
vm.BackupAgent.notifySnapshotCompletion.summary = "Notify the virtual machine when a snapshot operation is complete"
vm.BackupAgent.setCustomValue.label = "Set backup agent custom value"
vm.BackupAgent.setCustomValue.summary = "Set backup agent custom value"
vm.BackupAgent.startBackup.label = "Start virtual machine backup"
vm.BackupAgent.startBackup.summary = "Start a backup operation inside the virtual machine guest"
vm.BackupAgent.waitForEvent.label = "Wait for guest event"
vm.BackupAgent.waitForEvent.summary = "Wait for an event delivered by the virtual machine guest"
vm.check.CompatibilityChecker.checkCompatibility.label = "Check virtual machine's compatibility on host"
vm.check.CompatibilityChecker.checkCompatibility.summary = "Checks whether a virtual machine is compatible on a host"
vm.check.CompatibilityChecker.checkVMCompatibility.label = "Check compatibility of a VM specification on a host"
vm.check.CompatibilityChecker.checkVMCompatibility.summary = "Checks compatibility of a VM specification on a host"
vm.check.ProvisioningChecker.checkClone.label = "Evaluate cloning VM to destination"
vm.check.ProvisioningChecker.checkClone.summary = "Checks whether the VM can be cloned to the specified destination host, resource pool, and datastores"
vm.check.ProvisioningChecker.checkMigrate.label = "Evaluate migration of VM to destination"
vm.check.ProvisioningChecker.checkMigrate.summary = "Checks whether the VM can be migrated to the specified destination host, resource pool, and datastores"
vm.check.ProvisioningChecker.checkRelocate.label = "Evaluate relocation of VM to destination"
vm.check.ProvisioningChecker.checkRelocate.summary = "Checks whether the VM can be relocated to the specified destination host, resource pool, and datastores"
vm.check.ProvisioningChecker.queryVMotionCompatibilityEx.label = "Evaluate vMotion migration of VMs to hosts"
vm.check.ProvisioningChecker.queryVMotionCompatibilityEx.summary = "Checks whether the specified VMs can be migrated with vMotion to all the specified hosts"
vm.check.StaleObjectChecker.checkStaleObject.label = "Check the staleness of inventory objects"
vm.check.StaleObjectChecker.checkStaleObject.summary = "Checks the staleness of inventory objects data to ensure compatibility"
vm.check.TestletManager.registerTestProvider.label = "Register a test provider and its associated compatibility tests"
vm.check.TestletManager.registerTestProvider.summary = "Registers a test provider and its associated compatibility tests with the TestletManager."
vm.check.TestletManager.unregisterTestProvider.label = "Unregister a test provider and remove associated compatibility tests"
vm.check.TestletManager.unregisterTestProvider.summary = "Unregisters a test provider from the TestletManager and removes the associated compatibility tests"

# IORM
StorageResourceManager.ConfigureDatastoreIORM.label = "Configure Storage I/O Control on datastore"
StorageResourceManager.ConfigureDatastoreIORM.summary = "Configure Storage I/O Control on datastore"
StorageResourceManager.ConfigureDatastoreIORMOnHost.label = "Configure Storage I/O Control on datastore"
StorageResourceManager.ConfigureDatastoreIORMOnHost.summary = "Configure Storage I/O Control on datastore"
StorageResourceManager.QueryIORMConfigOption.label = "Query Storage I/O Control configuration options"
StorageResourceManager.QueryIORMConfigOption.summary = "Query Storage I/O Control configuration options"

# Host Power Management
host.PowerSystem.configurePolicy.label = "Configure host power management policy"
host.PowerSystem.configurePolicy.summary = "Configure host power management policy"

# vSphere Replication
HbrManager.enableReplication.label           = "Enable replication of virtual machine"
HbrManager.enableReplication.summary         = "Enable replication of virtual machine"
HbrManager.disableReplication.label          = "Disable replication of virtual machine"
HbrManager.disableReplication.summary        = "Disable replication of virtual machine"
HbrManager.reconfigureReplication.label      = "Reconfigure replication for virtual machine"
HbrManager.reconfigureReplication.summary    = "Reconfigure replication for virtual machine"
HbrManager.retrieveReplicationConfig.label   = "Retrieve replication configuration of virtual machine"
HbrManager.retrieveReplicationConfig.summary = "Retrieve replication configuration of virtual machine"
HbrManager.pauseReplication.label            = "Pause replication of virtual machine"
HbrManager.pauseReplication.summary          = "Pause replication of virtual machine"
HbrManager.resumeReplication.label           = "Resume replication of virtual machine"
HbrManager.resumeReplication.summary         = "Resume replication of virtual machine"
HbrManager.fullSync.label                    = "Start a replication resynchronization for virtual machine"
HbrManager.fullSync.summary                  = "Start a replication resynchronization for virtual machine"
HbrManager.createInstance.label              = "Start new replication instance for virtual machine"
HbrManager.createInstance.summary            = "Start extraction and transfer of a new replication instance for virtual machine"
HbrManager.startOfflineInstance.label        = "Replicate powered-off virtual machine"
HbrManager.startOfflineInstance.summary      = "Transfer a replication instance for powered-off virtual machine"
HbrManager.stopOfflineInstance.label         = "Stop replication of powered-off virtual machine"
HbrManager.stopOfflineInstance.summary       = "Stop replication of powered-off virtual machine"

# Guest Operations
vm.guest.AuthManager.validateCredentials.label       = "Authenticate credentials in guest"
vm.guest.AuthManager.validateCredentials.summary     = "Authenticate credentials in the guest operating system"
vm.guest.AuthManager.acquireCredentials.label        = "Acquire credentials in guest"
vm.guest.AuthManager.acquireCredentials.summary      = "Acquire credentials in the guest operating system"
vm.guest.AuthManager.releaseCredentials.label        = "Release credentials in guest"
vm.guest.AuthManager.releaseCredentials.summary      = "Release credentials in the guest operating system"

vm.guest.FileManager.makeDirectory.label              = "Create a directory in the guest"
vm.guest.FileManager.makeDirectory.summary            = "Create a directory in the guest operating system"
vm.guest.FileManager.deleteFile.label                 = "Delete a file in the guest"
vm.guest.FileManager.deleteFile.summary               = "Delete a file in the guest operating system"
vm.guest.FileManager.deleteDirectory.label            = "Delete a directory in the guest"
vm.guest.FileManager.deleteDirectory.summary          = "Delete a directory in the guest operating system"
vm.guest.FileManager.moveDirectory.label              = "Move or rename a directory in the guest"
vm.guest.FileManager.moveDirectory.summary            = "Move or rename a directory in the guest operating system"
vm.guest.FileManager.moveFile.label                   = "Move or rename a file in the guest"
vm.guest.FileManager.moveFile.summary                 = "Move or rename a file in the guest operating system"
vm.guest.FileManager.createTemporaryFile.label        = "Create a temporary file in the guest"
vm.guest.FileManager.createTemporaryFile.summary      = "Create a temporary file in the guest operating system"
vm.guest.FileManager.createTemporaryDirectory.label   = "Create a temporary directory in the guest"
vm.guest.FileManager.createTemporaryDirectory.summary = "Create a temporary directory in the guest operating system"
vm.guest.FileManager.listFiles.label                  = "List files or directories in the guest"
vm.guest.FileManager.listFiles.summary                = "List files or directories in the guest operating system"
vm.guest.FileManager.changeFileAttributes.label       = "Change the attributes of a file in the guest"
vm.guest.FileManager.changeFileAttributes.summary     = "Change the attributes of a file in the guest operating system"
vm.guest.FileManager.initiateFileTransferFromGuest.label       = "Initiates an operation to transfer a file from the guest"
vm.guest.FileManager.initiateFileTransferFromGuest.summary     = "Initiates an operation to transfer a file from the guest operating system"
vm.guest.FileManager.initiateFileTransferToGuest.label       = "Initiates an operation to transfer a file to the guest"
vm.guest.FileManager.initiateFileTransferToGuest.summary     = "Initiates an operation to transfer a file to the guest operating system"

vm.guest.ProcessManager.startProgram.label             = "Start a program in the guest"
vm.guest.ProcessManager.startProgram.summary           = "Start a program in the guest operating system"
vm.guest.ProcessManager.listProcesses.label            = "List processes in the guest"
vm.guest.ProcessManager.listProcesses.summary          = "List processes in the guest operating system"
vm.guest.ProcessManager.terminateProcess.label         = "Terminate a process in the guest"
vm.guest.ProcessManager.terminateProcess.summary       = "Terminate a process in the guest operating system"
vm.guest.ProcessManager.readEnvironmentVariable.label    = "Read an environment variable in the guest"
vm.guest.ProcessManager.readEnvironmentVariable.summary  = "Read an environment variable in the guest operating system"

vm.guest.WindowsRegistryManager.listRegistryKeys.label        = "Lists all registry subkeys for a specified registry key"
vm.guest.WindowsRegistryManager.listRegistryKeys.summary      = "Lists all registry subkeys for a specified registry key in the Windows guest operating system."
vm.guest.WindowsRegistryManager.createRegistryKey.label       = "Creates a registry key"
vm.guest.WindowsRegistryManager.createRegistryKey.summary     = "Creates a registry key in the Windows guest operating system"
vm.guest.WindowsRegistryManager.deleteRegistryKey.label       = "Deletes a registry key"
vm.guest.WindowsRegistryManager.deleteRegistryKey.summary     = "Deletes a registry key in the Windows guest operating system"
vm.guest.WindowsRegistryManager.listRegistryValues.label      = "Lists all registry values for a specified registry key"
vm.guest.WindowsRegistryManager.listRegistryValues.summary    = "Lists all registry values for a specified registry key in the Windows guest operating system"
vm.guest.WindowsRegistryManager.setRegistryValue.label        = "Sets and creates a registry value"
vm.guest.WindowsRegistryManager.setRegistryValue.summary      = "Sets and creates a registry value in the Windows guest operating system"
vm.guest.WindowsRegistryManager.deleteRegistryValue.label     = "Deletes a registry value"
vm.guest.WindowsRegistryManager.deleteRegistryValue.summary   = "Deletes a registry value in the Windows guest operating system"

vm.guest.AliasManager.addAlias.label  = "Add an alias to the alias store in the guest"
vm.guest.AliasManager.addAlias.summary  = "Add an alias to the alias store in the guest operating system"
vm.guest.AliasManager.removeAlias.label  = "Remove an alias from the alias store in the guest"
vm.guest.AliasManager.removeAlias.summary  = "Remove an alias from the alias store in the guest operating system"
vm.guest.AliasManager.removeAliasByCert.label  = "Remove all aliases associated with a SSO Server certificate from the guest"
vm.guest.AliasManager.removeAliasByCert.summary  = "Remove all aliases associated with a SSO Server certificate from the guest operating system"
vm.guest.AliasManager.listAliases.label  = "List all aliases for a user in the guest"
vm.guest.AliasManager.listAliases.summary  = "List all aliases for a user in the guest operating system"
vm.guest.AliasManager.listMappedAliases.label  = "List all mapped aliases in the guest"
vm.guest.AliasManager.listMappedAliases.summary  = "List all mapped aliases in the guest operating system"

# Storage DRS
StorageResourceManager.applyRecommendationToPod.label = "Apply a Storage DRS recommendation"
StorageResourceManager.applyRecommendationToPod.summary = "Apply a Storage DRS recommendation"
StorageResourceManager.applyRecommendation.label = "Apply Storage DRS recommendations"
StorageResourceManager.applyRecommendation.summary = "Apply Storage DRS recommendations"
StorageResourceManager.configureStorageDrsForPod.label = "Configure Storage DRS"
StorageResourceManager.configureStorageDrsForPod.summary = "Configure Storage DRS on a datastore cluster"
StorageResourceManager.cancelRecommendation.label        = "Cancel storage DRS recommendation"
StorageResourceManager.cancelRecommendation.summary      = "Cancels a storage DRS recommendation"
StorageResourceManager.recommendDatastores.label         = "Invoke storage DRS for placement recommendations"
StorageResourceManager.recommendDatastores.summary       = "Invokes storage DRS for placement recommendations"
StorageResourceManager.refreshRecommendation.label       = "Refresh storage DRS recommendation"
StorageResourceManager.refreshRecommendation.summary     = "Refreshes the storage DRS recommendations on the specified datastore cluster"
StorageResourceManager.queryDatastorePerformanceSummary.label = "Query datastore performance summary"
StorageResourceManager.queryDatastorePerformanceSummary.summary = "Query datastore performance metrics in summary form"

StoragePod.moveInto.label = "Move datastores into a datastore cluster"
StoragePod.moveInto.summary = "Move datastores into a datastore cluster"
StoragePod.destroy.label = "Remove a datastore cluster"
StoragePod.destroy.summary = "Remove a datastore cluster"
StoragePod.rename.label = "Rename a datastore cluster"
StoragePod.rename.summary = "Rename a datastore cluster"

Folder.createStoragePod.label = "Create a datastore cluster"
Folder.createStoragePod.summary = "Create a datastore cluster"

Datastore.enterMaintenanceMode.label = "Generate recommendations for SDRS maintenance mode"
Datastore.enterMaintenanceMode.summary = "Virtual machine evacuation recommendations from the selected datastore are generated for SDRS maintenance mode"
Datastore.exitMaintenanceMode.label = "Exit SDRS maintenance mode"
Datastore.exitMaintenanceMode.summary = "Exit SDRS maintenance mode"
Drm.TrackEnterMaintenanceLro.label = "Enter SDRS maintenance mode"
Drm.TrackEnterMaintenanceLro.summary = "Enter SDRS maintenance mode"
Drm.ExecuteMaintenanceRecommendationsLro.label = "Apply recommendations for SDRS maintenance mode"
Drm.ExecuteMaintenanceRecommendationsLro.summary = "Apply recommendations to enter into SDRS maintenance mode"
Drm.ExecuteStorageVmotionLro.label = "Execute Storage vMotion for Storage DRS"
Drm.ExecuteStorageVmotionLro.summary = "Execute Storage vMotion migrations for Storage DRS"

# Host Cache Configuration
host.CacheConfigurationManager.configureCache.label   = "Configure host cache performance enhancement"
host.CacheConfigurationManager.configureCache.summary = "Configures host cache by allocating space on a low latency device (usually a solid state drive) for enhanced system performance"

###

#
alarm.AlarmManager.createPrivateAlarm.label                       = "Create private alarm on managed entity"
alarm.AlarmManager.createPrivateAlarm.summary                     = "Creates a Private (trigger-only) Alarm on a managed entity"
alarm.AlarmManager.queryPrivateAlarms.label                       = "Query private alarms on managed entity"
alarm.AlarmManager.queryPrivateAlarms.summary                     = "Retrieves all of the Private (trigger-only) Alarms defined on the specified managed entity"
alarm.AlarmManager.retrieveTriggers.label                         = "Retrieve queued-up alarm triggers"
alarm.AlarmManager.retrieveTriggers.summary                       = "Retrieves any queued-up alarm triggers representing Alarm state changes since the last time this method was called"
alarm.AlarmManager.syncTriggeredAlarms.label                      = "Sync triggered alarms list"
alarm.AlarmManager.syncTriggeredAlarms.summary                    = "Retrieves the full list of currently-triggered Alarms, as a list of triggers"
#
AuthorizationManager.checkMethodInvocation.label                  = "Check method invocation privileges"
AuthorizationManager.checkMethodInvocation.summary                = "Checks whether a session holds a set of privileges required to invoke a specified method"
#
CbrcManager.queryDigestInfo.label                                 = "Query virtual disk digest configuration"
CbrcManager.queryDigestInfo.summary                               = "Returns the current configuration of the digest for the given digest-enabled virtual disks"
CbrcManager.queryDigestRuntimeInfo.label                          = "Query virtual disk digest runtime information"
CbrcManager.queryDigestRuntimeInfo.summary                        = "Returns the status of runtime digest usage for the given digest-enabled virtual disks"
#
cluster.TransitionalEVCManager.checkAddHost.label                 = "Validate host for EVC cluster"
cluster.TransitionalEVCManager.checkAddHost.summary               = "Tests the validity of adding a host into the Enhanced vMotion Compatibility cluster"
cluster.TransitionalEVCManager.checkConfigureEVC.label            = "Validate EVC mode for cluster"
cluster.TransitionalEVCManager.checkConfigureEVC.summary          = "Test the validity of configuring Enhanced vMotion Compatibility mode on the managed cluster"
#
ClusterComputeResource.checkDasAdmission.label                    = "Check VM admission in vSphere HA cluster"
ClusterComputeResource.checkDasAdmission.summary                  = "Checks if HA admission control allows a set of virtual machines to be powered on in the cluster"
ClusterComputeResource.checkReconfigureDas.label                  = "Check cluster for vSphere HA configuration"
ClusterComputeResource.checkReconfigureDas.summary                = "Check how the specified HA config will affect the cluster state if high availability is enabled"
ClusterComputeResource.retrieveDasData.label                      = "Retrieve vShpere HA data for cluster"
ClusterComputeResource.retrieveDasData.summary                    = "Retrieves HA data for a cluster"
ClusterComputeResource.TestVmComponentProtection.label            = "Test VM component protection for vSphere HA cluster"
ClusterComputeResource.TestVmComponentProtection.summary          = "Test how HA VM Component Protection Service responds to component failures"
#
DistributedVirtualSwitch.queryAvailableOverlayClass.label         = "Query available overlay classes on a vSphere Distributed Switch"
DistributedVirtualSwitch.queryAvailableOverlayClass.summary       = "Queries a vSphere Distributed Switch for available overlay classes"
#
DrsStatsManager.configureCorrelationDetector.label                = "Configure datastore correlation detector"
DrsStatsManager.configureCorrelationDetector.summary              = "Configures datastore correlation detector with datastore to datastore cluster mappings"
DrsStatsManager.configureWorkloadCharacterization.label           = "Configure workload model calculation parameters for datastore"
DrsStatsManager.configureWorkloadCharacterization.summary         = "Configures calculation parameters used for computation of workload model for a datastore"
DrsStatsManager.queryCorrelationResult.label                      = "Query datastore correlation result"
DrsStatsManager.queryCorrelationResult.summary                    = "Queries correlation detector for a list of datastores correlated to a given datastore"
DrsStatsManager.queryWorkloadCharacterization.label               = "Query current workload model calculation parameters"
DrsStatsManager.queryWorkloadCharacterization.summary             = "Queries a host for the current workload model calculation parameters"
#
dvs.DistributedVirtualSwitchManager.queryCompatibleHostForExistingDvs.label     = "Query compatible hosts for existing vSphere Distributed Switch"
dvs.DistributedVirtualSwitchManager.queryCompatibleHostForExistingDvs.summary   = "Returns a list of hosts that are compatible with an existing vSphere Distributed Switch"
dvs.DistributedVirtualSwitchManager.queryCompatibleHostForNewDvs.label          = "Query compatible hosts for a vSphere Distributed Switch specification"
dvs.DistributedVirtualSwitchManager.queryCompatibleHostForNewDvs.summary        = "Returns a list of hosts that are compatible with a given vSphere Distributed Switch specification"
dvs.DistributedVirtualSwitchManager.queryFeatureCapability.label                = "Query feature capabilities for vSphere Distributed Switch specification"
dvs.DistributedVirtualSwitchManager.queryFeatureCapability.summary              = "Queries feature capabilites available for a given vSphere Distributed Switch specification"
#
dvs.HostDistributedVirtualSwitchManager.queryOverlayClass.label                 = "Query overlay classes for vSphere Distributed Switch on host"
dvs.HostDistributedVirtualSwitchManager.queryOverlayClass.summary               = "Query the list of available overlay classes for a vSphere Distributed Switch on a host"
dvs.HostDistributedVirtualSwitchManager.retrieveDVPortgroup.label               = "Retrieve port group keys for vSphere Distributed Switch"
dvs.HostDistributedVirtualSwitchManager.retrieveDVPortgroup.summary             = "Retrieve the list of port group keys on a given vSphere Distributed Switch"
dvs.HostDistributedVirtualSwitchManager.retrieveDVPortgroupConfigSpec.label     = "Retrieve distributed virtual port group specification"
dvs.HostDistributedVirtualSwitchManager.retrieveDVPortgroupConfigSpec.summary   = "Retrievs the configuration specification for distributed virtual port groups"
dvs.HostDistributedVirtualSwitchManager.updateDVSOverlayInstances.label         = "Update vSphere Distributed Switch overlay instances"
dvs.HostDistributedVirtualSwitchManager.updateDVSOverlayInstances.summary       = "Updates the vSphere Distributed Switch overlay instances specified"
#
dvs.VmwareDistributedVirtualSwitch.queryAvailableOverlayClass.label             = "Query available overlay classes on vSphere Distributed Switch"
dvs.VmwareDistributedVirtualSwitch.queryAvailableOverlayClass.summary           = "Queries a vSphere Distributed Switch for available overlay classes"
#
EnvironmentBrowser.queryProvisioningPolicy.label                  = "Query virtual machine provisioning operation policy"
EnvironmentBrowser.queryProvisioningPolicy.summary                = "Query environment browser for information about the virtual machine provisioning operation policy"
#
EsxAgentConfigManager.queryAgentVmInfo.label                      = "Query agent virtual machine information"
EsxAgentConfigManager.queryAgentVmInfo.summary                    = "Returns the state for each of the specified agent virtual machines"
EsxAgentConfigManager.queryComputeResourceAgentInfo.label         = "Query compute resource agent information"
EsxAgentConfigManager.queryComputeResourceAgentInfo.summary       = "Retrieves the agent information for one or more compute resources"
EsxAgentConfigManager.updateAgentVmInfo.label                     = "Update agent virtual machine information"
EsxAgentConfigManager.updateAgentVmInfo.summary                   = "Updates agent virtual machine information"
EsxAgentConfigManager.updateComputeResourceAgentInfo.label        = "Update compute resource agent information"
EsxAgentConfigManager.updateComputeResourceAgentInfo.summary      = "Updates the number of required agent virtual machines for one or more compute resources"
#
event.EventManager.queryEventsById.label                          = "Query events by IDs"
event.EventManager.queryEventsById.summary                        = "Returns the events specified by a list of IDs"
event.EventManager.retrieveArgumentDescription.label              = "Retrieve argument description for event type"
event.EventManager.retrieveArgumentDescription.summary            = "Retrieves the argument meta-data for a given event type"
#
ExtensionManager.clearExtensionData.label                         = "Clear extension data"
ExtensionManager.clearExtensionData.summary                       = "Clears extension-specific data associated with an extension"
ExtensionManager.queryExtensionData.label                         = "Query extension data"
ExtensionManager.queryExtensionData.summary                       = "Retrieves extension-specific data associated with an extension"
ExtensionManager.queryExtensionDataKeys.label                     = "Query extension data keys"
ExtensionManager.queryExtensionDataKeys.summary                   = "Retrieves extension-specific data keys associated with an extension"
ExtensionManager.queryExtensionDataUsage.label                    = "Query extension data usage"
ExtensionManager.queryExtensionDataUsage.summary                  = "Retrieves statistics about the amount of data being stored by extensions registered with vCenter Server"
ExtensionManager.queryManagedBy.label                             = "Query entities managed by extension"
ExtensionManager.queryManagedBy.summary                           = "Finds entities managed by an extension"
ExtensionManager.updateExtensionData.label                        = "Update extension data"
ExtensionManager.updateExtensionData.summary                      = "Updates extension-specific data associated with an extension"
#
Folder.registerVmEx.label                                         = "Register encrypted virtual machine"
Folder.registerVmEx.summary                                       = "Adds an existing encrypted virtual machine to this folder"
#
HbrManager.queryReplicationState.label                            = "Query virtual machine replication state"
HbrManager.queryReplicationState.summary                          = "Qureies the current state of a replicated virtual machine"
#
HookManager.AcquireMethodHookForExtension.label                   = "Acquire method hook for extension"
HookManager.AcquireMethodHookForExtension.summary                 = "Acquires a hook on a vSphere API method"
HookManager.DeclareExtensionAsHookingService.label                = "Declare an extension as hooking service"
HookManager.DeclareExtensionAsHookingService.summary              = "Declares a registered extension as a service that can hook vSphere API methods"
HookManager.ReleaseMethodHookForExtension.label                   = "Release the method hook for an extension"
HookManager.ReleaseMethodHookForExtension.summary                 = "Releases the hook that an extension has previously acquired"
HookManager.RemoveExtensionAsHookingService.label                 = "Remove an extension as hooking service"
HookManager.RemoveExtensionAsHookingService.summary               = "Unregisters an extension as a hooking service"
HookManager.UpdatePreCallbackResult.label                         = "Update pre-callback result"
HookManager.UpdatePreCallbackResult.summary                       = "Pushes pre-callback result updates to vCenter Server"
#
host.DatastoreSystem.queryUnresolvedVmfsVolumes.label             = "Query unbound VMFS volumes"
host.DatastoreSystem.queryUnresolvedVmfsVolumes.summary           = "Gets the list of unbound VMFS volumes"
#
host.FaultToleranceManager.getPeerVMComponentHealth.label         = "Get peer VM component health"
host.FaultToleranceManager.getPeerVMComponentHealth.summary       = "Gets component health information of the FT peer of the specified local virtual machine"
host.FaultToleranceManager.goLivePeerVM.label                     = "Make peer VM primary"
host.FaultToleranceManager.goLivePeerVM.summary                   = "Makes the peer VM primary and terminates the local virtual machine"
host.FaultToleranceManager.setLocalVMComponentHealth.label        = "Set local VM component health"
host.FaultToleranceManager.setLocalVMComponentHealth.summary      = "Sets the component health information of the specified local virtual machine"
#
host.HostAccessManager.retrieveAccessEntries.label                = "Retrieve access entries"
host.HostAccessManager.retrieveAccessEntries.summary              = "Retrieves the access mode for each user or group with access permissions on the host"
host.HostAccessManager.changeAccessMode.label                     = "Change access mode"
host.HostAccessManager.changeAccessMode.summary                   = "Changes the access mode for a user or group on the host"
host.HostAccessManager.queryDcuiAccess.label                      = "Retrieve special DCUI access users"
host.HostAccessManager.queryDcuiAccess.summary                    = "Retrieves the list of users with special access to DCUI"
host.HostAccessManager.updateDcuiAccess.label                     = "Update special DCUI access users"
host.HostAccessManager.updateDcuiAccess.summary                   = "Updates the list of users with special access to DCUI"
host.HostAccessManager.querySystemUsers.label                     = "Retrieve system users"
host.HostAccessManager.querySystemUsers.summary                   = "Retrieve the list of special system users on the host"
host.HostAccessManager.updateSystemUsers.label                    = "Update system users"
host.HostAccessManager.updateSystemUsers.summary                  = "Updates the list of special system users on the host"
host.HostAccessManager.queryLockdownExceptions.label              = "Query lockdown exceptions"
host.HostAccessManager.queryLockdownExceptions.summary            = "Queries the current list of user exceptions for lockdown mode"
host.HostAccessManager.updateLockdownExceptions.label             = "Update lockdown exceptions"
host.HostAccessManager.updateLockdownExceptions.summary           = "Updates the current list of user exceptions for lockdown mode"
host.HostAccessManager.changeLockdownMode.label                   = "Change lockdown mode"
host.HostAccessManager.changeLockdownMode.summary                 = "Changes lockdown mode on the host"
#
host.HostUpdateProxyManager.reconfigureHostUpdateProxy.label      = "Reconfigure host update proxy"
host.HostUpdateProxyManager.reconfigureHostUpdateProxy.summary    = "Reconfigure host update proxy"
host.HostUpdateProxyManager.retrieveHostUpdateProxyConfig.label   = "Retrieve configuration of the host update proxy"
host.HostUpdateProxyManager.retrieveHostUpdateProxyConfig.summary = "Retrieve configuration of the host update proxy"
#
host.ImageConfigManager.queryHostAcceptanceLevel.label            = "Get acceptance level for host image configuration"
host.ImageConfigManager.queryHostAcceptanceLevel.summary          = "Get acceptance level settings for host image configuration"
host.ImageConfigManager.queryHostImageProfile.label               = "Query host image profile"
host.ImageConfigManager.queryHostImageProfile.summary             = "Queries the current host image profile information"
#
host.KernelModuleSystem.queryConfiguredModuleOptionString.label   = "Query kernel module options"
host.KernelModuleSystem.queryConfiguredModuleOptionString.summary = "Retrieves the options configured to be passed to a kernel module when loaded"
host.KernelModuleSystem.queryModules.label                        = "Query host kernel modules"
host.KernelModuleSystem.queryModules.summary                      = "Retrieves information about the kernel modules on the host"
#
host.LowLevelProvisioningManager.deleteFiles.label                = "Delete files"
host.LowLevelProvisioningManager.deleteFiles.summary              = "Deletes a list of files from a datastore"
host.LowLevelProvisioningManager.deleteVmExceptDisks.label        = "Delete virtual machine without deleting its virtual disks"
host.LowLevelProvisioningManager.deleteVmExceptDisks.summary      = "Deletes a virtual machine from its storage, all virtual machine files are deleted except its associated virtual disks"
host.LowLevelProvisioningManager.extractNvramContent.label        = "Extract NVRAM content"
host.LowLevelProvisioningManager.extractNvramContent.summary      = "Extracts the NVRAM content from a checkpoint file"
host.LowLevelProvisioningManager.queryLastVmMigrationStatus.label = "Query last virtual machine migration status"
host.LowLevelProvisioningManager.queryLastVmMigrationStatus.summary = "Retrieves the last virtual machine migration status if available"
host.LowLevelProvisioningManager.queryVmRecoveryInfo.label        = "Query virtual machine recovery information"
host.LowLevelProvisioningManager.queryVmRecoveryInfo.summary      = "Retrieves virtual machine information that can be used for recovery"
host.LowLevelProvisioningManager.relayoutSnapshots.label          = "Update snapshot layout information"
host.LowLevelProvisioningManager.relayoutSnapshots.summary        = "Updates the snapshot layout information of a virtual machine and reloads its snapshots"
host.LowLevelProvisioningManager.reserveFiles.label               = "Reserve files for provisioning"
host.LowLevelProvisioningManager.reserveFiles.summary             = "Reserves files or directories on a datastore to be used for a provisioning"
host.LowLevelProvisioningManager.retrieveLastVmMigrationStatus.label   = "Retrieve last virtual machine migration status"
host.LowLevelProvisioningManager.retrieveLastVmMigrationStatus.summary = "Retrieves the last virtual machine migration status if available"
host.LowLevelProvisioningManager.retrieveVmRecoveryInfo.label     = "Retrieve virtual machine recovery information"
host.LowLevelProvisioningManager.retrieveVmRecoveryInfo.summary   = "Retrieves virtual machine recovery information"
#
host.StorageSystem.deleteScsiLunState.label                       = "Delete state information for detached SCSI LUN"
host.StorageSystem.deleteScsiLunState.summary                     = "Removes the state information for a previously detached SCSI LUN"
host.StorageSystem.deleteVmfsVolumeState.label                    = "Delete state information for unmounted VMFS volume"
host.StorageSystem.deleteVmfsVolumeState.summary                  = "Removes the state information for a previously unmounted VMFS volume"
host.StorageSystem.queryPathSelectionPolicyOptions.label          = "Query path selection policy options"
host.StorageSystem.queryPathSelectionPolicyOptions.summary        = "Queries the set of path selection policy options"
host.StorageSystem.queryStorageArrayTypePolicyOptions.label       = "Query storage array type policy options"
host.StorageSystem.queryStorageArrayTypePolicyOptions.summary     = "Queries the set of storage array type policy options"
#
host.SystemDebugManager.queryProcessInfo.label                    = "Query process information"
host.SystemDebugManager.queryProcessInfo.summary                  = "Retrieves information regarding processes"
#
host.VirtualNicManager.queryNetConfig.label                       = "Query network configuration"
host.VirtualNicManager.queryNetConfig.summary                     = "Gets the network configuration for the specified NIC type"
#
host.VmciAccessManager.queryAccessToService.label                 = "Query virtual machines with access to VMCI service"
host.VmciAccessManager.queryAccessToService.summary               = "Gets the VMs with granted access to a service"
host.VmciAccessManager.retrieveGrantedServices.label              = "Retrieve VMCI service rights granted to virtual machine"
host.VmciAccessManager.retrieveGrantedServices.summary            = "Retrieve VMCI (Virtual Machine Communication Interface) service rights granted to a VM"
host.VmciAccessManager.updateAccess.label                         = "Update VMCI access rights"
host.VmciAccessManager.updateAccess.summary                       = "Updates VMCI (Virtual Machine Communication Interface) access rights for one or more virtual machines"
#
host.VMotionManager.initiateSourceEx.label                        = "Initiate VMotion send operation"
host.VMotionManager.initiateSourceEx.summary                      = "Initiates a VMotion send operation"
host.VMotionManager.prepareDestinationEx.label                    = "Prepare vMotion receive operation asynchronously"
host.VMotionManager.prepareDestinationEx.summary                  = "Prepares a vMotion receive operation asynchronously"
host.VMotionManager.prepareSourceEx.label                         = "Prepare VMotion send operation asynchronously"
host.VMotionManager.prepareSourceEx.summary                       = "Prepares a VMotion send operation asynchronously"
host.VMotionManager.updateMemMirrorFlag.label                     = "Update VMotionManager memory mirror migrate flag"
host.VMotionManager.updateMemMirrorFlag.summary                   = "Enables or disables VMotionManager memory mirror migrate"
#
HostSystem.queryOverheadEx2.label                                 = "Query virtual machine memory overhead"
HostSystem.queryOverheadEx2.summary                               = "Query memory overhead for a virtual machine power on"
HostSystem.querySystemResourceUsage.label                         = "Query system resource usage"
HostSystem.querySystemResourceUsage.summary                       = "Gets run-time information about controlled system resources"
HostSystem.retrieveDynamicTypeManager.label                       = "Retrieve Dynamic Type Manager"
HostSystem.retrieveDynamicTypeManager.summary                     = "Retrieves a reference to Dynamic Type Manager"
HostSystem.retrieveHardwareUptime.label                           = "Retrieve host hardware uptime"
HostSystem.retrieveHardwareUptime.summary                         = "Retrieves the hardware uptime for the host in seconds"
HostSystem.retrieveInternalCapability.label                       = "Retrieve internal host capabilities"
HostSystem.retrieveInternalCapability.summary                     = "Retrieves vCenter Server-specific internal host capabilities"
HostSystem.retrieveManagedMethodExecuter.label                    = "Retrieve Managed Method Executer"
HostSystem.retrieveManagedMethodExecuter.summary                  = "Retrieves a referemce to Managed Method Executer"
HostSystem.retrievePatchManager.label                             = "Retrieve Patch Manager"
HostSystem.retrievePatchManager.summary                           = "Retrieves a reference to Patch Manager"
#
ImageLibraryManager.updateLibrary.label                           = "Update image library"
ImageLibraryManager.updateLibrary.summary                         = "Update image library information"
#
InternalStatsCollector.queryLatestVmStats.label                   = "Query latest statistics for a virtual machine"
InternalStatsCollector.queryLatestVmStats.summary                 = "Queries the latest values of performance statistics of a virtual machine"
#
IpPoolManager.queryIpPools.label                                  = "Query network protocol profiles"
IpPoolManager.queryIpPools.summary                                = "Queries the list of network protocol profiles for a datacenter"
#
LicenseAssignmentManager.isFeatureAvailable.label                 = "Check feature availability"
LicenseAssignmentManager.isFeatureAvailable.summary               = "Checks if the corresponding features are licensed for a list of entities"
LicenseAssignmentManager.registerEntity.label                     = "Register licenseable entity"
LicenseAssignmentManager.registerEntity.summary                   = "Registers a licenseable entity"
LicenseAssignmentManager.unregisterEntity.label                   = "Unregister licenseable entity"
LicenseAssignmentManager.unregisterEntity.summary                 = "Unregisters an existing licenseable entity and releases any serial numbers assigned to it."
LicenseAssignmentManager.updateFeatureInUse.label                 = "Update in-use status of a licensed feature"
LicenseAssignmentManager.updateFeatureInUse.summary               = "Updates in-use status of a licensed feature"
LicenseAssignmentManager.updateUsage.label                        = "Update license entity usage count"
LicenseAssignmentManager.updateUsage.summary                      = "Updates the usage count of a license entity"
LicenseAssignmentManager.uploadLicenseFile.label                  = "Upload license file"
LicenseAssignmentManager.uploadLicenseFile.summary                = "Uploads a license file to vCenter Server"
#
LicenseDataManager.applyAssociatedLicenseData.label               = "Apply associated license data to managed entity"
LicenseDataManager.applyAssociatedLicenseData.summary             = "Applies associated license data to a managed entity"
LicenseDataManager.queryAssociatedLicenseData.label               = "Retrieve license data associated with managed entity"
LicenseDataManager.queryAssociatedLicenseData.summary             = "Retrieves the license data associated with a specified managed entity"
LicenseDataManager.queryEntityLicenseData.label                   = "Retrieve associated License Data objects"
LicenseDataManager.queryEntityLicenseData.summary                 = "Retrieves all the associated License Data objects"
LicenseDataManager.updateAssociatedLicenseData.label              = "Update entity license container"
LicenseDataManager.updateAssociatedLicenseData.summary            = "Updates the license container associated with a specified managed entity"
#
LicenseManager.queryLicenseDataManager.label                      = "Get License Data Manager"
LicenseManager.queryLicenseDataManager.summary                    = "Gets the License Data Manager"
#
MediaAnalysisManager.recognizeInstaller.label                     = "Recognize OS installer"
MediaAnalysisManager.recognizeInstaller.summary                   = "Determines the OS type by analyzing the contents of OS installer media"
#
OvfConsumer.annotateOst.label                                     = "Annotate OVF section tree"
OvfConsumer.annotateOst.summary                                   = "Annotates the given OVF section tree with configuration choices for this OVF consumer"
OvfConsumer.cloneEntities.label                                   = "Notify OVF consumer for cloned entities"
OvfConsumer.cloneEntities.summary                                 = "Notifies the OVF consumer that the specified entities have been cloned"
OvfConsumer.notifyPowerOn.label                                   = "Notify OVF consumer for virtual machine power on"
OvfConsumer.notifyPowerOn.summary                                 = "Notifies the OVF consumer that a virtual machine is about to be powered on"
OvfConsumer.populateEntityOst.label                               = "Populate entity OVF section tree"
OvfConsumer.populateEntityOst.summary                             = "Create OVF sections for the given managed entities and populate the entity OVF section tree"
OvfConsumer.registerEntities.label                                = "Request registration of OVF section tree nodes"
OvfConsumer.registerEntities.summary                              = "Notifies the OVF consumer that the specified OVF section tree nodes should be registered"
OvfConsumer.retrievePublicOvfEnvironmentSections.label            = "Retrieve public OVF environment sections for virtual machine "
OvfConsumer.retrievePublicOvfEnvironmentSections.summary          = "Retrieves the public OVF environment sections that this OVF consumer has for a given virtual machine"
OvfConsumer.unregisterEntities.label                              = "Request managed entities unregistration from OVF consumer"
OvfConsumer.unregisterEntities.summary                            = "Notifies the OVF consumer that the specified managed entities should be unregistered"
OvfConsumer.validateInstantiationOst.label                        = "Validate instantiation OVF section tree"
OvfConsumer.validateInstantiationOst.summary                      = "Validates that this OVF consumer can accept an instantiation OVF section tree"
#
PerformanceManager.disableStat.label                              = "Disable performance counters"
PerformanceManager.disableStat.summary                            = "Exclude a counter or a set of counters from the counters collection of this performance manager"
PerformanceManager.enableStat.label                               = "Enable performance counters"
PerformanceManager.enableStat.summary                             = "Enable a counter or a set of counters in the counters collection of this performance manager"
PerformanceManager.queryPerfCounterInt.label                      = "Query internal performance counters"
PerformanceManager.queryPerfCounterInt.summary                    = "Queries all internal counters, supported by this performance manager"
#
profile.cluster.ClusterProfile.retrieveDescription.label                                = "Retrieve cluster profile description"
profile.cluster.ClusterProfile.retrieveDescription.summary                              = "Retrieve cluster profile description"
#
profile.host.HostProfile.retrieveDescription.label                                      = "Retrieve host profile description"
profile.host.HostProfile.retrieveDescription.summary                                    = "Retrieve host profile description"
#
profile.host.profileEngine.ComplianceManager.checkHostCompliance.label                  = "Check compliance of host against profile"
profile.host.profileEngine.ComplianceManager.checkHostCompliance.summary                = "Checks compliance of a host against a profile"
profile.host.profileEngine.ComplianceManager.getDefaultCompliance.label                 = "Get the default compliance from host configuration subprofiles"
profile.host.profileEngine.ComplianceManager.getDefaultCompliance.summary               = "Get the default compliance from host configuration subprofiles"
profile.host.profileEngine.ComplianceManager.queryExpressionMetadata.label              = "Query expression metadata"
profile.host.profileEngine.ComplianceManager.queryExpressionMetadata.summary            = "Queries the metadata for the given expression names"
#
profile.host.profileEngine.HostProfileManager.applyHostConfig.label                     = "Apply host configuration"
profile.host.profileEngine.HostProfileManager.applyHostConfig.summary                   = "Applies the specified host configuration to the host"
profile.host.profileEngine.HostProfileManager.bookKeep.label                            = "Bookkeep host profile"
profile.host.profileEngine.HostProfileManager.bookKeep.summary                          = "Bookkeep host profile"
profile.host.profileEngine.HostProfileManager.createDefaultProfile.label                = "Create default host profile of specified type"
profile.host.profileEngine.HostProfileManager.createDefaultProfile.summary              = "Creates a default host profile of the specified type"
profile.host.profileEngine.HostProfileManager.execute.label                             = "Execute host profile manager engine"
profile.host.profileEngine.HostProfileManager.execute.summary                           = "Executes the host profile manager engine"
profile.host.profileEngine.HostProfileManager.prepareExport.label                       = "Prepare host profile for export"
profile.host.profileEngine.HostProfileManager.prepareExport.summary                     = "Prepares a host profile for export"
profile.host.profileEngine.HostProfileManager.queryPolicyMetadata.label                 = "Query profile policy option metadata"
profile.host.profileEngine.HostProfileManager.queryPolicyMetadata.summary               = "Gets the profile policy option metadata for the specified policy names"
profile.host.profileEngine.HostProfileManager.queryProfileCategoryMetadata.label        = "Query profile category metadata"
profile.host.profileEngine.HostProfileManager.queryProfileCategoryMetadata.summary      = "Gets the profile category metadata for the specified category names"
profile.host.profileEngine.HostProfileManager.queryProfileComponentMetadata.label       = "Query profile component metadata"
profile.host.profileEngine.HostProfileManager.queryProfileComponentMetadata.summary     = "Gets the profile component metadata for the specified component names"
profile.host.profileEngine.HostProfileManager.queryProfileMetadata.label                = "Query profile metadata"
profile.host.profileEngine.HostProfileManager.queryProfileMetadata.summary              = "Gets the profile metadata for the specified profile names and profile types"
profile.host.profileEngine.HostProfileManager.queryProfileStructure.label               = "Query profile structure"
profile.host.profileEngine.HostProfileManager.queryProfileStructure.summary             = "Gets information about the structure of a profile"
profile.host.profileEngine.HostProfileManager.queryState.label                          = "Query host profile manager state"
profile.host.profileEngine.HostProfileManager.queryState.summary                        = "Gets the current state of the host profile manager and plug-ins on a host"
profile.host.profileEngine.HostProfileManager.queryUserInputPolicyOptions.label         = "Query user input policy options"
profile.host.profileEngine.HostProfileManager.queryUserInputPolicyOptions.summary       = "Gets a list of policy options that are set to require user inputs"
profile.host.profileEngine.HostProfileManager.retrieveProfile.label                     = "Retrieve profile from host configuration"
profile.host.profileEngine.HostProfileManager.retrieveProfile.summary                   = "Retrieves a profile from the host's configuration"
profile.host.profileEngine.HostProfileManager.retrieveProfileDescription.label          = "Retrieve profile description"
profile.host.profileEngine.HostProfileManager.retrieveProfileDescription.summary        = "Retrieves description of a profile"
profile.host.profileEngine.HostProfileManager.updateTaskConfigSpec.label                = "Update configuration tasks from host configuration"
profile.host.profileEngine.HostProfileManager.updateTaskConfigSpec.summary              = "Update configuration tasks from host configuration"
#
profile.host.ProfileManager.queryAnswerFileStatus.label                                 = "Query answer file status"
profile.host.ProfileManager.queryAnswerFileStatus.summary                               = "Returns the status of the answer files associated with the specified hosts"
profile.host.ProfileManager.queryProfileCategoryMetadata.label                          = "Query metadata for profile categories"
profile.host.ProfileManager.queryProfileCategoryMetadata.summary                        = "Retrieves the metadata for a set of profile categories"
profile.host.ProfileManager.queryProfileComponentMetadata.label                         = "Query metadata for profile components"
profile.host.ProfileManager.queryProfileComponentMetadata.summary                       = "Retrieves the metadata for a set of profile components"
profile.host.ProfileManager.queryProfileStructure.label                                 = "Query profile structure"
profile.host.ProfileManager.queryProfileStructure.summary                               = "Gets information about the structure of a profile"
profile.host.ProfileManager.retrieveAnswerFile.label                                    = "Retrieve answer file"
profile.host.ProfileManager.retrieveAnswerFile.summary                                  = "Returns the answer file associated with a particular host"
#
profile.Profile.retrieveDescription.label                                               = "Retrieve profile description"
profile.Profile.retrieveDescription.summary                                             = "Retrieve profile description"
#
ResourcePool.queryResourceConfigOption.label                      = "Query resource pool resource configuration options"
ResourcePool.queryResourceConfigOption.summary                    = "Returns configuration options for a set of resources for a resource pool"
#
ServiceDirectory.registerService.label                            = "Register service endpoint"
ServiceDirectory.registerService.summary                          = "Registers a service endpoint"
ServiceDirectory.unregisterService.label                          = "Unregister service endpoint"
ServiceDirectory.unregisterService.summary                        = "Unregisters a service endpoint"
#
SessionManager.loginByToken.label                                 = "Login by token"
SessionManager.loginByToken.summary                               = "Logs on to the server through token representing principal identity"
#
StoragePod.addStandaloneHost.label                                = "Add standalone host"
StoragePod.addStandaloneHost.summary                              = "Creates a new single-host compute-resource"
StoragePod.addStandaloneHostWithAdminDisabled.label               = "Add standalone host and enable lockdown mode"
StoragePod.addStandaloneHostWithAdminDisabled.summary             = "Creates a new single-host compute-resource and enables lockdown mode on the host"
StoragePod.addTag.label                                           = "Add tags to datastore cluster"
StoragePod.addTag.summary                                         = "Adds a set of tags to a datastore cluster"
StoragePod.createCluster.label                                    = "Create cluster"
StoragePod.createCluster.summary                                  = "Creates a new cluster compute-resource in this datastore cluster"
StoragePod.createClusterEx.label                                  = "Create cluster"
StoragePod.createClusterEx.summary                                = "Creates a new cluster compute-resource in this datastore cluster"
StoragePod.createDatacenter.label                                 = "Create datacenter"
StoragePod.createDatacenter.summary                               = "Create a new datacenter with the given name"
StoragePod.createDistributedVirtualSwitch.label                   = "Create vSphere Distributed Switch"
StoragePod.createDistributedVirtualSwitch.summary                 = "Creates a vSphere Distributed Switch"
StoragePod.createFolder.label                                     = "Create folder"
StoragePod.createFolder.summary                                   = "Creates a new folder"
StoragePod.createStoragePod.label                                 = "Create datastore cluster"
StoragePod.createStoragePod.summary                               = "Creates a new datastore cluster"
StoragePod.createVm.label                                         = "Create virtual machine"
StoragePod.createVm.summary                                       = "Creates a new virtual machine"
StoragePod.registerVm.label                                       = "Register virtual machine"
StoragePod.registerVm.summary                                     = "Adds an existing virtual machine to this datastore cluster"
StoragePod.registerVmEx.label                                     = "Register encrypted virtual machine"
StoragePod.registerVmEx.summary                                   = "Adds an existing encrypted virtual machine to this datastore cluster"
StoragePod.reload.label                                           = "Reload datastore cluster"
StoragePod.reload.summary                                         = "Reloads the datastore cluster"
StoragePod.removeTag.label                                        = "Remove tags from datastore cluster"
StoragePod.removeTag.summary                                      = "Removes a set of tags from a datastore cluster"
StoragePod.setCustomValue.label                                   = "Set datastore cluster custom value"
StoragePod.setCustomValue.summary                                 = "Sets the value of a custom field of a datastore cluster"
StoragePod.unregisterAndDestroy.label                             = "Unregister and delete"
StoragePod.unregisterAndDestroy.summary                           = "Recursively deletes all child virtual machine folders and unregisters all virtual machines"
#
StorageResourceManager.GetStorageIORMDeviceModel.label            = "Get storage I/O resource management device model"
StorageResourceManager.GetStorageIORMDeviceModel.summary          = "Returns the device model computed for a given datastore by storage DRS"
#
VirtualApp.queryResourceConfigOption.label                        = "Query Virtual App resource configuration options"
VirtualApp.queryResourceConfigOption.summary                      = "Returns configuration options for a set of resources for a Virtual App"
VirtualApp.refreshRuntime.label                                   = "Refresh Virtual App runtime information"
VirtualApp.refreshRuntime.summary                                 = "Refreshes the resource usage runtime information for a Virtual App"
#
VirtualDiskManager.queryVirtualDiskInfo.label                     = "Query virtual disk information"
VirtualDiskManager.queryVirtualDiskInfo.summary                   = "Queries information about a virtual disk"
#
VirtualMachine.createSiblingSnapshot.label                        = "Create virtual machine sibling snapshot"
VirtualMachine.createSiblingSnapshot.summary                      = "Creates a new snapshot for this VM at the sibling branch of the snapshot tree"
VirtualMachine.diagnoseResourceAllocation.label                   = "Diagnose virtual machine resource allocation"
VirtualMachine.diagnoseResourceAllocation.summary                 = "Gets recommendations for increasing the resource allocation for this VM"
VirtualMachine.injectOvfEnvironment.label                         = "Inject OVF Environment into virtual machine"
VirtualMachine.injectOvfEnvironment.summary                       = "Specifies the OVF Environments to be injected into and returned for a virtual machine"
VirtualMachine.putUsbScanCodes.label                              = "Put USB HID scan codes"
VirtualMachine.putUsbScanCodes.summary                            = "Injects a sequence of USB HID scan codes into the keyboard"
VirtualMachine.queryVrmPolicy.label                               = "Query virtual rights management policy"
VirtualMachine.queryVrmPolicy.summary                             = "Queries virtual rights management policy information associated with a virtual machine"
VirtualMachine.setDisplayTopologyModes.label                      = "Set guest display topology modes."
VirtualMachine.setDisplayTopologyModes.summary                    = "Sets the guest's display topology as specified."
VirtualMachine.unlock.label                                       = "Unlock encrypted virtual machine"
VirtualMachine.unlock.summary                                     = "Unlocks an encrypted virtual machine"
VirtualMachine.updateVrmPolicy.label                              = "Update virtual rights management policy"
VirtualMachine.updateVrmPolicy.summary                            = "Updates virtual rights management policy data associated with a virtual machine"
#
vm.customization.GuestInstallManager.cleanupAfterUnattendedInstall.label        = "Cleanup after unattended guest install"
vm.customization.GuestInstallManager.cleanupAfterUnattendedInstall.summary      = "Reverts the configuration changes made by unattended guest OS installation"
vm.customization.GuestInstallManager.prepareForUnattendedInstall.label          = "Prepare VM for unattended guest install"
vm.customization.GuestInstallManager.prepareForUnattendedInstall.summary        = "Prepares a VM for unattended installation of a guest OS"
#
vm.guest.GuestOperationsManager.queryDisabledMethods.label        = "Query disabled guest operations"
vm.guest.GuestOperationsManager.queryDisabledMethods.summary      = "Returns a list of guest operations not supported by a virtual machine"
#
vm.NamespaceManager.createNamespace.label                         = "Create namespace"
vm.NamespaceManager.createNamespace.summary                       = "Create a virtual machine namespace"
vm.NamespaceManager.deleteNamespace.label                         = "Delete namespace"
vm.NamespaceManager.deleteNamespace.summary                       = "Delete the virtual machine namespace"
vm.NamespaceManager.deleteAllNamespaces.label                     = "Delete all namespaces"
vm.NamespaceManager.deleteAllNamespaces.summary                   = "Delete all namespaces associated with the virtual machine"
vm.NamespaceManager.updateNamespace.label                         = "Update namespace"
vm.NamespaceManager.updateNamespace.summary                       = "Reconfigure the virtual machine namespace"
vm.NamespaceManager.queryNamespace.label                          = "Query namespace"
vm.NamespaceManager.queryNamespace.summary                        = "Retrieve detailed information about the virtual machine namespace"
vm.NamespaceManager.listNamespaces.label                          = "List namespaces"
vm.NamespaceManager.listNamespaces.summary                        = "Retrieve the list of all namespaces for a virtual machine"
vm.NamespaceManager.sendEventToGuest.label                        = "Send event to the virtual machine"
vm.NamespaceManager.sendEventToGuest.summary                      = "Queue event for delivery to the agent in the virtual machine"
vm.NamespaceManager.fetchEventsFromGuest.label                    = "Fetch events from the virtual machine"
vm.NamespaceManager.fetchEventsFromGuest.summary                  = "Retrieve events sent by the agent in the virtual machine"
vm.NamespaceManager.updateData.label                              = "Update data"
vm.NamespaceManager.updateData.summary                            = "Update key/value pairs accessible by the agent in the virtual machine"
vm.NamespaceManager.retrieveData.label                            = "Retrieve data"
vm.NamespaceManager.retrieveData.summary                          = "Retrieve key/value pairs set by the agent in the virtual machine"
#
host.MessageBusProxy.retrieveInfo.label                           = "Query proxy information"
host.MessageBusProxy.retrieveInfo.summary                         = "Query the common message bus proxy service information"
host.MessageBusProxy.configure.label                           = "Configure proxy"
host.MessageBusProxy.configure.summary                         = "Configure the common message bus proxy service"
host.MessageBusProxy.unconfigure.label                         = "Remove proxy configuration"
host.MessageBusProxy.unconfigure.summary                       = "Remove the common message proxy service configuration and disable the service"
host.MessageBusProxy.start.label                               = "Start proxy"
host.MessageBusProxy.start.summary                             = "Start the common message bus proxy service"
host.MessageBusProxy.stop.label                                = "Stop proxy"
host.MessageBusProxy.stop.summary                              = "Stop the common message bus proxy service"
host.MessageBusProxy.reload.label                              = "Reload proxy"
host.MessageBusProxy.reload.summary                            = "Reload the common message bus proxy service and enable any configuration changes"
#
host.GraphicsManager.setCustomValue.label                      = "Set graphics manager custom value"
host.GraphicsManager.setCustomValue.summary                    = "Sets the value of a custom field of the graphics manager"
host.GraphicsManager.refresh.label                             = "Refresh graphics information"
host.GraphicsManager.refresh.summary                           = "Refresh graphics device information"
host.GraphicsManager.isSharedGraphicsActive.label              = "Check if shared graphics is active"
host.GraphicsManager.isSharedGraphicsActive.summary            = "Check if shared graphics is active on the host"
#
host.CertificateManager.generateCertificateSigningRequest.label   = "Generate a certificate signing request"
host.CertificateManager.generateCertificateSigningRequest.summary = "Generates a certificate signing request (CSR) for the host"
host.CertificateManager.generateCertificateSigningRequestByDn.label   = "Generate a certificate signing request using the specified Distinguished Name"
host.CertificateManager.generateCertificateSigningRequestByDn.summary = "Generates a certificate signing request (CSR) for the host using the specified Distinguished Name"
host.CertificateManager.installServerCertificate.label            = "Install a server certificate"
host.CertificateManager.installServerCertificate.summary          = "Installs a server certificate for the host"
host.CertificateManager.replaceCACertificatesAndCRLs.label        = "Replace CA certificates and certificate revocation lists"
host.CertificateManager.replaceCACertificatesAndCRLs.summary      = "Replaces the CA certificates and certificate revocation lists (CRLs) on the host"
host.CertificateManager.notifyAffectedServices.label              = "Notify services affected by SSL credentials change"
host.CertificateManager.notifyAffectedServices.summary            = "Notifies the host services affected by SSL credentials change"
host.CertificateManager.listCACertificates.label                  = "List CA certificates"
host.CertificateManager.listCACertificates.summary                = "Lists the CA certificates on the host"
host.CertificateManager.listCACertificateRevocationLists.label    = "List CA certificate revocation lists"
host.CertificateManager.listCACertificateRevocationLists.summary  = "Lists the CA certificate revocation lists (CRLs) on the host"
#
CertificateManager.refreshCACertificatesAndCRLs.label      = "Refresh the CA certificates and the CRLs on the host"
CertificateManager.refreshCACertificatesAndCRLs.summary    = "Refreshes the CA certificates and the CRLs on the host"
CertificateManager.refreshCertificates.label               = "Refresh the subject certificate on the host"
CertificateManager.refreshCertificates.summary             = "Refreshes the subject certificate on the host"
CertificateManager.revokeCertificates.label                = "Revoke the subject certificate of a host"
CertificateManager.revokeCertificates.summary              = "Revokes the subject certificate of a host"
#
VasaVvolManager.createVVolDatastore.label                      = "Create Virtual Volume datastore"
VasaVvolManager.createVVolDatastore.summary                    = "Creates a new Virtual Volume datastore"
VasaVvolManager.removeVVolDatastore.label                      = "Remove Virtual Volume datastore"
VasaVvolManager.removeVVolDatastore.summary                    = "Remove Virtual Volume datastore from specified hosts"
VasaVvolManager.updateVasaProviderState.label                  = "Update the VASA provider state"
VasaVvolManager.updateVasaProviderState.summary                = "Updates the VASA provider state for the specified datastores"
VasaVvolManager.updateVasaClientContext.label                  = "Update the VASA client context"
VasaVvolManager.updateVasaClientContext.summary                = "Updates the VASA client context on the host"
###
OverheadService.downloadScript.label                           = "Download overhead computation script"
OverheadService.downloadScript.summary                         = "Download overhead computation scheme script"
OverheadService.downloadHostConfig.label                       = "Download host configuration"
OverheadService.downloadHostConfig.summary                     = "Download host configuration consumed by overhead computation script"
OverheadService.downloadVMXConfig.label                        = "Download VM configuration"
OverheadService.downloadVMXConfig.summary                      = "Download VM configuration consumed by overhead computation script"
#
vm.MetadataManager.clearMetadata.label                            = "Clear metadata"
vm.MetadataManager.clearMetadata.summary                          = "Clear all metadata for the given owner and datastore"
vm.MetadataManager.retrieveAllMetadata.label                      = "Retrieve all metadata"
vm.MetadataManager.retrieveAllMetadata.summary                    = "Retrieve all metadata for the given owner and datastore"
vm.MetadataManager.retrieveMetadata.label                         = "Retrieve specific metadata"
vm.MetadataManager.retrieveMetadata.summary                       = "Retrieve specific metadata for the given owner and list of virtual machine IDs"
vm.MetadataManager.updateMetadata.label                           = "Update specific metadata"
vm.MetadataManager.updateMetadata.summary                         = "Update specific metadata for the given owner and list of virtual machine IDs"
#
host.VsanSystem.addDisks.label                                    = "Add disks to be used by Virtual SAN"
host.VsanSystem.addDisks.summary                                  = "Add the specified disks to be used by Virtual SAN"
host.VsanSystem.getConfig.label                                   = "Get Virtual SAN configuration"
host.VsanSystem.getConfig.summary                                 = "Get the current Virtual SAN configuration for this host"
host.VsanSystem.initializeDisks.label                             = "Initialize disks to be used by Virtual SAN"
host.VsanSystem.initializeDisks.summary                           = "Initialize the specified set of disk mappings to be used by Virtual SAN"
host.VsanSystem.queryDisksForVsan.label                           = "Query disks for use by Virtual SAN"
host.VsanSystem.queryDisksForVsan.summary                         = "Query disks for eligibility to be used by Virtual SAN"
host.VsanSystem.queryHostStatus.label                             = "Retrieve Virtual SAN runtime information"
host.VsanSystem.queryHostStatus.summary                           = "Retrieve the current Virtual SAN runtime information for this host"
host.VsanSystem.removeDisk.label                                  = "Remove disks from use by Virtual SAN"
host.VsanSystem.removeDisk.summary                                = "Remove the specified disks from use by Virtual SAN"
host.VsanSystem.removeDiskMapping.label                           = "Remove disks from use by Virtual SAN"
host.VsanSystem.removeDiskMapping.summary                         = "Remove the specified set of disk mappings from use by Virtual SAN"
host.VsanSystem.update.label                                      = "Update Virtual SAN configuration"
host.VsanSystem.update.summary                                    = "Update the Virtual SAN configuration for this host"
host.VsanSystem.fetchVsanSharedSecret.label                       = "Fetch a ticket to register the Virtual SAN VASA Provider"
host.VsanSystem.fetchVsanSharedSecret.summary                     = "Fetches a ticket to register the VASA Provider for Virtual SAN in the Storage Monitoring Service"
host.VsanSystem.evacuateNode.label                                = "Evacuate this host from Virtual SAN cluster"
host.VsanSystem.evacuateNode.summary                              = "Evaucates specified host from Virtual SAN cluster"
host.VsanSystem.recommissionNode.label                            = "Recommission this host back to Virtual SAN cluster"
host.VsanSystem.recommissionNode.summary                          = "Recommission specified host back to Virtual SAN cluster"
#
host.VsanInternalSystem.abdicateDomOwnership.label                = "Drop ownership of DOM objects"
host.VsanInternalSystem.abdicateDomOwnership.summary              = "Drop ownership of the DOM objects that are owned by this host"
host.VsanInternalSystem.queryCmmds.label                          = "Query CMMDS"
host.VsanInternalSystem.queryCmmds.summary                        = "Queries the CMMDS contents on the Virtual SAN cluster"
host.VsanInternalSystem.queryPhysicalVsanDisks.label              = "Query information about physical Virtual SAN disks"
host.VsanInternalSystem.queryPhysicalVsanDisks.summary            = "Queries information about the physical Virtual SAN disks"
host.VsanInternalSystem.queryVsanObjects.label                    = "Query information about Virtual SAN objects"
host.VsanInternalSystem.queryVsanObjects.summary                  = "Queries information about the Virtual SAN objects in the cluster"
host.VsanInternalSystem.queryObjectsOnPhysicalVsanDisk.label      = "Query information about Virtual SAN objects on the set of physical disks"
host.VsanInternalSystem.queryObjectsOnPhysicalVsanDisk.summary    = "Queries information about the Virtual SAN objects that have at least one component on the given set of physcial disks"
host.VsanInternalSystem.queryVsanStatistics.label                 = "Query Virtual SAN statistics"
host.VsanInternalSystem.queryVsanStatistics.summary               = "Gathers low level statistic counters from the Virtual SAN cluster"
host.VsanInternalSystem.reconfigureDomObject.label                = "Reconfigure the Virtual SAN object"
host.VsanInternalSystem.reconfigureDomObject.summary              = "Reconfigures the given Virtual SAN object"
host.VsanInternalSystem.querySyncingVsanObjects.label             = "Query information about the Virtual SAN objects that are currently synchronizing data"
host.VsanInternalSystem.querySyncingVsanObjects.summary           = "Queries information about the Virtual SAN objects that are updating stale components or synchronizing fresh replicas"
host.VsanInternalSystem.runVsanPhysicalDiskDiagnostics.label      = "Run diagnostics on Virtual SAN physical disks"
host.VsanInternalSystem.runVsanPhysicalDiskDiagnostics.summary    = "Runs Virtual SAN disk diagnostics by checking if objects are successfully created on the given disks"
host.VsanInternalSystem.getVsanObjExtAttrs.label                  = "Get extended attributes of the given Virtual SAN objects"
host.VsanInternalSystem.getVsanObjExtAttrs.summary                = "Gets the extended attributes of the given Virtual SAN objects"
host.VsanInternalSystem.reconfigurationSatisfiable.label          = "Determine if the given Virtual SAN objects can be reconfigured"
host.VsanInternalSystem.reconfigurationSatisfiable.summary        = "Determines if the given Virtual SAN objects can be reconfigured with the given policies in the current cluster state"
host.VsanInternalSystem.canProvisionObjects.label                 = "Determine if the given Virtual SAN objects can be provisioned"
host.VsanInternalSystem.canProvisionObjects.summary               = "Determines if the given Virtual SAN objects can be provisioned with the given policies in the current cluster state"
host.VsanInternalSystem.canDecommission.label                     = "Determine if the given Virtual SAN entities can be decommissioned"
host.VsanInternalSystem.canDecommission.summary                   = "Determines if the given Virtual SAN entities can be decommissioned in the given decommissioning mode"

###
vm.PauseManager.pause.label                                    = "Pause"
vm.PauseManager.pause.summary                                  = "Pauses a virtual machine"
vm.PauseManager.unpause.label                                  = "Unpause"
vm.PauseManager.unpause.summary                                = "Unpauses a virtual machine"
vm.PauseManager.powerOnPaused.label                            = "Power on and pause"
vm.PauseManager.powerOnPaused.summary                          = "Powers on a virtual machine and pauses it immediately"
#
IoFilterManager.installIoFilter.label                          = "Install IO Filter"
IoFilterManager.installIoFilter.summary                        = "Installs an IO Filter on a compute resource"
IoFilterManager.uninstallIoFilter.label                        = "Uninstall IO Filter"
IoFilterManager.uninstallIoFilter.summary                      = "Uninstalls an IO Filter from a compute resource"
IoFilterManager.upgradeIoFilter.label                          = "Upgrade IO Filter"
IoFilterManager.upgradeIoFilter.summary                        = "Upgrades an IO Filter on a compute resource"
IoFilterManager.queryIssue.label                               = "Query IO Filter installation issues"
IoFilterManager.queryIssue.summary                             = "Queries IO Filter installation issues on a compute resource"
IoFilterManager.queryFilterInfo.label                          = "Query IO Filter information"
IoFilterManager.queryFilterInfo.summary                        = "Queries information about the IO Filters installed on a compute resource"
IoFilterManager.resolveInstallationErrorsOnHost.label          = "Resolve IO Filter installation errors on host"
IoFilterManager.resolveInstallationErrorsOnHost.summary        = "Resolves IO Filter installation errors on a host"
IoFilterManager.resolveInstallationErrorsOnCluster.label       = "Resolve IO Filter installation errors on cluster"
IoFilterManager.resolveInstallationErrorsOnCluster.summary     = "Resolves IO Filter installation errors on a cluster"
IoFilterManager.queryDisksUsingFilter.label                    = "Query information about virtual disks using IO Filter"
IoFilterManager.queryDisksUsingFilter.summary                  = "Queries information about virtual disks that use an IO Filter installed on a compute resource"
IoFilterManager.updateIoFilterPolicy.label                     = "Update IO Filter policy"
IoFilterManager.updateIoFilterPolicy.summary                   = "Updates the policy to IO Filter mapping in vCenter Server"
#
nfc.NfcManager.copy.label                                      = "Transfer file(s)"
nfc.NfcManager.copy.summary                                    = "Transfer files or virtual disks between ESX hosts"

